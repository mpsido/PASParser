<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE OD_types [
    <!ELEMENT OD_types      (type+)>
    <!ELEMENT type          (documentation,group*,(enum|field|alternative|bfield|fusion)*,regroupFields*)>
    <!ELEMENT documentation (brief?,description?,values*,examples?,remarks*,minimalValue?,maximalValue?,todo*,warning*,sees*,date?,author?)>
    <!ELEMENT field         (documentation,alternative*,bfield*,regroupFields*)>
    <!ELEMENT bfield        (documentation?)>
    <!ELEMENT enum          (documentation?)>
	<!ELEMENT brief         (#PCDATA)>
    <!ELEMENT description   (#PCDATA)>
    <!ELEMENT author        (#PCDATA)>
    <!ELEMENT date          (#PCDATA)>
    <!ELEMENT remarks       (#PCDATA)>
    <!ELEMENT warning       (#PCDATA)>
    <!ELEMENT todo          (#PCDATA)>
    <!ELEMENT sees          (#PCDATA)>
    <!ELEMENT values        (#PCDATA)>
    <!ELEMENT example       (#PCDATA)>
    <!ELEMENT examples      (example*)>
    <!ELEMENT case          (documentation?,bfield*)>
    <!ELEMENT minimalValue  (#PCDATA)>
    <!ELEMENT maximalValue  (#PCDATA)>
    <!ELEMENT group         (EMPTY|subgroup*)>
    <!ELEMENT subgroup      EMPTY>
    <!ELEMENT alternative   (case+)>
    <!ELEMENT regroupFields (rbfield+)>
    <!ELEMENT rbfield       EMPTY>
	<!ELEMENT fusion        (documentation?)>

    <!ATTLIST regroupFields name    CDATA #REQUIRED>
    <!ATTLIST rbfield       number  CDATA #REQUIRED>
	
    <!ATTLIST type  id       ID                       #REQUIRED>
    <!ATTLIST type  showValue   CDATA                    #IMPLIED>
    <!ATTLIST type  docValue    CDATA                    #IMPLIED>
    <!ATTLIST type  name     CDATA                       #REQUIRED>
    <!ATTLIST type  size     CDATA                       #REQUIRED>
    <!ATTLIST type  padding  CDATA                       #REQUIRED>
    <!ATTLIST type  cat      (enum|struct|value|alias|bitfield|fusion)   #REQUIRED>
    <!ATTLIST type  defined  (true|false)                #IMPLIED>
    <!ATTLIST type  display  (hex8|hex16|hex32|digit|text|raw|dot|dotinv|ascii) "raw">
    <!ATTLIST type  origin   IDREF                       #IMPLIED>
    <!ATTLIST type  deprecated  (true|false)             "false">
	<!ATTLIST type  foreign		CDATA                    #IMPLIED>
	<!ATTLIST type  fkey		CDATA                    #IMPLIED>
	<!ATTLIST type  fvalue		CDATA                    #IMPLIED>
	<!ATTLIST type  fprefix		CDATA                    #IMPLIED>

    <!ATTLIST enum  name     ID                          #REQUIRED>
    <!ATTLIST enum  value    CDATA                       #IMPLIED>
    <!ATTLIST enum  deprecated  (true|false)             "false">

    <!ATTLIST field name     CDATA                       #REQUIRED>
    <!ATTLIST field type     IDREF                       #REQUIRED>
    <!ATTLIST field count    CDATA                       "1">
    <!ATTLIST field bitfield (true|false)                #IMPLIED>
    <!ATTLIST field deprecated  (true|false)             "false">

    <!ATTLIST bfield name     CDATA                       #REQUIRED>
    <!ATTLIST bfield type     IDREF                       #IMPLIED>
    <!ATTLIST bfield size     CDATA                       #REQUIRED>
    <!ATTLIST bfield group    CDATA                       #IMPLIED>
    <!ATTLIST bfield subgroup CDATA                       #IMPLIED>
    <!ATTLIST bfield deprecated  (true|false)             "false">

	<!ATTLIST fusion origin     IDREF                     #REQUIRED>
	<!ATTLIST fusion offset     CDATA                     #REQUIRED>
	<!ATTLIST fusion name     	CDATA                     #REQUIRED>
	
    <!ATTLIST group name    CDATA #REQUIRED>
    <!ATTLIST group id      CDATA #REQUIRED>

    <!ATTLIST subgroup name    CDATA #REQUIRED>
    <!ATTLIST subgroup id      CDATA #REQUIRED>

    <!ATTLIST case name  CDATA #REQUIRED>
    <!ATTLIST case field CDATA #REQUIRED>
    <!ATTLIST case value CDATA #REQUIRED>
]>
<OD_types>
    <type id="RESERVED" name="Reserved" size="1" padding="1" cat="value" defined="true" >
        <documentation>
            <brief>Reserved bits definition</brief>
        </documentation>
    </type>

    <type id="type_0001" name="uint8" size="1" padding="1" cat="value" defined="true" >
        <documentation>
            <brief>basic uint8 value</brief>
        </documentation>
    </type>
    <type id="type_0002" name="sint8" size="1" padding="1" cat="value" defined="true" >
        <documentation>
            <brief>basic sint8 value</brief>
        </documentation>
    </type>
    <type id="type_0003" name="uint16" size="2" padding="2" cat="value" defined="true" >
        <documentation>
            <brief>basic uint16 value</brief>
        </documentation>
    </type>
    <type id="type_0004" name="sint16" size="2" padding="2" cat="value" defined="true" >
        <documentation>
            <brief>basic sint16 value</brief>
        </documentation>
    </type>
    <type id="type_0005" name="uint32" size="4" padding="4" cat="value" defined="true" >
        <documentation>
            <brief>basic uint32 value</brief>
        </documentation>
    </type>
    <type id="type_0006" name="sint32" size="4" padding="4" cat="value" defined="true" >
        <documentation>
            <brief>basic sint32 value</brief>
        </documentation>
    </type>
    <type id="type_0007" name="eSEF_BOOL" size="1" padding="1" cat="enum" defined="true" >
        <documentation>
            <brief>basic boolean type</brief>
        </documentation>
        <enum name="eSEF_FALSE" >
            <documentation>
                <brief>false boolean</brief>
            </documentation>
        </enum>
        <enum name="eSEF_TRUE" >
            <documentation>
                <brief>true boolean</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0008" name="eSEF_STATUS" size="1" padding="1" cat="value" defined="true" >
        <documentation>
            <brief>basic status type</brief>
        </documentation>
    </type>
    <type id="type_0009" name="ePAS_CARD" size="1" padding="1" cat="enum" foreign="OD.xml/board" fkey="bid" fvalue="name" fprefix="ePAS_CARD" >
        <documentation>
            <brief>INET boards list</brief>
        </documentation>
    </type>
    <type id="type_1000" name="eRIDXGroup" size="1" padding="1" cat="enum" foreign="OD.xml/indirect_tables/table" fkey="tab_id" fvalue="name" fprefix="eIND_LIST" >
        <documentation>
            <brief>INET boards list</brief>
        </documentation>
    </type>
    <type id="type_0110" name="tPASIndex" size="4" padding="4" origin="type_0005" cat="alias" defined="true" display="hex32">
        <documentation>
            <brief>Definition of a  PAS Index</brief>
        </documentation>
    </type>
    <type id="type_0111" name="tPASTypeIndex" size="2" padding="2" origin="type_0003" cat="alias" defined="true">
        <documentation>
            <brief>16 higher bits in a PAS Index</brief>
        </documentation>
    </type>
    <type id="type_0112" name="tPASReducedIndex" size="2" padding="2" origin="type_0003" cat="alias" defined="true" display="hex16">
        <documentation>
            <brief>16 lower bits in a PAS Index</brief>
        </documentation>
    </type>
    <type id="type_0113" name="tFilter_t" size="1" padding="1" cat="alias" origin="type_0001">
        <documentation>
            <brief>Number of event occurrence to wait before execute action or taking event into account</brief>
            <remarks>Maximum wait possible : 255 events</remarks>
        </documentation>
    </type>

    <type id="type_0125" name="eDDS_ThresholdValue_t" cat="alias" origin="type_0004" size="2" padding="2">
        <documentation>
            <brief>Define input threshold value</brief>
            <author>AGO</author>
        </documentation>
    </type>

    <type id="type_0121" name="tTimedFilterM_t" size="1" padding="1" cat="alias" origin="type_0001">
        <documentation>
            <brief>Time to wait (in minutes) before execute action or taking event into account</brief>
            <remarks>Maximum wait possible : 255' = 4h15&apos;</remarks>
        </documentation>
    </type>

    <type id="type_0122" name="tLongFilter_t" size="2" padding="2" cat="alias" origin="type_0003">
        <documentation>
            <brief>Number of events to wait before execute action or taking event into account</brief>
            <remarks>Maximum wait possible : 65535 events</remarks>
        </documentation>
    </type>
    <type id="type_0114" name="tLongTimedFilter_t" size="2" padding="2" cat="alias" origin="type_0003">
        <documentation>
            <brief>Time to wait (in seconds) before execute action or taking event into account</brief>
            <remarks>Maximum wait possible : 65 535s = 18h12&apos;15&quot;</remarks>
        </documentation>
    </type>
    <type id="type_0063" name="tSha_t" size="20" padding="1" cat="alias" origin="type_0001" display="hex16">
        <documentation>
            <brief>Result of Sha-1 computation</brief>
        </documentation>
    </type>
    <type id="type_0115" name="tCRC_t" size="2" padding="2" cat="alias" origin="type_0003" display="hex16">
        <documentation>
            <brief>CRC calculated with CRC-16-CCITT algorithm</brief>
        </documentation>
    </type>
    <type id="type_0010" name="tSoftwareVersion_t" cat="struct" size="4" padding="1">
        <documentation>
            <brief>General software version</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <field name="u8Version" type="type_0001" count="1">
            <documentation>
            </documentation>
        </field>
        <field name="u8Revision" type="type_0001" count="1">
            <documentation>
            </documentation>
        </field>
        <field name="u8Index" type="type_0001" count="1">
            <documentation>
            </documentation>
        </field>
		<field name="u8Build" type="type_0001" count="1">
            <documentation>
            </documentation>
        </field>
    </type>
    <type id="type_0264" name="tManufacturedVersion_t" cat="struct" size="5" padding="1">
        <documentation>
            <brief>Manufactured version</brief>
        </documentation>
        <field name="u8PCBVersion" type="type_0001" count="1">
            <documentation>
            <brief>PCB Version</brief>
            </documentation>
        </field>
        <field name="u8ProductionFile" type="type_0001" count="1">
            <documentation>
            <brief>Letter which identifies the production file</brief>
    	    <remarks>ASCII code</remarks>
            </documentation>
        </field>
        <field name="u8Dash" type="type_0001" count="1">
            <documentation>
            <brief>Space allocated for the dash character</brief>
            <remarks>This one is optional</remarks>
	    <remarks>ASCII code</remarks>
            </documentation>
        </field>
        <field name="u8RetroActivity" type="type_0001" count="1">
            <documentation>
            <brief>Number which identifies a retroactive modification</brief>
            <remarks>This one is optional</remarks>
            </documentation>
        </field>
        <field name="u8Upgrade" type="type_0001" count="1">
            <documentation>
            <brief>Letter which identifies an upgrade on this PCB or a prototype</brief>
            <remarks>This one is optional</remarks>
    	    <remarks>ASCII code</remarks>
            </documentation>
        </field>
    </type>
    <type id="type_0011" name="tSerialNumber_t" cat="struct" size="9" padding="1">
        <documentation>
            <brief>type for board serial number</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <field name="xSerialNumber" type="type_0001" count="9">
            <documentation>
            </documentation>
        </field>
    </type>

    <type id="type_0012" name="tSubslotPresences_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>fields use to determine if, in a slot, Subslots are Online/Offline</brief>
            <date>2014-10-29T10:33:55</date>
            <author>agosteau</author>
        </documentation>
        <bfield name="subslot 0 is online" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 0 is online ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 1 is online" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 1 is online ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 2 is online" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 2 is online ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 3 is online" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 3 is online ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 4 is online" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 4 is online ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 5 is online" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 5 is online ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 6 is online" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 6 is online ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 7 is online" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 7 is online ? </brief>
            </documentation>
        </bfield>
    </type>
    <type id="type_0058" name="tSubslotFaults_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>fields use to determine if, in a slot, Subslots are OK or not</brief>
            <date>2014-10-29T10:33:55</date>
            <author>agosteau</author>
        </documentation>
        <bfield name="subslot 0 is OK" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 0 is online/offline as expected ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 1 is OK" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 1 is online/offline as expected ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 2 is OK" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 2 is online/offline as expected ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 3 is OK" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 3 is online/offline as expected ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 4 is OK" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 4 is online/offline as expected ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 5 is OK" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 5 is online/offline as expected ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 6 is OK" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 6 is online/offline as expected ? </brief>
            </documentation>
        </bfield>
        <bfield name="subslot 7 is OK" size="1" type="type_0007">
            <documentation>
                <brief>is the subslot 7 is online/offline as expected ? </brief>
            </documentation>
        </bfield>
    </type>

    <type id="type_0013" name="tPASversion_t" cat="alias" size="4" padding="4" origin="type_0005" display="dotinv">
        <documentation>
            <brief>PAS version</brief>
            <description> </description>
            <author>agosteau</author>
        </documentation>
    </type>
    <type id="type_0014" name="tTimestamp_t" cat="alias" size="4" padding="4" origin="type_0005" >
        <documentation>
            <brief>event timestamps : seconds since 2010-01-01T00:00:00Z</brief>
            <description>
                Number of seconds since 2010-01-01T00:00:00 coded in 32bits
                @iexamples{
                02 Feb 2013 13:37:00 ==> 0x7CDBCF05,
                15 Jun 2025 18:21:39 ==> 0xA3677F06,
                07 Feb 2146 06:28:15 ==> 0xFFFFFFFF
                }
            </description>
            <remarks>Data is wrote in little endian mode</remarks>
            <remarks>The last date possible is the 2146-02-07T06:28:15</remarks>
            <date>2014-10-14T18:03:55</date>
        </documentation>
    </type>

    <type id="type_0015" name="eLedState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Possible LED states</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eLED_OFF" >
            <documentation>
                <brief>LED status is OFF (no light !)</brief>
                <date>2014-10-14T18:03:55</date>
            </documentation>
        </enum>
        <enum name="eLED_ON" >
            <documentation>
                <brief>LED status is ON (light is ON !)</brief>
            </documentation>
        </enum>
        <enum name="eLED_BLINK_SLOW" >
            <documentation>
                <brief>LED is bliking slowy (0.5Hz)</brief>
            </documentation>
        </enum>
        <enum name="eLED_BLINK_FAST" >
            <documentation>
                <brief>LED is bliking fastly (1.0Hz)</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0016" name="eBoardOperationnalState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Main board state</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eBOARD_OPERATIONNAL" >
            <documentation>
                <brief>Board is operational</brief>
            </documentation>
        </enum>
        <enum name="eBOARD_DOWNLOAD" >
            <documentation>
                <brief>Board is downloading its DDS</brief>
            </documentation>
        </enum>
    </type>

    <type id="type_0017" name="tBoardState_t" cat="bitfield" size="2" padding="2">
        <documentation>
            <brief>General board status, available on each modules</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <bfield name="Operational State" size="2" type="type_0016">
            <documentation>
                <brief>Is the board downloading or not ? </brief>
            </documentation>
        </bfield>
        <bfield name="Red led status" size="2" type="type_0015">
            <documentation>
                <brief>Current red led status</brief>
                <description>
                    Normal red led status is ::@@type_0015::E1::name@@&lt;br&gt;
                    if red led status is ::@@type_0015::E2::name@@, then a system fault has been detected
                </description>
            </documentation>
        </bfield>
        <bfield name="Orange led status" size="2" type="type_0015">
            <documentation>
                <brief>Current orange led status</brief>
                <description>
                    Normal orange led status is ::@@type_0015::E1::name@@&lt;br&gt;
                    if orange led status is ::@@type_0015::E2::name@@, then a fault has been detected
                </description>
            </documentation>
        </bfield>
        <bfield name="Blue led status" size="2" type="type_0015">
            <documentation>
                <brief>Current blue led status</brief>
                <description>
                    Normal blue led status is ::@@type_0015::E3::name@@&lt;br&gt;
                    if blue led status is not ::@@type_0015::E3::name@@, then there is a problem with the board Operating system
                </description>
            </documentation>
        </bfield>
        <bfield name="DDS Missing" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if DDS are invalid (or absent) or not</brief>
            </documentation>
        </bfield>
        <bfield name="DDS corrupted" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if DDS in flash are compromised or not</brief>
                <description>The check is done by checking DDS CRC value</description>
                <remarks>If this field is ::@@type_0007::E2::name@@, then __@@type_0017::B7::name@@__ will be also ::@@type_0007::E2::name@@</remarks>
                <todo>DDS in flash ? in RAM ? </todo>
            </documentation>
        </bfield>
        <bfield name="Flash corrupted" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if data in flash are compromised or not</brief>
                <description>The check is done by checking CRC value</description>
            </documentation>
        </bfield>
        <bfield name="Temperature Fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean is true if there is an issue with board temperature</brief>
            </documentation>
        </bfield>
        <bfield name="Supply current fault" size="1">
            <documentation>
                <brief>Boolean is true if there is an issue with board supplied current</brief>
            </documentation>
        </bfield>
        <bfield name="Sequencing fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if one or several tasks are not running</brief>
            </documentation>
        </bfield>
        <bfield name="WD Reset" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if a WD reset occured or not</brief>
            </documentation>
        </bfield>
        <bfield name="Is disable" size="1" type="type_0007">
            <documentation>
                <brief>Module has been disabled</brief>
            </documentation>
        </bfield>
        <regroupFields name="Functional fault">
            <rbfield number="5"/>
            <rbfield number="6"/>
            <rbfield number="7"/>
            <rbfield number="10"/>
            <rbfield number="11"/>
        </regroupFields>
        <regroupFields name="System fault">
            <rbfield number="6"/>
            <rbfield number="7"/>
            <rbfield number="10"/>
            <rbfield number="11"/>
        </regroupFields>
        <regroupFields name="Fault">
            <rbfield number="5"/>
            <rbfield number="6"/>
            <rbfield number="7"/>
            <rbfield number="8"/>
            <rbfield number="9"/>
            <rbfield number="10"/>
        </regroupFields>
        <regroupFields name="DDS Fault">
            <rbfield number="5"/>
            <rbfield number="6"/>
        </regroupFields>
    </type>
    <type id="type_0018" name="eDeviceState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Device state</brief>
            <description>
                Faults start with @@type_0018::E3::name@@
                Section integrity start with @@type_0018::E5::name@@
            </description>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eDEVICE_STANDBY" >
            <documentation>
                <brief>Device does not have any fault, and is ready to work.</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_MISSING" >
            <documentation>
                <brief>Device is missing</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_BAD_ANSWER" >
            <documentation>
                <brief>Device give us a bad answer</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_BAD_ID1" >
            <documentation>
                <brief>Device has a bad first id</brief>
                <remarks>This is an integrity fault</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_BAD_ID2" >
            <documentation>
                <brief>Device has a bad second id</brief>
                <remarks>This is an integrity fault</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_BAD_SIGNATURE" >
            <documentation>
                <brief>Device has a bad signature</brief>
                <remarks>This is an integrity fault</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_INTEGRITY" >
            <documentation>
                <brief>Device answer, but not to the integrity request</brief>
                <remarks>This is an integrity fault</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_RAM" >
            <documentation>
                <brief>Device has reported a RAM fault (integrity check failed)</brief>
                <remarks>This is an integrity fault</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_EEPROM" >
            <documentation>
                <brief>Device has reported an EEPROM fault (integrity check failed)</brief>
                <remarks>This is an integrity fault</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_CRC_DDS" >
            <documentation>
                <brief>Device has reported an integrity fault on its DDS</brief>
                <remarks>This is an integrity fault</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_SETTING_FAIL" >
            <documentation>
                <brief>Device failed to be configured</brief>
                <remarks>This is an integrity fault</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_CRC_FACTORY" >
            <documentation>
                <remarks>This is an integrity fault</remarks>
                <todo>Don't know what to do with that</todo>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_OC" >
            <documentation>
                <brief>Device gave us an Open-circuit fault</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_SC" >
            <documentation>
                <brief>Device gave us an Short-circuit fault</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_SENSOR" >
            <documentation>
                <brief>Device has reported that its sensor is in fault</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_REARM" >
            <documentation>
                <brief>Device failed to be rearmed</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_SYSTEM_FAULT" >
            <documentation>
                <brief>Device have a system fault</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_RADIO_DIALOG" >
            <documentation>
                <remarks>Radio devices  only</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_RADIO_BATTERY" >
            <documentation>
                <remarks>Radio devices  only</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_RADIO_RANGE_LIMIT" >
            <documentation>
                <remarks>Radio devices  only</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_RADIO_OIR_SYSTEM" >
            <documentation>
                <remarks>Radio devices  only</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_SAME_ADDRESS" >
            <documentation>
                <remarks>Radio devices  only</remarks>
                <todo>Don't know what to do with that</todo>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_CONFIG" >
            <documentation>
                <remarks>Radio devices  only</remarks>
                <todo>Don't know what to do with that</todo>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_SETTING" >
            <documentation>
                <remarks>Radio devices  only</remarks>
                <todo>Don't know what to do with that</todo>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_UPDATE_TIME" >
            <documentation>
                <remarks>Radio devices  only</remarks>
                <todo>Don't know what to do with that</todo>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_UNCALIBRATED" >
            <documentation>
                <remarks>Radio devices  only</remarks>
                <todo>Don't know what to do with that</todo>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_BEAM_CUT" >
            <documentation>
                <remarks>Beam detector</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_DAZZLE" >
            <documentation>
                <remarks>Beam detector</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_KEY_OUT" >
            <documentation>
                <remarks>Beam detector</remarks>
            </documentation>
        </enum>
        <enum name="eDEVICE_FAULT_SWITCH" >
            <documentation>
                <remarks>Beam detector</remarks>
            </documentation>
        </enum>
		<enum name="eDEVICE_FAULT_INTEGRITY_4" >
            <documentation>
                <remarks>TNET device integrity fault : program</remarks>
            </documentation>
        </enum>
		<enum name="eDEVICE_FAULT_INTEGRITY_5" >
            <documentation>
                <remarks>TNET device integrity fault : App data</remarks>
            </documentation>
        </enum>
		<enum name="eDEVICE_FAULT_INTEGRITY_6" >
            <documentation>
                <remarks>TNET device integrity fault : Factory data</remarks>
            </documentation>
        </enum>
		<enum name="eDEVICE_FAULT_INTEGRITY_9" >
            <documentation>
                <remarks>TNET device integrity fault : Commissioning</remarks>
            </documentation>
        </enum>
		<enum name="eDEVICE_FAULT_INTEGRITY_10" >
            <documentation>
                <remarks>TNET device integrity fault : Commissioning data</remarks>
            </documentation>
        </enum>
		<enum name="eDEVICE_FAULT_COMMUNICATION_2ND_CHANNEL" >
            <documentation>
                <remarks>for TNET intermediary device. Communication fault on the 2nd network</remarks>
            </documentation>
        </enum>
		<enum name="eDEVICE_FAULT_MISSING_HIDDEN" >
            <documentation>
                <brief>Device handling by an other one is missing.</brief>
            </documentation>
        </enum>
		<enum name="eDEVICE_FAULT_OPEN_ISOLATOR" >
            <documentation>
                <brief>Device has its isolator open</brief>
            </documentation>
        </enum>		
		<enum name="eDEVICE_FAULT_LOW_FIELDBUS_VOLTAGE">
            <documentation>
                <brief>Device measures low voltage on the fielbus</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0019" name="eDeviceDisableMode_t" cat="enum" size="1" padding="1" >
        <documentation>
            <brief>Device disable mode available</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eDEVICE_ENABLED" value="0">
            <documentation>
                <brief>Device states are available</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_DISABLED_MANUALY" value="1">
            <documentation>
                <brief>Device has been disabled by the user. This state has an higher priority than the "Automaticaly disabled"</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_DISABLED_AUTOMATICALY" value="2">
            <documentation>
                <brief>Device has been disabled by the day night mode management</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0020" name="eMBOutputPhyState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>physical state of a device output</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eMB_OUTPUT_PHY_INACTIVE" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eMB_OUTPUT_PHY_SC" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eMB_OUTPUT_PHY_OC" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eMB_OUTPUT_PHY_COMMAND" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0021" name="eMBOutputFuncState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>functional state of a device output</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eMB_OUTPUT_FUNC_IDLE" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eMB_OUTPUT_FUNC_DELAY_CDE" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eMB_OUTPUT_FUNC_EXECUTION" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eMB_OUTPUT_FUNC_EXECUTED" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0023" name="tRawDevicePort_t" cat="struct" size="2" padding="1" origin="type_0001" >
        <documentation>
            <brief>Device IO state</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
		<field name="ePortRawState" type="type_0044">
                    <documentation>
                <brief>This enum provide the device port state.</brief>
                    </documentation>
        </field>
        <field name="ePortRawCmdStatus" type="type_0057">
            <documentation>
                <brief>here is the command status if the port is an output</brief>
            </documentation>
        </field>
    </type>
    <type id="type_0024" name="tDirtyValue_t" cat="alias" size="1" padding="1" origin="type_0001" >
        <documentation>
            <brief>dirty (encrassement) value</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
    </type>
    <type id="type_0025" name="tDirtyLevel_t" cat="alias" size="1" padding="1" origin="type_0001" >
        <documentation>
            <brief>dirty (encrassement) level</brief>
            <todo>Describe more precisely </todo>
            <date>2014-10-14T18:03:55</date>
        </documentation>
    </type>
    <type id="type_0026" name="tMBDeviceSerialNumber_t" cat="alias" size="4" padding="1" origin="type_0001" >
        <documentation>
            <brief>Device serial number (returned by the Device)</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
    </type>
    <type id="type_0027" name="eDeviceType_t" cat="alias" size="1" padding="1" origin="type_0001" >
        <documentation>
            <brief>Device type index </brief>
            <description>
                The @@type_0027::name@@ type is a pointer to a ::tDDSDeviceDefinition object.
                It represent a device configuration, and will help to manage it.
            </description>
            <sees>tDDSDeviceDefinition</sees>
            <date>2014-10-14T18:03:55</date>
        </documentation>
    </type>
    <type id="type_0028" name="eLevelAlarm_t" cat="enum" size="1" padding="1">
        <documentation>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="__eLevelAlarm_TBD__" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0029" name="tLoopInfo_t" cat="struct" size="6" padding="2">
        <documentation>
            <brief>Loop/Line state</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <field name="u16IsolatorsBeforeSC_FromStart" type="type_0003" count="1">
            <documentation>
                <brief>Number of isolators between the start of the loop/line and the short-circuit</brief>
                <remarks>This value has no sens if bit 5 of ::@@type_0029::name@@::@@type_0029::F3::name@@ field is __0__</remarks>
                <minimalValue>0</minimalValue>
                <maximalValue>252</maximalValue>
            </documentation>
        </field>
        <field name="u16IsolatorsBeforeSC_FromEnd" type="type_0003" count="1">
            <documentation>
                <brief>Number of isolators between the end of the loop/line and the short-circuit</brief>
                <remarks>This value has no sens if bit 5 of ::@@type_0029::name@@::@@type_0029::F3::name@@ field is __0__</remarks>
                <minimalValue>0</minimalValue>
                <maximalValue>252</maximalValue>
            </documentation>
        </field>
        <field name="u8Status" type="type_0001" count="1" bitfield="true">
            <documentation>
            </documentation>
            <bfield name="Is a line" size="1" type="type_0007">
                <documentation>
                    <brief>Is a boolean which indicates that the object is a line or a loop</brief>
                </documentation>
            </bfield>
            <bfield name="Has an OC" size="1" type="type_0007">
                <documentation>
                    <brief>Is a boolean which indicates that the line/loop circuit is open or not.</brief>
                </documentation>
            </bfield>
            <bfield name="Has a SC" size="1" type="type_0007">
                <documentation>
                    <brief>Is a boolean which indicates that the line/loop circuit is short-circuited or not.</brief>
                    <remarks>When the field value is ::@@type_0007::E2::name@@, check ::@@type_0029::name@@::@@type_0029::F2::name@@ and ::@@type_0029::name@@::@@type_0029::F1::name@@ to get the SC position</remarks>
                </documentation>
            </bfield>
            <regroupFields name="Fault">
                <rbfield number="2"/>
                <rbfield number="3"/>
            </regroupFields>
        </field>
    </type>
    <type id="type_0030" name="eMBConventionalLine_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>conventional line states</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eCONV_LINE_OC" >
            <documentation>
                <brief>The conventional line is open</brief>
            </documentation>
        </enum>
        <enum name="eCONV_LINE_SC" >
            <documentation>
                <brief>The conventional line has a short-circuit</brief>
            </documentation>
        </enum>
        <enum name="eCONV_LINE_FAULT" >
            <documentation>
                <brief>The conventional line has a fault</brief>
            </documentation>
        </enum>
        <enum name="eCONV_LINE_IDLE" >
            <documentation>
                <brief>The conventional line is Idle (nothing special).</brief>
            </documentation>
        </enum>
        <enum name="eCONV_LINE_PREALARM" >
            <documentation>
                <brief>The conventional line is in Pre-alarm state (Only 1 device is active)</brief>
            </documentation>
        </enum>
        <enum name="eCONV_LINE_ALARM" >
            <documentation>
                <brief>The conventional line is in alarm state (At least 2 devices are active)</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0031" name="tMBInfoDiagLine_t" cat="struct" size="6" padding="2">
        <documentation>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <field name="u16LineImpedance" type="type_0003" count="1">
            <documentation>
            </documentation>
        </field>
        <field name="u16LineCurrent" type="type_0003" count="1">
            <documentation>
            </documentation>
        </field>
        <field name="u16LineVoltage" type="type_0003" count="1">
            <documentation>
            </documentation>
        </field>
    </type>
    <type id="type_0032" name="eRadioBatLevel_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Current device battery status</brief>
            <remarks>Radio device only</remarks>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eRADIO_BAT_OUT_OF_SERVICE" >
            <documentation>
                <brief>battery is out of service, need to be changed as soon as possible</brief>
            </documentation>
        </enum>
        <enum name="eRADIO_BAT_LOW" >
            <documentation>
                <brief>battery level is low, need to charge it, or change the charger if needed</brief>
            </documentation>
        </enum>
        <enum name="eRADIO_BAT_CORRECT" >
            <documentation>
                <brief>battery level is as it must be</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0033" name="tRadioInfoBat_t" cat="struct" size="8" padding="4">
        <documentation>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <field name="eLevel" type="type_0032" count="1">
            <documentation>
                <brief>Current device battery level</brief>
                <remarks>Radio device only</remarks>
            </documentation>
        </field>
        <field name="xTime" type="type_0014" count="1">
            <documentation>
            </documentation>
        </field>
    </type>
    <type id="type_0034" name="tRadioInfosRSSI_t" cat="struct" size="5" padding="1">
        <documentation>
            <brief>Reception signal strength indication of radio device</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <field name="u8Status" type="type_0001" count="1">
            <documentation>
            </documentation>
        </field>
        <field name="u8RSSIInst" type="type_0001" count="1">
            <documentation>
                <brief>RSSI current value</brief>
            </documentation>
        </field>
        <field name="u8RSSIMin" type="type_0001" count="1">
            <documentation>
                <brief>RSSI minimal value recorded</brief>
            </documentation>
        </field>
        <field name="u8RSSIMax" type="type_0001" count="1">
            <documentation>
                <brief>RSSI maximal value recorded</brief>
            </documentation>
        </field>
        <field name="u8RSSIAvg" type="type_0001" count="1">
            <documentation>
                <brief>RSSI average value recorded</brief>
            </documentation>
        </field>
    </type>
	<type id="type_0035" name="eDeviceTestMode_t" cat="enum" size="1" padding="1" >
        <documentation>
            <brief>Device test mode available</brief>
        </documentation>
        <enum name="eDEVICE_TEST_OFF" value="0">
            <documentation>
                <brief>Device states are available</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_WALK_TEST_WITHOUT_SOUNDERS">
            <documentation>
                <brief>The user is performing a Walk test. The test result shall not be used to trigge any outputs execpt device alarm led</brief>
            </documentation>
        </enum>
		<enum name="eDEVICE_WALK_TEST_WITH_SOUNDERS" >
            <documentation>
                <brief>The user is performing a Walk test. Sounders pulse on each new alarm</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_AUTOMATIC_TEST">
            <documentation>
                <brief>An automatic test is performed by the device</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0036" name="tDeviceGeneralState_t" cat="bitfield" size="2" padding="2">
        <documentation>
            <brief>General state of a device, including power supply and tests status</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <bfield name="Device status" size="5" type="type_0018">
            <documentation>
                <brief>Current device general status</brief>
                <description>
                    This status can concern fault and disable status
                </description>
            </documentation>
        </bfield>
        <bfield name="Device is disabled" size="1" type="type_0007">
            <documentation>
                <description>This bit will be set if the device is disabled</description>
            </documentation>
        </bfield>
        <bfield name="AES 1 is fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if AES 1 is in fault, or not</brief>
            </documentation>
        </bfield>
        <bfield name="AES 2 is fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if AES 2 is in fault, or not</brief>
            </documentation>
        </bfield>
        <bfield name="Disable day and night mode" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if __Day and Night__ mode is disabled or not</brief>
            </documentation>
        </bfield>
        <bfield name="Is in test" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if the device is in test or not</brief>
            </documentation>
        </bfield>
        <bfield name="Is in automatic test" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if the device is in automatic test or not</brief>
            </documentation>
        </bfield>
    </type>
    <type id="type_0037" name="eInputState_t" cat="enum" size="1" padding="1" showValue="hex8" docValue="bin8">
        <documentation>
            <brief>Device input and monitored input states</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eINPUT_INACTIVE" value="0">
            <documentation>
                <brief>The input is in an inactive state</brief>
                <remarks>Usable for __raw state__ </remarks>
                <remarks>Usable for __confirmed state__</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_ACTIVE" value="1">
            <documentation>
                <brief>The input is in an active state</brief>
                <remarks>Usable for __raw state__ </remarks>
                <remarks>Usable for __confirmed state__</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_END_SWITCH_ACTIVE" value="2">
            <documentation>
                <remarks>Usable for __confirmed state__</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_BEGIN_SWITCH_ACTIVE" value="3">
            <documentation>
                <remarks>Usable for __confirmed state__</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_ALARM" value="4">
            <documentation>
                <brief>Input is in alarm state</brief>
                <remarks>Usable for __confirmed state__</remarks>
                <remarks>For innova only</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_PREALARM" value="5">
            <documentation>
                <brief>Input is in pre-alarm state. An other element in the conventionnal line must be active to switch into alarm state</brief>
                <remarks>Usable for __confirmed state__</remarks>
                <remarks>Usable for __raw state__ </remarks>
                <remarks>For innova only</remarks>
                <remarks>For conventionnal lines only</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_ALARM_TECH" value="6">
            <documentation>
                <remarks>Usable for __confirmed state__</remarks>
                <remarks>For innova only</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_TEST" value="8">
            <documentation>
                <brief>Input is in test</brief>
                <remarks>You can use this field as a mask to check if input is in test</remarks>
                <remarks>Usable for __confirmed state__</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_ALARM_TEST" value="12">
            <documentation>
                <brief>Input is in alarm state, during a test</brief>
                <remarks>Usable for __confirmed state__</remarks>
                <remarks>For innova only</remarks>
                <remarks>::eINPUT_ALARM_TEST = ::eINPUT_ALARM | ::eINPUT_TEST</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_PREALARM_TEST" value="13">
            <documentation>
                <brief>Input is in pre-alarm state and in test. An other element in the conventionnal line must be active to switch into alarm state</brief>
                <remarks>Usable for __confirmed state__</remarks>
                <remarks>For innova only</remarks>
                <remarks>::eINPUT_PREALARM_TEST = ::eINPUT_PREALARM | ::eINPUT_TEST</remarks>
                <remarks>For conventionnal lines only</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_ALARM_TECH_TEST" value="14">
            <documentation>
                <remarks>::eINPUT_ALARM_TECH_TEST = ::eINPUT_ALARM_TECH | ::eINPUT_TEST</remarks>
                <remarks>Usable for __confirmed state__</remarks>
                <remarks>For innova only</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_FAULT" value="64">
            <documentation>
                <brief>Input has an unknown fault</brief>
                <remarks>You can use this field as a mask to check fault presence</remarks>
                <remarks>Usable for __raw state__</remarks>
                <remarks>Usable for __confirmed state__</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_FAULT_SC" value="80">
            <documentation>
                <brief>Input has a short-circuit fault</brief>
                <remarks>Usable for __confirmed state__</remarks>
                <remarks>Usable for __raw state__ </remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_FAULT_OC" value="96">
            <documentation>
                <brief>Input circuit is open (fault)</brief>
                <remarks>Usable for __confirmed state__</remarks>
                <remarks>Usable for __raw state__ </remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_FAULT_TECH" value="112">
            <documentation>
                <brief>Input has a technical (custom) fault</brief>
                <remarks>Usable for __confirmed state__</remarks>
                <remarks>For innova only</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_FAULT_TECH_TEST" value="120">
            <documentation>
                <brief>Input has a technical (custom) fault and test flag is set</brief>
                <remarks>::eINPUT_FAULT_TECH_TEST = ::eINPUT_FAULT_TECH | ::eINPUT_TEST</remarks>
                <remarks>Usable for __confirmed state__</remarks>
                <remarks>For innova only</remarks>
            </documentation>
        </enum>
        <enum name="eINPUT_DISABLE" value="128">
            <documentation>
                <brief>Input has been disabled</brief>
                <remarks>You can use this field as a mask to check if the input is disable or not</remarks>
                <remarks>Usable for __confirmed state__</remarks>
                <remarks>Usable for __raw state__ </remarks>
            </documentation>
        </enum>
    </type>
    <type id="type_0038" name="eDeviceOutputFctState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Device output functional states</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eP_OUTPUT_IDLE" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eP_OUTPUT_CMD_DELAY" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eP_OUTPUT_CMD_IN_PROGRESS" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eP_OUTPUT_CMDED" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0039" name="eDeviceOuputPhyState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Device output physical state</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eP_OUTPUT_PHY_INACTIVE" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eP_OUTPUT_PHY_CC" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eP_OUTPUT_PHY_CO" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eP_OUTPUT_PHY_COMMANDE" >
            <documentation>
            </documentation>
        </enum>
    </type>
	<type id="type_0044" name="eDevicePortState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Device port state. the Port can be an Input or an output</brief>
        </documentation>
        <enum name="ePORT_STATE_STANDBY" value="0">
            <documentation>
				<brief>The input or output has no failure</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_ALARM" value="1">
            <documentation>
				<brief>The port is in input and there is an Alarm</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_PRE_ALARM" value="2">
            <documentation>
				<brief>The port is in input and there is a Pre Alarm</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_ACTIVE_1" value="3">
            <documentation>
				<brief>For not zoned Generic input</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_ACTIVE_2" value="4">
            <documentation>
				<brief>For not zoned Generic input</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_TECHNICAL_ALARM">
            <documentation>
				<brief>The port is in input and there is a Technical Alarm</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_TECHNICAL_FAULT">
            <documentation>
				<brief>The port is in input and there is a Technical Fault</brief>
            </documentation>
        </enum>
				
		
		<enum name="ePORT_STATE_OPEN_CIRCUIT_HIDDEN" value = "62">
            <documentation>
				<brief>Open circuit fault for both GENI GENO when monitoring open circuit is off </brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_SHORT_CIRCUIT_HIDDEN" value = "63">
            <documentation>
				<brief>Short circuit fault for both GENI GENO when monitoring short circuit is off</brief>
            </documentation>
        </enum>
				
		<enum name="ePORT_STATE_FIRST_FAILURE"  value = "64">
            <documentation>
				<brief>First enum value for device port fault</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_SYNC_SQUARE_SIGNAL_JITTER"  value = "64">
            <documentation>
				<brief>Jitter is too high for square signal</brief>
            </documentation>
        </enum>
        <enum name="ePORT_STATE_CMD_NON_COMPLIANT" >
            <documentation>
                <brief>Output command is not compliant with command order</brief>
            </documentation>
        </enum>
        <enum name="ePORT_STATE_SYNCHRONISATION_CLOCK_FAILURE" value="65" >
            <documentation>
				<brief>The output command can't be synchronized</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_OVERLOAD" value = "233">
            <documentation>
				<brief>Current overload</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_NOT_CALIBRATED" value = "234">
            <documentation>
				<brief>the line need to be commissioned</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_ROLLING_BLACKOUT" value = "235">
            <documentation>
				<brief>The line is not powered</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_POWER_SUPPLY_FAULT" value = "236">
            <documentation>
				<brief>The line is not powered</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_RESISTIVE_OPEN_CIRCUIT" value = "238">
            <documentation>
				<brief>resistive open circuit (EN54-13 mgt)</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_RESISTIVE_SHORT_CIRCUIT" value = "239">
            <documentation>
				<brief>resistive short circuit (EN54-13 mgt)</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_LOW_BATTERIE" value = "240">
            <documentation>
				<brief>Battery level is critical</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_BATTERIE_FAULT" value = "241">
            <documentation>
				<brief>Battery is empty or misssing</brief>
            </documentation>
        </enum>	
		<enum name="ePORT_STATE_NO_POWER" value = "242">
            <documentation>
				<brief>PSE in not plug or can't deliver any power</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_OVERVOLTAGE" value = "243">
            <documentation>
				<brief>PSE voltage is too high</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_UNDERVOLTAGE" value = "244">
            <documentation>
				<brief>PSE voltage is too low</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_DAZZLE" value = "245">
            <documentation>
				<brief>Beam device is dazzled</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_INTERUPTED_BEAM" value = "246">
            <documentation>
				<brief>Beam device can't reach the reflector</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_DIRTY" value = "247">
            <documentation>
				<brief>Device optical background level is too high</brief>
            </documentation>
        </enum>	
		<enum name="ePORT_STATE_SOUNDER_FAILURE" value = "248">
            <documentation>
				<brief>Sounders fault</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_CO_SENSOR_FAILURE" value = "249">
            <documentation>
				<brief>Detection device fault</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_THERMIC_SENSOR_FAILURE" value = "250">
            <documentation>
				<brief>Detection device fault</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_OPTICAL_SENSOR_FAILURE" value = "251">
            <documentation>
				<brief>Detection device fault</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_IMPEDANCE_FAILURE" value = "252">
            <documentation>
				<brief>EN54-13 fault for both GENI GENO</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_OPEN_CIRCUIT" value = "253">
            <documentation>
				<brief>Open circuit fault for both GENI GENO</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_SHORT_CIRCUIT" value = "254">
            <documentation>
				<brief>Short circuit fault for both GENI GENO</brief>
            </documentation>
        </enum>
		<enum name="ePORT_STATE_FAILURE" value = "255">
            <documentation>
				<brief>Default fault value when the root cause is unknown</brief>
            </documentation>
        </enum>        
    </type>
	<type id="type_0057" name="eDevicePortCmdStatus_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Output command status</brief>
        </documentation>
        <enum name="ePORT_CMD_OFF" value="0">
        <documentation>
				<brief>The output is not commanded</brief>
        </documentation>
        </enum>
		<enum name="ePORT_CMD_LOW_RATE_BLINKING" value="1">
                    <documentation>
				<brief>Used by sounders or LED. Rate value shall be defined</brief>
                    </documentation>
        </enum>
		<enum name="ePORT_CMD_HIGH_RATE_BLINKINK" value="2">
                    <documentation>
				<brief>Used by sounders or LED. Rate value shall be defined</brief>
                    </documentation>
        </enum>
		<enum name="ePORT_CMD_ON" value="3">
                    <documentation>
				<brief>The output is commanded</brief>
                    </documentation>
        </enum>
        <enum name="ePORT_CMD_DELAYED" value="4">
                    <documentation>
				<brief>The command has been sent to the port, but the device is configured with a delay</brief>
                    </documentation>
        </enum>        
        <enum name="ePORT_CMD_TERMINATED" value="5">
                    <documentation>
				<brief>The device has been configured with a command duration or sensitive to an end switch input. The command has been executed</brief>
                    </documentation>
        </enum>
		<enum name="ePORT_CMD_IN_PROGRESS" value="6">
                    <documentation>
				<brief>The command is in execution / in progress</brief>
                    </documentation>
        </enum>	
    </type>
    <type id="type_0022" name="tDevicePort_t" cat="struct" size="3" padding="1">
                    <documentation>
            <brief>Device state</brief>
            <date>2014-10-14T18:03:55</date>
                    </documentation>
        <field name="ePortMode" type="type_0019">
                    <documentation>
                <brief>Switch which tell if the port is disabled / in test / normal </brief>
                    </documentation>
        </field>
        <field name="ePortState" type="type_0044">
                    <documentation>
                <brief>This enum provide the device port state.</brief>
                    </documentation>
        </field>
        <field name="ePortCmdStatus" type="type_0057">
            <documentation>
                <brief>here is the command status if the port is an output</brief>
            </documentation>
        </field>
    </type>
    <type id="type_0041" name="eGroupDASState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>security  /safety state of a group</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eGP_DAS_STANDBY" >
            <documentation>
                <brief>DAS is in standby state: DAS is not commanded and is in right position (end switch contact is active)</brief>
            </documentation>
        </enum>
        <enum name="eGP_DAS_STANDBY_FAULT" >
            <documentation>
                <brief>DAS is in standby fault state: DAS is not commanded and has leave its position (its standby position) (end switch contact is inactive)</brief>
            </documentation>
        </enum>
        <enum name="eGP_DAS_SECURITY_ON" >
            <documentation>
                <brief>DAS is commanded and end switch contact is active. DAS is its security position</brief>
            </documentation>
        </enum>
        <enum name="eGP_DAS_SECURITY_FAULT" >
            <documentation>
                <brief>DAS is commanded and end switch contact is not active (after a certain delay after command). DAS should be in security position but is not </brief>
            </documentation>
        </enum>
        <enum name="eGP_DAS_EXECUTION" >
            <documentation>
                <brief>DAS is commanded and end switch contact is not active yet: command is in progress or in delay</brief>
            </documentation>
        </enum>
        <enum name="eGP_DAS_STANDBY_UNKNOWN" >
            <documentation>
                <brief>DAS is in standby unknown: at least one DAS is not commanded begin switch is in SC or OC</brief>
            </documentation>
        </enum>
        <enum name="eGP_DAS_STANDBY_NA" >
            <documentation>
                <brief>DAS switch state is not applicable</brief>
            </documentation>
        </enum>
        <enum name="eGP_DAS_STANDBY_FAULT_WITH_SECURITY" >
            <documentation>
                <brief>Used for report entry only - entry report indicate that there is a standby fault and a security state</brief>
            </documentation>
        </enum>
        <enum name="eGP_DAS_STANDBY_FAULT_WITH_SECURITY_FAULT" >
            <documentation>
                <brief>Used for report entry only - entry report indicate that there is a standby fault and a security fault state</brief>
            </documentation>
        </enum>

    </type>
    <type id="type_0042" name="eGroupStateMain_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>main state for all types of group</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eGP_STATE_MAIN_VEILLE" value="0">
            <documentation>
                <brief>Groupe is idle</brief>
            </documentation>
        </enum>
        <enum name="eGP_STATE_MAIN_VEILLE_WAIT" value="1">
            <documentation>
                <brief>Group is configured in "and 2" mode with a delay and the delay is over.
                This state is hidden from the user (signalisation is like eGP_STATE_MAIN_VEILLE)</brief>
            </documentation>
        </enum>
        <enum name="eGP_STATE_MAIN_VEILLE_DELAY" value="2">
            <documentation>
                <brief>Group is configured in "and 2" mode with a delay. Only a trigger is active, so the group is in delay.
                This state is hidden from the user (signalisation is like eGP_STATE_MAIN_VEILLE)</brief>
            </documentation>
        </enum>
        <enum name="eGP_STATE_MAIN_DISABLED" value="4">
            <documentation>
                <brief>The group is disable</brief>
            </documentation>
        </enum>
        <enum name="eGP_STATE_MAIN_ACTIVE_DELAY" value="8">
            <documentation>
                <brief>The group has been triggered but don't command the triggered because group has an execution delay.</brief>
            </documentation>
        </enum>
        <enum name="eGP_STATE_MAIN_ACTIVE_DELAY_2" value="9">
            <documentation>
                <brief>The group has been triggered but don't command the triggered because group is blocked.</brief>
            </documentation>
        </enum>
        <enum name="eGP_STATE_MAIN_ACTIVE_MANU" value="10">
            <documentation>
                <brief>The group has been triggered but it is in manual mode.
                so the triggered are not commanded. The led associated to evacuation is blinking.</brief>
            </documentation>
        </enum>
        <enum name="eGP_STATE_MAIN_ACTIVE_BLOCKED" value="11">
            <documentation>
                <brief>The group has been triggered but don't command the triggered because group is blocked.</brief>
            </documentation>
        </enum>
        <enum name="eGP_STATE_MAIN_ACTIVE_WAIT" value="12">
            <documentation>
                <brief>The group has been triggered but don't command the triggered because group is waited.</brief>
            </documentation>
        </enum>
        <enum name="eGP_STATE_MAIN_COMMANDED" value="16">
            <documentation>
                <brief>group command the triggers (except if test state is active)</brief>
            </documentation>
        </enum>
        <enum name="eGP_STATE_MAIN_COMMANDED_WAIT" value="17">
            <documentation>
                <brief>group command the trigger (except if test state is active) and a reset occur. It might stay is command state
                if trigger is still active is few seconds. This state is hidden from the user (signalisation is like eGP_STATE_MAIN_COMMANDED) </brief>
            </documentation>
        </enum>
        <enum name="eGP_STATE_MAIN_COMMANDED_TEST" value="18">
            <documentation>
                <brief>group command the trigger in test mode </brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0043" name="eGroupOriginCmd_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Origins possible of a group command</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eMB_ORIGIN_UNKNOWN" >
            <documentation>
                <brief>The command origin is unknown. This should never happen !</brief>
            </documentation>
        </enum>
        <enum name="eMB_ORIGIN_AUTO" >
            <documentation>
                <brief>The command origin is the mgg itself, due to an other group for instance</brief>
            </documentation>
        </enum>
        <enum name="eMB_ORIGIN_JBUS" >
            <documentation>
                <brief>The command origin is an ECS through JBUS</brief>
            </documentation>
        </enum>
        <enum name="eMB_ORIGIN_FAFP" >
            <documentation>
                <brief>The command origin is an FAFP through SDO request</brief>
            </documentation>
        </enum>
        <enum name="eMB_ORIGIN_DEVICE" >
        <documentation>
                <brief>The command origin is a device input through SDO request</brief>
        </documentation>
        </enum>
    </type>
    <type id="type_0045" name="eBuzzerState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>buzzer state</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eBUZZER_OFF" value="0">
            <documentation>
                <brief>Buzzer produces no sound</brief>
            </documentation>
        </enum>
        <enum name="eBUZZER_ON" >
            <documentation>
                <brief>Buzzer produces a sound continuously</brief>
            </documentation>
        </enum>
        <enum name="eBUZZER_DISCONTINUOUS_FAST" >
            <documentation>
                <brief>Buzzer produces a sound discontinuously fast</brief>
            </documentation>
        </enum>
        <enum name="eBUZZER_DISCONTINUOUS_SLOW" >
            <documentation>
                <brief>Buzzer produces a sound discontinuously slow</brief>
            </documentation>
        </enum>

    </type>
    <type id="type_0046" name="tEquipmentState_t" cat="bitfield" size="4" padding="4">
        <documentation>
            <brief>state of the equipment (synthesis)</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <bfield name="Buzzer state" size="2" type="type_0045">
            <documentation>
                <brief>Current buzzer status of the equipment</brief>
            </documentation>
        </bfield>
        <bfield name="Has a link fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if a link fault has been detected inside the equipment</brief>
            </documentation>
        </bfield>
        <bfield name="Is disable" size="1" type="type_0007">
            <documentation>
                <brief>Equipment has been disabled (??????)</brief>
            </documentation>
        </bfield>
        <bfield name="bdayNight" size="1" type="type_0007">
            <documentation>
                <brief>(??????)</brief>
                <todo>Change name when we know what to do with that</todo>
            </documentation>
        </bfield>
        <bfield name="Is in test" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if the equipment is in test or no</brief>
            </documentation>
        </bfield>
        <bfield name="Has a system fault" size="1" type="type_0007">
            <documentation>
                <brief>boolean which indicates if a system fault has been detected inside the equipment</brief>
            </documentation>
        </bfield>
        <bfield name="Secondary DAS Power Fault" size="1" type="type_0007">
            <documentation>
                <brief>boolean which indicates if there's at least a das that lost one of its energy source</brief>
            </documentation>
        </bfield>
        <bfield name="Primary DAS Power Fault" size="1" type="type_0007">
            <documentation>
                <brief>boolean which indicates if there's at least a das that lost all of its energy source</brief>
            </documentation>
        </bfield>
        <bfield name="Secondary Dialog Fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates which a trouble has been detected using the secondary dialog method</brief>
            </documentation>
        </bfield>
        <bfield name="Primary dialog fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates which a trouble has been detected using the primary dialog method</brief>
            </documentation>
        </bfield>
        <bfield name="Battery Fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates which trouble has been detected with the batteries</brief>
            </documentation>
        </bfield>
        <bfield name="Power supply fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates which trouble has been detected with the main power supply</brief>
            </documentation>
        </bfield>
        <bfield name="Fault" size="1" type="type_0007">
            <documentation>
                <brief>boolean which indicates if a fault has been detected inside the equipment</brief>
            </documentation>
        </bfield>
        <bfield name="balarmTechWoBuz" size="1" type="type_0007">
            <documentation>
                <brief>??????????</brief>
                <todo>Change name when we know what to do with that</todo>
            </documentation>
        </bfield>
        <bfield name="balarmTechBuz" size="1" type="type_0007">
            <documentation>
                <brief>??????????</brief>
                <todo>Change name when we know what to do with that</todo>
            </documentation>
        </bfield>
        <bfield name="Pre-alarm" size="1" type="type_0007">
            <documentation>
                <brief>boolean which indicates if the equipment is in pre-alarm state or not</brief>
            </documentation>
        </bfield>
        <bfield name="Alarm" size="1" type="type_0007">
            <documentation>
                <brief>boolean which indicates if the equipment is in alarm state or not</brief>
            </documentation>
        </bfield>
        <bfield name="Security" size="1" type="type_0007">
            <documentation>
                <brief>boolean which indicates if one of the group is in security</brief>
            </documentation>
        </bfield>
        <bfield name="Security fault" size="1" type="type_0007">
            <documentation>
                <brief>boolean which indicates if one of the group is in security fault</brief>
            </documentation>
        </bfield>
        <bfield name="Standby fault" size="1" type="type_0007">
            <documentation>
                <brief>boolean which indicates if one of the group is in standby fault</brief>
            </documentation>
        </bfield>
        <bfield name="activation" size="1" type="type_0007">
            <documentation>
                <brief>boolean which indicates if one of the group is activated</brief>
            </documentation>
        </bfield>
        <bfield name="technical alarm" size="1" type="type_0007">
            <documentation>
                <brief>boolean which indicates if one device in in technical alarm</brief>
            </documentation>
        </bfield>
        <bfield name="technical fault" size="1" type="type_0007">
            <documentation>
                <brief>boolean which indicates if one device in in technical fault</brief>
            </documentation>
        </bfield>
        <bfield name="missing point" size="1" type="type_0007">
            <documentation>
                <brief>boolean which indicates if one point is missing</brief>
            </documentation>
        </bfield>
        <regroupFields name="General Dialog Fault">
            <rbfield number="9"/>
            <rbfield number="10"/>
        </regroupFields>
        <regroupFields name="General DAS Fault">
            <rbfield number="7"/>
            <rbfield number="8"/>
        </regroupFields>
        <regroupFields name="General Fault">
            <rbfield number="6"/>
            <rbfield number="7"/>
            <rbfield number="8"/>
            <rbfield number="9"/>
            <rbfield number="10"/>
            <rbfield number="11"/>
            <rbfield number="12"/>
            <rbfield number="24"/>
        </regroupFields>
    </type>
    <type id="type_0047" name="ePowerSupplyState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Power supply state from mEAS</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="ePOWER_SUPPLY_OK" >
            <documentation>
                <brief>Tension level given by mEAS module is as it should be</brief>
            </documentation>
        </enum>
        <enum name="ePOWER_SUPPLY_HIGH" >
            <documentation>
                <brief>Tension level given by mEAS module is higher than the level it should be</brief>
            </documentation>
        </enum>
        <enum name="ePOWER_SUPPLY_LOW" >
            <documentation>
                <brief>Tension level given by mEAS module is lower than the level it should be</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0048" name="eBatteryState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>battery state from mEAS</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eBAT_OK" >
            <documentation>
                <brief>battery level is ok (up to thresholds)</brief>
            </documentation>
        </enum>
        <enum name="eBAT_LOW" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eBAT_HIGH" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eBAT_PRE_CUT" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0049" name="tMEAESState_t" cat="bitfield" size="2" padding="2">
        <documentation>
            <brief>Global power supply state from MEAES</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <bfield name="Power supply state" size="2" type="type_0047">
            <documentation>
                <brief>Current power supply state</brief>
            </documentation>
        </bfield>
        <bfield name="Input1 in fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if MEAES Input1 is in fault, or not</brief>
            </documentation>
        </bfield>
        <bfield name="Input2 in fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if MEAES Input2 is in fault, or not</brief>
            </documentation>
        </bfield>
        <bfield name="Battery state" size="2" type="type_0048">
            <documentation>
                <brief>Current battery supply state</brief>
            </documentation>
        </bfield>
        <bfield name="Battery resistance fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if there is an issue with battery internal resistance, or not</brief>
            </documentation>
        </bfield>
        <bfield name="Battery charger fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if there is an issue with battery charger, or not</brief>
            </documentation>
        </bfield>
        <bfield name="Earth fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if there is an earth fault</brief>
            </documentation>
        </bfield>
    </type>
    <type id="type_0130" name="tMEAESDiagState_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>Dialogue state from MEAES</brief>
            <date>2015-3-10T18:03:55</date>
            <author>AES</author>
        </documentation>
        <bfield name="bDiagFaultMEAES1" size="1" type="type_0007">
            <documentation>
                <brief>CAN Dialogue fault with MEAES #1 is present or not</brief>
            </documentation>
        </bfield>
        <bfield name="bDiagFaultMEAES2" size="1" type="type_0007">
            <documentation>
                <brief>CAN Dialogue fault with MEAES #2 is present or not</brief>
            </documentation>
        </bfield>
    </type>
    <type id="type_0131" name="tAES_State_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>AES States</brief>
            <date>2015-3-10T18:03:55</date>
            <author>AGO</author>
        </documentation>
        <bfield name="AES1A is missing" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: AES1A is missing from the backplane</brief>
            </documentation>
        </bfield>
        <bfield name="AES1B is missing" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: AES1B is missing from the backplane</brief>
            </documentation>
        </bfield>
        <bfield name="AES2A is missing" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: AES2A is missing from the backplane</brief>
            </documentation>
        </bfield>
        <bfield name="AES2B is missing" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: AES2B is missing from the backplane</brief>
            </documentation>
        </bfield>
    </type>
    <type id="type_0050" name="tMGG_PowerSupplyState_t" cat="struct" size="6" padding="2">
        <documentation>
            <brief>MGG Power supply states</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <field name="xAESStates" type="type_0131" count="1">
            <documentation>
                <brief>General state of all MGG AES</brief>
            </documentation>
        </field>
        <field name="xMEAESDiagState" type="type_0130" count="1">
            <documentation>
                <brief>MEAES Diag state</brief>
            </documentation>
        </field>
        <field name="xMEAESState" type="type_0049" count="2">
            <documentation>
                <brief>General state of all MEAES connected to MGG board</brief>
            </documentation>
        </field>
    </type>
    <type id="type_0051" name="eRelayState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>relay main state</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eRELAY_STATE_INACTIVE" value="0">
            <documentation>
                <brief>go to the absolute inactive position</brief>
            </documentation>
        </enum>
        <enum name="eRELAY_STATE_ACTIVE" >
            <documentation>
                <brief>go to the absolute active position</brief>
            </documentation>
        </enum>
        <enum name="eRELAY_STATE_RELAY_UNDEF" >
            <documentation>
                <brief>Relay is in an undefined position due to a feedback error</brief>
            </documentation>
        </enum>
        <enum name="eRELAY_STATE_RELAY_ENABLED" >
            <documentation>
                <brief>Relay has been switch from disable to enable state and must go back to the previous state (before it was set disabled)</brief>
            </documentation>
        </enum>
        <enum name="eRELAY_STATE_RELAY_DISABLED" >
            <documentation>
                <brief>Relay has been switch from enable to disable state and must be set to the safety position</brief>
            </documentation>
        </enum>
        <enum name="eRELAY_STATE_RELAY_UNUSED" >
            <documentation>
                <brief>Unused relay must be set as NC relay</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0052" name="tRelayState_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <bfield name="emainState" size="7" type="type_0051">
            <documentation>
            </documentation>
        </bfield>
        <bfield name="bfault" size="1">
            <documentation>
            </documentation>
        </bfield>
    </type>
    <type id="type_0053" name="tMBLineStatistics_t" cat="struct" size="2" padding="1">
        <documentation>
            <brief>Line statistics</brief>
            <date>2014-11-04T13:26:55</date>
        </documentation>
        <field name="u8ReemissionCount"  type="type_0001" count="1">
            <documentation>
                <brief>Reemission count</brief>
                <remarks>A reemission occurred when a data cannot be send properly</remarks>
            </documentation>
        </field>
        <field name="u8ErrorCount"  type="type_0001" count="1">
            <documentation>
                <brief>Number of data send with error</brief>
            </documentation>
        </field>
    </type>
    <type id="type_0054" name="tM8IOState_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <bfield name="aesState" size="2" type="type_0001">
            <documentation>
            </documentation>
        </bfield>
    </type>
    <type id="type_0055" name="eOutputMainState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>output main state for M8IO output</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eOUTPUT_STATE_STANDBY" value="0">
            <documentation>
            </documentation>
        </enum>
        <enum name="eOUTPUT_STATE_SC" value="5">
            <documentation>
            </documentation>
        </enum>
        <enum name="eOUTPUT_STATE_OC" value="6">
            <documentation>
            </documentation>
        </enum>
        <enum name="eOUTPUT_STATE_DISABLE" value="8">
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0060" name="tM1ZEIOState_t" cat="struct" size="4" padding="4">
        <documentation>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <field name="__TBD__" type="type_0005" count="1">
            <documentation>
            </documentation>
        </field>
    </type>
    <type id="type_0061" name="eZoneMainState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>zone main state</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eZONE_QUIESCENT" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eZONE_DISABLED" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eZONE_ALARM" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eZONE_PRE_ALARM" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eZONE_UNSIGNALIZED_PRE_ALARM" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eZONE_TECHNICAL_ALARM" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eZONE_TECHNICAL_FAULT" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0062" name="eZoneTestMode_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>zone test mode</brief>
        </documentation>
        <enum name="eZONE_TEST_OFF" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eZONE_TEST_WITH_SOUNDERS" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eZONE_TEST_WITHOUT_SOUNDERS" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0064" name="tJbusTable_t" cat="struct" size="250" padding="1">
        <documentation>
            <brief>JBUS table object : JBUS table of an ECS (device or zone table)</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <field name="table" type="type_0001" count="250">
            <documentation>
            </documentation>
        </field>
    </type>
    <type id="type_0065" name="eInputRawState_t" cat="enum" size="1" padding="1"> <!-- SyRS_ELITE_500 -->
        <documentation>
            <brief>input state return by M8IO, FAFP</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eINPUT_RAW_STATE_INACTIVE" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eINPUT_RAW_STATE_ACTIVE_PREALARM" >
            <documentation>
                <brief>Same as ::@@type_0065::E3::name@@, but has to be managed on conventional lines if only on device is Active.</brief>
            </documentation>
        </enum>
        <enum name="eINPUT_RAW_STATE_ACTIVE" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eINPUT_RAW_STATE_CO" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eINPUT_RAW_STATE_CC" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eINPUT_RAW_STATE_DISABLE" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0067" name="tFacetState_t" cat="bitfield" size="2" padding="2">
        <documentation>
            <brief>Possible Facet LED state</brief>
            <description>There is at maximum 8 leds per facet. All LEDs are counted __logically__ (LED 3 is the third LED from TOP of the facet, even if it's not the third of the column). If some LEDs are not used, ::@@type_0015::E1::name@@ must be set to these LEDs.</description>
            <remarks>If the 5th LED is not used, then LEDs 6/7 and 8 are also not used.</remarks>
            <remarks>DEPRECATED</remarks>
            <date>2014-10-14T18:03:55</date>
            <author>AGO</author>
        </documentation>
        <bfield name="LED 1" size="2" type="type_0015" >
            <documentation>
                <description>Status of the facet first LED (from Top)</description>
            </documentation>
        </bfield>
        <bfield name="LED 2" size="2" type="type_0015" >
            <documentation>
                <description>Status of the facet second LED (from Top)</description>
            </documentation>
        </bfield>
        <bfield name="LED 3" size="2" type="type_0015" >
            <documentation>
                <description>Status of the facet third LED (from Top)</description>
            </documentation>
        </bfield>
        <bfield name="LED 4" size="2" type="type_0015" >
            <documentation>
                <description>Status of the facet fourth LED (from Top)</description>
            </documentation>
        </bfield>
        <bfield name="LED 5" size="2" type="type_0015" >
            <documentation>
                <description>Status of the facet fifth LED (from Top)</description>
            </documentation>
        </bfield>
        <bfield name="LED 6" size="2" type="type_0015" >
            <documentation>
                <description>Status of the facet sixth LED (from Top)</description>
            </documentation>
        </bfield>
        <bfield name="LED 7" size="2" type="type_0015" >
            <documentation>
                <description>Status of the facet seventh LED (from Top)</description>
            </documentation>
        </bfield>
        <bfield name="LED 8" size="2" type="type_0015" >
            <documentation>
                <description>Status of the facet eighth LED (from Top)</description>
            </documentation>
        </bfield>
    </type>
    <type id="type_0068" name="tFAFPState_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>FAFP board state</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
            <bfield name="baesInput1Fault" size="1">
                <documentation>
                </documentation>
            </bfield>
            <bfield name="baesInput2Fault" size="1">
                <documentation>
                </documentation>
            </bfield>
           <bfield name="Copro dialog fault" size="1">
                <documentation>
					<brief> bit is set: communication problem with copro</brief>
                </documentation>
            </bfield>
            <regroupFields name="AES fault">
                <rbfield number="1"/>
                <rbfield number="2"/>
            </regroupFields>
    </type>
    <type id="type_0069" name="eEqType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>equipment type identification numbers</brief>
            <description>This identifications numbers describe the equipment type, and also, the third IP address byte value.</description>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eEQ_TYPE_UNKNOWN" value="0">
            <documentation>
                <brief>If an equipment got this identification number, then it is not configured yet</brief>
            </documentation>
        </enum>
        <enum name="eEQ_TYPE_ECS" value="1">
            <documentation>
                <brief>If an equipment got this identification number, then its configuration concern a ECS equipment</brief>
            </documentation>
        </enum>
        <enum name="eEQ_TYPE_CMSI" value="2">
            <documentation>
                <brief>If an equipment got this identification number, then its configuration concern a CMSI equipment</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0070" name="tDDSText_t" cat="alias" size="80" padding="2" origin="type_0003" display="text">
        <documentation>
            <brief>Text type to name each elements (40 characters length, in UTF-16)</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
    </type>
    <type id="type_0071" name="tDDSTextSticker_t" cat="alias" size="40" padding="2" origin="type_0003" display="text">
        <documentation>
            <brief>Text type to name each facet elements (20 characters length, in UTF-16)</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
    </type>
    <type id="type_0072" name="eTypeBoard_t" cat="alias" size="1" padding="1" origin="type_0009" >
        <documentation>
            <brief>type a board</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
    </type>
    <type id="type_0073" name="tEqBaseIPAdress_t" cat="alias" size="1" padding="1" origin="type_0001" >
        <documentation>
            <brief>first byte of IP address</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
    </type>
    <type id="type_0074" name="eTeleId_t" cat="enum" size="1" padding="1">
        <documentation>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="__eTeleId_TBD__" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0076" name="eRS485func_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Functions associated to RS485</brief>
            <date>2014-10-15T11:37:22</date>
        </documentation>
        <enum name="eRS485_FUNC_NONE" >
            <documentation>
                <brief>RS485 will not have any function (same as disabled)</brief>
            </documentation>
        </enum>
        <enum name="eRS485_FUNC_JBUS_MASTER" >
            <documentation>
                <brief>RS485 is used as JBUS master</brief>
            </documentation>
        </enum>
        <enum name="eRS485_FUNC_ALTRA" >
            <documentation>
                <brief>Altra repeated Panel</brief>
            </documentation>
        </enum>
		<enum name="eRS485_FUNC_JBUS_SLAVE" >
            <documentation>
                <brief>RS485 is used as JBUS slave</brief>
            </documentation>
        </enum>
        <enum name="eRS485_FUNC_REPEATER_PANELS" >
            <documentation>
                <brief>Repeater panels</brief>
            </documentation>
        </enum>
        <enum name="eRS485_FUNC_FAD" >
            <documentation>
                <brief>deported IHM</brief>
            </documentation>
        </enum>
        <enum name="eRS485_FUNC_MGER_ADP" >
            <documentation>
                <brief>RS485 link between MGER and ADP4000</brief>
            </documentation>
        </enum>
        <enum name="eRS485_FUNC_MGER_FAT" >
            <documentation>
                <brief>RS485 link between MGER and FAT4000</brief>
            </documentation>
        </enum>
		</type>

    <type id="type_0077" name="tRS485JMParam_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>JBUS Master parameters</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <bfield name="SDI time synchronisation" size="1">
            <documentation>
            </documentation>
        </bfield>
    </type>
    <type id="type_0078" name="tSDIParam_t" cat="struct" size="2" padding="1">
        <documentation>
            <brief>Parameters of a SDI connected to MGG board</brief>
            <date>2014-10-15T11:45:55</date>
        </documentation>
        <field name="u8JbusConfiguration" type="type_0001" bitfield="true">
            <documentation>
                <brief>parameter of a SDI connected to a MGG JBUS master</brief>
            </documentation>
            <bfield name="u8ecsId" size="5" type="type_0001">
                <documentation>
                    <description>
                        SDI number between 1 and 16. This ID will be bounded with tJbusTableObj object.
                        If the value is 0, then, This parameter is considered as not used.
                        This number is __NOT__ the SDI JBUS address (see ::@@type_0078::name@@::@@type_0078::F2::name@@)
                    </description>
                </documentation>
            </bfield>
            <bfield name="bmodeZone" size="1">
                <documentation>
                    <description>Boolean which indicates if we work in Zone mode (true) or in Point mode (false)</description>
                </documentation>
            </bfield>
        </field>
        <field name="u8SlaveSDIAddress" type="type_0001" count="1">
            <documentation>
                <brief>JBUS address of the slave (SDI)</brief>
            </documentation>
        </field>
    </type>
    <type id="type_0079" name="eInputMode_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>input connection method : serial or parallel (for display)</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eINPUT_MODE_SERIAL" >
            <documentation>
                <brief>The input is in Serial mode</brief>
            </documentation>
        </enum>
        <enum name="eINPUT_MODE_PARALLEL" >
            <documentation>
                <brief>The input is in Parallel mode</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0080" name="eInputMonitor_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Monitor mode used for the input</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eINPUT_MONITORED_NONE" >
            <documentation>
                <brief>The input is not monitored</brief>
            </documentation>
        </enum>
        <enum name="eINPUT_MONITORED_OC_SC" >
            <documentation>
                <brief>The input is monitored for Short Circuit and Open-Circuit</brief>
            </documentation>
        </enum>
        <enum name="eINPUT_MONITORED_IMPEDANCE" >
            <documentation>
                <brief>The input is monitored by checking its impedance</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0081" name="eDDSZoneType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>zone type</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eDDS_ZONE_TYPE_ALARM" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_ZONE_TYPE_PREALARM" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_ZONE_TYPE_LATCHED_TECH_ALARM" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_ZONE_TYPE_TECH_FAULT" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_ZONE_TYPE_INTERACTIVE_PREALARM" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_ZONE_TYPE_BS_INTERACTIVE_PREALARM" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_ZONE_TYPE_ALARM_DISCRIMINATION" >
            <documentation>
            </documentation>
        </enum>
		<enum name="eDDS_ZONE_TYPE_MUTI_ZONE_CONFIRMATION" >
            <documentation>
				<brief>confirmation with 2 detectors. Detectors can be in the same zone or in different zones. Zone are linked through the tDDS_Zones_Asso_t object.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_ZONE_TYPE_ALARM_MCP" >
            <documentation>
                <brief>If there are only MCP in the zone, the zone type shall be this</brief>
            </documentation>
        </enum>
		<enum name="eDDS_ZONE_TYPE_SELF_RESETED_TECH_ALARM" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0140" name="eDDSTimeSlotMgtType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Time slot zone management type</brief>
        </documentation>
        <enum name="eDDS_TIME_MGT_TYPE_CHANGE" >
            <documentation>
                <brief>The zone management change between FIRE ALARM and the Zone type (eType)</brief>
            </documentation>
        </enum>
        <enum name="eDDS_TIME_MGT_TYPE_DISABLE" >
            <documentation>
                <brief>Zone activators are disabled</brief>
            </documentation>
        </enum>
        <enum name="eDDS_TIME_MGT_TYPE_SENSISIVITY_CHANGE" >
            <documentation>
                 <brief>Zone sensors sensibility change</brief>
            </documentation>
        </enum>
        <enum name="eDDS_TIME_MGT_TYPE_DISABLE_AUTOMATIC" >
          <documentation>
            <brief>Zone automatic devices are disabled.</brief>
          </documentation>
        </enum>
    </type>
      <type id="type_0141" name="tTimeZoneText_t" cat="alias" size="64" origin="type_0001" padding="1" display="ascii" >
          <documentation>
              <brief>POSIX timezone string</brief>
              <sees>http://www.linuxselfhelp.com/gnu/glibc/html_chapter/libc_21.html#SEC440</sees>
              <sees>http://leaf.sourceforge.net/doc/buci-tz3.html</sees>
              <sees>http://www.sonoracomm.com/support/20-voice-support/107-uclibc-tz</sees>
          </documentation>
      </type>
    <type id="type_0082" name="eGroupType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Group types list</brief>
            <description> There is 2 kind of group : Evacuation (from 0 to 1) and Actuators (2 and above) </description>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eGP_TYPE_UGA" >
            <documentation>
                <brief>UGA (Unite de gestion d'alarme) for ERP (Etablissement Recevant du Publique)</brief>
                <remarks>This is an evacuation group</remarks>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_UGA_IGH" >
            <documentation>
                <brief>UGA (Unite de gestion d'alarme) for IGH (Immeuble de Grande Hauteur)</brief>
                <remarks>This is an evacuation group</remarks>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_ACTUATORS_LOCKED" >
            <documentation>
                <brief>Locked actuators group stay in command state until the rearm command</brief>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_ACTUATORS_AUTO_REARM" >
            <documentation>
                <brief>Self reseted actuator group stay in command state while at least 1 trigger is active </brief>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_ACTUATORS_ARRET_MOTEUR" >
            <documentation>
                <brief>arret moteur / rearmement </brief>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_ACTUATORS_CAUX_UGA" >
            <documentation>
                <brief>UGA auxiliary contact</brief>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_TRIGGERED" >
            <documentation>
                <brief>asservissements verrouilles pour les delenches </brief>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_ACTUATORS_CMD" >
            <documentation>
                <brief>asservissement for command on group or report </brief>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_OPTION_C_EVAC" >
            <documentation>
                <brief>Option C Evacuation (EN 54-2, par7.8 and par7.11)</brief>
                <remarks>This is an evacuation group</remarks>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_DIRECT_EVAC" >
            <documentation>
                <brief>Direct Evacuation (EN 54-2, par7.8 and par7.11 extra function manual command of evacuation)</brief>
                <remarks>This is an evacuation group</remarks>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_ITALIAN_HOTEL_EVAC" >
            <documentation>
                <brief>Italian hotel Evacuation (DR8 par5)</brief>
                <remarks>This is an evacuation group</remarks>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_BELGIUM_ALERT" >
            <documentation>
                <brief>Belgium Alert (DR8 par6)</brief>
                <remarks>This is an evacuation group</remarks>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_SLOVAK_EVAC" >
            <documentation>
                <brief>Slovak Evacuation (DR8 par8)</brief>
                <remarks>This is an evacuation group</remarks>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_EVAC_UK" >
            <documentation>
                <brief>UK Evacuation (BS 5839 par14)</brief>
                <remarks>This is an evacuation group</remarks>
            </documentation>
        </enum>
        <enum name="eGP_TYPE_PULSED" >
            <documentation>
                <brief>Pulsed</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0083" name="eDDSGroupMode_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Trigger mode possibles for groups</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eDDS_GP_MODE_OR" >
            <documentation>
                <brief>Group will be active when at least 1 group's trigger is in active state</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_MODE_AND" >
            <documentation>
                <brief>Group will be active only when all group's triggers are in active state (at the same time)</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_MODE_AND_TWO" >
            <documentation>
                <brief>Group will be active when at least 2 group's triggers are in active state (at the same time)</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0084" name="eDDSGroupTriggerState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>state of the trigger that trig the group</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eDDS_GP_ACTIVE_ALARM" >
            <documentation>
                <brief>group is active when a trigger is in alarm </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_PREALARM" >
            <documentation>
                <brief>group is active when a trigger is in prealarm </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_FAULT" >
            <documentation>
                <brief>group is active when a trigger is in fault  </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_TEST" >
            <documentation>
                <brief>group is active when a trigger is in test  </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_DISABLE" >
            <documentation>
                <brief>group is active when a trigger is disable  </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_ON_ACTIVE" >
            <documentation>
                <brief>group is active when a trigger is active (an entry is active) </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_ON_INACTIVE" >
            <documentation>
                <brief>group is active when a trigger is active (an entry is inactive) </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_GP_ACTIVE" >
            <documentation>
                 <brief>group is active when a group is in active state (group escalation) [activation state of CMP and SDF function] </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_GP_CMD" >
            <documentation>
                 <brief>group is active when a group is in commanded state (group escalation) </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_GP_TEMPORIZATION" >
            <documentation>
                <brief>group is active when a group is active up to a statemachine state (group escalation) </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_GP_SECURITY" >
            <documentation>
			<brief>group is active when a group is in security (all its trigger are in security) (group escalation) </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_GP_SECURITY_FAULT" >
            <documentation>
			<brief>group is active when a group is in security fault (one of its trigger are in security fault) (group escalation) </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_GP_VEILLE_RESTREINTE" >
            <documentation>
			<brief>group is active when a UGA group is in veille restreinte (group escalation) </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_GP_STANDBY_FAULT" >
            <documentation>
              <brief>group is active when a group is in standby fault (one of its trigger are in standby fault) (group escalation) </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_ALARM_TECH" >
            <documentation>
			 <brief> TODO innova </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_FAULT_TECH" >
            <documentation>
			 <brief> TODO innova </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_FAULT_SECTOR" >
            <documentation>
                <brief>group is active when a trigger (MGG state kind) is in sector fault </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_FAULT_BATTERY" >
            <documentation>
                <brief>group is active when a trigger (MGG state kind) is in battery fault </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_FAULT_PRIMARY_DIALOG" >
            <documentation>
			   <brief>group is active when a trigger (MGG state kind) is in primary dialog fault</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_FAULT_SECONDARY_DIALOG" >
            <documentation>
			<brief>group is active when a trigger (MGG state kind) is in secondary dialog fault</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_BUZZER_DISCONTINOUS" >
            <documentation>
			<brief>group is active when a trigger (MGG state kind) has discontinuous buzzer</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_BUZZER_ON" >
            <documentation>
			<brief>group is active when a trigger (MGG state kind) has continuous buzzer</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_ACTIVITY_PERIODE_ON" >
            <documentation>
			<brief>group is triggered if time slot functionality is on activity period</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_SYSTEM_FAULT" >
            <documentation>
			<brief>group is active when a trigger (MGG state kind) is in system fault</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_SDI_LINK_FAULT" >
            <documentation>
			<brief>group is active when a trigger (MGG state kind) is link fault (lost a jbus ecs or alarm input link to a group for instance)</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_DAS_POWER_PRIMARY_FAULT" >
            <documentation>
			<brief>group is active when a trigger (MGG state kind) is primary das power fault (defaut energie). lost power of a das</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_SYSTEM_ACTIVATED">
            <documentation>
                <brief>group is active when the equipment is activated (Activation LED is ON ; ie : smoke extract and/or fire compartmentation function are on active state)</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_DAS_POWER_SECONDARY_FAULT">
            <documentation>
                <brief>group is active when a trigger (MGG state kind) is secondary das power fault (defaut energie). lost power of a das</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_ACTIVE_UGA_LINK_FAULT">
            <documentation>
                <brief>Group is active when an UGA function raise a link fault flag</brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_ACTIVE_ON_ACTIVE_DELAY_1" >
            <documentation>
                <brief>group is active when a trigger is active delay 1 </brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_ACTIVE_ON_ACTIVE_DELAY_2" >
            <documentation>
                <brief>group is active when a trigger is active delay 2 </brief>
            </documentation>
        </enum>	
		<enum name="eDDS_GP_ACTIVE_ALARM_OR_PREALARM" >
            <documentation>
                <brief>group is active when a trigger is in alarm or prealarm</brief>
            </documentation>
        </enum>		
		<enum name="eDDS_GP_ACTIVE_ON_ACTIVE_DELAY_WAIT" >
            <documentation>
                <brief>group is active when a trigger is active delay WAIT </brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_ACTIVE_INACTIVITY_PERIODE_ON" >
            <documentation>
			<brief>group is triggered if time slot functionality is on inactivity period</brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_ACTIVE_RESET" >
            <documentation>
			<brief>group is triggered if the panel is in RESET state</brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_ACTIVE_FB_CALLED" >
            <documentation>
			<brief>group is triggered when an activator is in Fire Brigade Called</brief>
            </documentation>
        </enum>			
    </type>
    <type id="type_0085" name="eDDSGroupCmdParam_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>command on command or report (cmd group)</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eDDS_GP_CMD_SECU_AUTO" >
            <documentation>
			<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a automatic
			activation command (forced) is send to a group (or groups) defined in triggered elements. the triggered elements
			MUST be on the same MGG of the Command Direct group.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_SECU_MANU" >
            <documentation>
			<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a manual
			activation command is send to a group (or groups) defined in triggered elements. the triggered elements
			MUST be on the same MGG of the  Command Direct group.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_ACQ_PROCESSUS" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "acquittement
					processus" command is send to a UGA group (or groups) defined in triggered elements. the triggered elements
			MUST be on the same MGG of the Command Direct group.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_VEILLE_RESTREINTE" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "go to veille restreinte"
					command is send to a UGA group (or groups) defined in triggered elements. the triggered elements
			MUST be on the same MGG of the Command Direct group.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_VEILLE_GENERALE" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "go to veille generale"
					command is send to a UGA group (or groups) defined in triggered elements. the triggered elements
			MUST be on the same MGG of the Command Direct group.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_CAUX_DISABLE" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "disable auxiliary contact"
					command is send to a UGA group (or groups) defined in triggered elements. the triggered elements
			MUST be on the same MGG of the Command Direct group.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_CAUX_ENABLE" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "enable auxiliary contact"
					command is send to a UGA group (or groups) defined in triggered elements. the triggered elements
			MUST be on the same MGG of the Command Direct group.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_SOUNDER_DISABLE" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "disable sounder line"
					command is send to a UGA group (or groups) defined in triggered elements. the triggered elements
			MUST be on the same MGG of the Command Direct group.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_SOUNDER_ENABLE" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "enable sounder line"
					command is send to a UGA group (or groups) defined in triggered elements. the triggered elements
			MUST be on the same MGG of the Command Direct group.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_ECO" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "go in economy mode"
					command is send to a group (or groups) defined in triggered elements. the triggered elements
			MUST be on the same MGG of the Command Direct group.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_END_ECO" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "leave economy mode"
					command is send to a group (or groups) defined in triggered elements. the triggered elements
			MUST be on the same MGG of the Command Direct group.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_LEVEL_2_ON" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "force level 2"
				command is applied on a FAFP (FAFPs) (which mean equipment). triggered elements are tOD_FAFPIOState_t type.
				(0x00 - 0x40 : CMSI #1 to CMSI #64)</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_LEVEL_2_OFF" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "unforce level 2"
				command is applied on a FAFP (FAFPs) (which mean equipment). triggered elements are tOD_FAFPIOState_t type.
				(0x00 - 0x40 : CMSI #1 to CMSI #64)</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_STOP_BUZZER" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "stop buzzer"
					command is applied on a MGG (MGGs) (which mean equipment). triggered elements are tOD_MGG_State_t type.
					(0x00 - 0x40 : CMSI #1 to CMSI #64)</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_REARM_GROUP" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "reset"
					command is send to a group (or groups) defined in triggered elements</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_REARM" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "reset"
					command is applied on the MGG (local equipment) which have the group </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_REPORT_ALARM" >
            <documentation>
					<brief>This configuration is use for ALARM INPUT.
					When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a automatic
			activation command is send to a group (or groups) defined in triggered elements. the triggered elements
			MUST be on the same MGG of the group. the triggered group will be commanded up to its config (AND, OR , AND 2 mode.
			the triggered elements MUST be on the same MGG of the  Command Direct group.
			</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_REPORT_GAL_FAULT" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, the local equipment
				(to which belong the group) is in general fault. triggered are ignored	</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_REPORT_DIALOG_PRIMARY_FAULT" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, the local equipment
				(to which belong the group) is in primary dialog fault. triggered are ignored	</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_REPORT_SECTOR_FAULT" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, the local equipment
				(to which belong the group) is in power supply fault. triggered are ignored	</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_REPORT_BATTERY_FAULT" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, the local equipment
				(to which belong the group) is in battery fault. triggered are ignored	</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_REPORT_ENERGY_PRIMARY_FAULT" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, the local equipment
				(to which belong the group) is in primary das power fault (energy fault). triggered are ignored	</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_REPORT_SECURITY" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a triggered
				group (groups) are in security [if all other triggered are in security]. the triggered elements
			    MUST be on the same MGG of the  Command Direct group.
	        </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_REPORT_SECURITY_FAULT" >
            <documentation>
			<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a triggered
				group (groups) are in security fault. the triggered elements MUST be on the same MGG of the Command direct group.
				</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_REPORT_STANDBY_FAULT" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a triggered
				group (groups) are in standby fault. the triggered elements MUST be on the same MGG of the Command direct group.
				</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_AALD_FORCED_GLOBAL" >
            <documentation>
			<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then  "Manual mode" (aide a la decision) is set for all groups. triggered elements are ignored </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_AALD_UNFORCED_GLOBAL" >
            <documentation>
			<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then "Manual mode" (aide a la decision) is unforced for all groups (then use their AALD mode from DDS).
			triggered elements are ignored </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_AALD_FORCED_GP" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "manual mode" aide a la decision) command is send to a group (or groups) defined in triggered elements</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_AALD_UNFORCED_GP" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "unforce Manual mode" (aide a la decision) command is send to a group (or groups) defined in triggered elements. The groups triggered take their default manual mode config (DDS)</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_DAY_NIGHT_ON" >
            <documentation>
			<brief>hen the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then the panel is set in night mode</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_DAY_NIGHT_OFF" >
            <documentation>
			<brief>hen the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then panel comes back in automatic day / night management</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_SCAND_KEY_ON" >
            <documentation>
                <brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "Swidish key ON" command is applied on the local main board (local equipment).
                </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_SCAND_KEY_OFF" >
            <documentation>
                <brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "Swidish key OFF" command is applied on the local main board (local equipment).
                </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_SILENCE" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "Silence" command is send to a group (or groups) defined in triggered elements. </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_RESOUND" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "Resound" command is send to a group (or groups) defined in triggered elements. </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_ZONE_DISABLE" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "Zone disabled"	command is send to zone(s) defined in triggered elements.
                </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_ZONE_ENABLE" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "Zone enabled"	command is send to zone(s) defined in triggered elements.
                </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_AUTO_DEVICE_ZONE_DISABLE" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "disable command of automatic device of the zone" is sent to zone(s) defined in triggered elements.
                </brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_CMD_AUTO_DEVICE_ZONE_ENABLE" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "disable command of automatic device of the zone" is sent to zone(s) defined in triggered elements.
                </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_DEVICE_DISABLE" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "device disabled" command is sent to zone(s) defined in triggered elements.
                </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_DEVICE_ENABLE" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "device enabled" command is sent to zone(s) defined in triggered elements.
                </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_FIEAG_EMISSION" >
            <documentation>
			<brief>FIEAG - Extinguish equipment is extinguishing</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_FIEAG_FAULT" >
            <documentation>
			<brief>FIEAG - Extinguish equipment has reported a fault</brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_CMD_REPORT_DIALOG_SECONDARY_FAULT" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, the local equipment
				(to which belong the group) is in secondary dialog fault. triggered are ignored	</brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_CMD_REPORT_ENERGY_SECONDARY_FAULT" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, the local equipment
				(to which belong the group) is in secondary das power fault (energy fault). triggered are ignored </brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_CMD_REPORT_TRIGGRERED_FAULT" >
			<documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a triggered
				group (groups) are in fault. the triggered elements MUST be on the same MGG of the Command direct group.
				</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_BILAN" >
            <documentation>
				<brief>ELITE use only. When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "BILAN"	command is performed by the MPE</brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_CMD_REPORT_FAULT_ROUTING_FB" >
            <documentation>
				<brief>MGER input configuration: Provide a feed back of the Fault routing condition</brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_CMD_REPORT_CALLED_FB" >
            <documentation>
				<brief>MGER input configuration: Provide a feed back of the fire brigade call condition</brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_CMD_REPORT_FSE_LOCK_OPEN" >
            <documentation>
				<brief>MGER input configuration: Provide a feed back of the Key box lock</brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_CMD_REPORT_FSE_LOCK_CLOSE" >
            <documentation>
				<brief>MGER input configuration: Provide a feed back of the Key box lock</brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_ECO_PAIRED" >
            <documentation>
					<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "go in economy mode"
					command is send to a group (or groups) defined in triggered elements. the triggered elements
			MUST be on the same MGG of the Command Direct group.
			When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is no longer commanded, then a "stop economy mode"
					command is send to a group (or groups) defined in triggered elements..</brief>
            </documentation>
        </enum>
		<enum name="eDDS_GP_CMD_REPORT_TRIGGERED_COMMANDED" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then "triggered commanded" 
				status is sent. eGP_TYPE_ACTUATORS_CMD group must be trigerred of group to notify</brief>
            </documentation>
        </enum>		
        <enum name="eDDS_GP_CMD_DISABLE" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "disable" command is sent to zone(s) / device(s) / group(s)  defined in triggered elements.
                </brief>
            </documentation>
        </enum>
        <enum name="eDDS_GP_CMD_ENABLE" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "enable" command is sent to zone(s) / device(s) / group(s) defined in triggered elements.
                </brief>
            </documentation>
        </enum>		
        <enum name="eDDS_GP_CMD_DISABLE_PAIRED" >
            <documentation>
				<brief>When the Command direct group (eGP_TYPE_ACTUATORS_CMD type) is commanded, then a "disable" command is sent to zone(s) / device(s) / group(s)  defined in triggered elements.
				when active and "enable" when inactive
                </brief>
            </documentation>
        </enum>						
    </type>
	
    <type id="type_0086" name="tDDSGroupParamGen_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>generic parameter for all groups</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
            <bfield name="bsignalCommonDAS" size="1">
                <documentation>
                </documentation>
            </bfield>
            <bfield name="bdesactivationPossible" size="1">
                <documentation>
                    <brief>manual deactivation is possible (for rupture is not possible)</brief>
                </documentation>
            </bfield>
            <bfield name="baald" size="1">
                <documentation>
                    <brief>default state for Aide a la decision</brief>
                </documentation>
            </bfield>
            <bfield name="bdisablePossible" size="1">
                <documentation>
                    <brief>possible to disable triggered (authorization)</brief>
                </documentation>
            </bfield>
            <bfield name="bresetPossible" size="1">
                <documentation>
                    <brief>auxiliary contact follow reset : a  reset deactivate aux contact</brief>
                </documentation>
            </bfield>
            <bfield name="bcontinuousBuzzer" size="1">
                <documentation>
                    <brief>continuous buzzer option</brief>
                </documentation>
            </bfield>
            <bfield name="breportState" size="1">
                <documentation>
                    <brief>report state (security, standby, fault ...) on trigger.
					option only for triggered group.
					default state is TRUE (1)
					used for smoke column</brief>
                </documentation>
            </bfield>

    </type>
    <type id="type_0087" name="eDDSGroupTriggeringType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>DDS triggering type for groups</brief>
            <todo>Add information about indexes</todo>
            <date>2014-10-14T18:03:55</date>
            <author>AGO,TGO</author>
        </documentation>
        <enum name="eDDS_GTRIGGERING_TYPE_DEVICE" >
            <documentation>
                <brief>Defining that the group can trigger or be triggered using a Device type object</brief>
                <remarks>For activator groups, only for Detection Points (ECS/CMSI type B)</remarks>
                <remarks>For triggered groups, only for Deported elements (CMSI)</remarks>
            </documentation>
        </enum>
        <enum name="eDDS_GTRIGGERING_TYPE_DEVICE_OUTPUT" >
            <documentation>
                <brief>Defining that the group can be triggered through a Device Output.\n</brief>
                <description>Device output identification is indicated with the ::@@type_0088::name@@ subobject

                @iexample{Device output 3 is defined with type eDDS_GTRIGGERING_TYPE_DEVICE_OUTPUT and offset = 3-1}
                </description>
                <remarks>For triggered groups</remarks>
            </documentation>
        </enum>
        <enum name="eDDS_GTRIGGERING_TYPE_ZONE" >
            <documentation>
                <brief>Defining that the group can trigger through a Zone.</brief>
                <description>Only tOD_ZoneState_t objects (0x380000) can be an activator in this case. This object can be produced by an A5 type B or an Innova ECS</description>
                <remarks>For activator groups</remarks>
            </documentation>
        </enum>
        <enum name="eDDS_GTRIGGERING_TYPE_GROUP" >
            <documentation>
                <brief>Defining that the group can trigger or be triggered through a group.</brief>
                <remarks>For activator groups</remarks>
                <remarks>For triggered groups</remarks>
            </documentation>
        </enum>
        <enum name="eDDS_GTRIGGERING_TYPE_MGG" >
            <documentation>
                <brief>Defining that the group can trigger through a MGG state.</brief>
                <remarks>For activator groups</remarks>
            </documentation>
        </enum>
        <enum name="eDDS_GTRIGGERING_TYPE_DEVICE_IO" >
            <documentation>
                <brief>Defining that the group can trigger or be triggered through a Device IO.</brief>
                <description>Device IO identification is indicated with the ::@@type_0088::name@@ subobject</description>
                <examples>
                    <example>A Device Output is in Fault State</example>
                    <example>A Device Output is in Disable State</example>
                    <example>A Device Input is in Fault State</example>
                    <example>A Device Input is in Active State</example>
                    <example>A Device Input is in Disable State</example>
                </examples>
                <remarks>For activator groups</remarks>
            </documentation>
        </enum>
    </type>
    <type id="type_0088" name="tDDSGroupTypeOffset_t" cat="alias" size="1" padding="1" origin="type_0001" >
        <documentation>
            <date>2014-10-14T18:03:55</date>
        </documentation>
    </type>
    <type id="type_0089" name="eDDSFacetFunction_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>facet function</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eFACET_FCT_CMP" >
            <documentation>
                <brief>Containment</brief>
            </documentation>
        </enum>
        <enum name="eFACET_FCT_DSF" >
            <documentation>
                <brief>Smoke extraction</brief>
            </documentation>
        </enum>
        <enum name="eFACET_FCT_EVAC" >
            <documentation>
                <brief>Evacuation</brief>
            </documentation>
        </enum>
        <enum name="eFACET_FCT_ARRET_MOTEUR" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eFACET_FCT_REARM_DAS" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eFACET_FCT_OTHER" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eFACET_FCT_DETECTION" >
            <documentation>
                <brief>Fire Detection</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0090" name="eDDSFacetType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>facet type</brief>
            <date>2014-10-14T18:03:55</date>
            <author>TGO</author>
        </documentation>
        <enum name="eFACET_UNKNOWN" value="-1">
            <documentation>
            </documentation>
        </enum>
        <enum name="eFACET_USG" value="0">
            <documentation>
            </documentation>
        </enum>
        <enum name="eFACET_FOPC" value="93">
            <documentation>
            </documentation>
        </enum>
        <enum name="eFACET_FOPE" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eFACET_FOPG" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eFACET_FOPJ" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eFACET_FOPM" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eFACET_FEVAC_UGA" >
            <documentation>
			<brief>UGA (ERP) facet (French evacuation)</brief>
            </documentation>
        </enum>
        <enum name="eFACET_FEXT" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eFACET_FREXT" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eFACET_FSYNDY" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eFACET_FUSC_ACP" >
            <documentation>
			<brief>Unite Surveillance et de commande Avec Controle de Position (survey and command with switch position control)</brief>
            </documentation>
        </enum>
        <enum name="eFACET_FUSC_SCP" >
            <documentation>
				<brief>Unite Surveillance et de commande Sans Controle de Position (survey and command without switch position control)</brief>
            </documentation>
        </enum>
        <enum name="eFACET_FUS_ACP" >
            <documentation>
			<brief>Unite Surveillance Avec Controle de Position (survey with switch position control)</brief>
            </documentation>
        </enum>
        <enum name="eFACET_FUS_SCP" >
            <documentation>
			<brief>Unite Surveillance Sans Controle de Position (survey without switch position control)</brief>
            </documentation>
        </enum>
        <enum name="eFACET_FRDAS" >
            <documentation>
			<brief>Reset DAS Facet</brief>
            </documentation>
        </enum>
        <enum name="eFACET_FAMOT" >
            <documentation>
			<brief>Stop Motor Facet</brief>
            </documentation>
        </enum>
        <enum name="eFACET_FEVAC_UGA_IGH" >
            <documentation>
			<brief>UGA IGH facet (French evacuation)</brief>
            </documentation>
        </enum>
        <enum name="eFACET_FREXTS" >
            <documentation>
            </documentation>
        </enum>
		<enum name="eFACET_SHADOW_SHEDDING" >
            <documentation>
			<brief>enum type to deal shedding function (function not linked to a real facet)</brief>
            </documentation>
        </enum>
		<enum name="eFACET_SHADOW_ECO" >
            <documentation>
			<brief>enum type to deal energy saving function (function not linked to a real facet)</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0091" name="tDDSRelayConfig_t" cat="bitfield" size="1" padding="1" origin="type_0001" >
        <documentation>
            <brief>Relay configuration</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <bfield name="Security function" size="1">
            <documentation>
                <description>Is a boolean which indicates if the relay is bound to a security function, or not.</description>
            </documentation>
        </bfield>
        <bfield name="Relay type" size="7" type="type_0092">
            <documentation>
                <description>Describe if the relay is __Normally Open__ (::@@type_0092::E4::name@@) ; __Normally Closed__ (::@@type_0092::E5::name@@) or __Unused__ (::@@type_0092::E1::name@@).</description>
            </documentation>
        </bfield>
    </type>
    <type id="type_0092" name="eInputOutputType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>IO type for all boards and devices</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eIO_TYPE_UNUSED">
            <documentation>
                <brief>This port is not used</brief>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_BD" value="1">
            <documentation>
				<brief>IO is for a BD element</brief>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_RELAY" value="2">
            <documentation>
                <brief>this port is a Relay </brief>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_RELAY_NO" value="2">
            <documentation>
                <brief>this port is a Relay which is Normally Open (NO) </brief>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_RELAY_NC" >
            <documentation>
                <brief>this port is a Relay which is Normally Closed (NC) </brief>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_INPUT" value="4">
            <documentation>
                <brief>This port is an input</brief>
                <todo>Remove this enum value when eIORType will be removed</todo>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_INPUT_MONITORED" value="4">
            <documentation>
				<brief>Input which deals its short circuit / open circuit</brief>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_INPUT_TOR" >
            <documentation>
				<brief>Input which not deals its short circuit / open circuit</brief>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_OUTPUT" value="8">
            <documentation>
                <brief>This port is an output</brief>
                <todo>Remove this enum value when eIORType will be removed</todo>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_OUTPUT_PULSE" value="8">
            <documentation>
				<brief></brief>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_OUTPUT_FAIL_SAFE">
            <documentation>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_OUTPUT_HOLD_TO_RUN">
            <documentation>
			   <brief></brief>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_OUTPUT_SOUNDER_LINE" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_OUTPUT_LED">
            <documentation>
                <brief>Undefined Used LED</brief>
            </documentation>
        </enum>
        <enum name="eIO_TYPE_OUTPUT_RAI_LED">
            <documentation>
                <brief>Remote Alarm Indicator LED.</brief>
            </documentation>
        </enum>
		<enum name="eIO_TYPE_OUTPUT_AI_LED">
            <documentation>
                <brief>Alarm indicator LED ie. RED light on Detectors</brief>
            </documentation>
        </enum>
		<enum name="eIO_TYPE_OUTPUT_DIAG_LED">
            <documentation>
                <brief>Diagnostic LED. (Orange LED on TNET devices)</brief>
            </documentation>
        </enum>
		<enum name="eIO_TYPE_INPUT_CHANGE_OVER_CONTACT">
            <documentation>
                <brief>change over contact input</brief>
            </documentation>
        </enum>		
		
    </type>
    <type id="type_0093" name="eDDSM8IOPowerSupply_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>power supply used on M8IO</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eM8IO_ALIM_V_OI" >
            <documentation>
                <brief>Board is powered by 42V line (IO)</brief>
                <remarks>This value is needed to compute Monitor Thresholds </remarks>
            </documentation>
        </enum>
        <enum name="eM8IO_ALIM_EAES_24V" >
            <documentation>
                <brief>Board is powered by main 24V line (AES)</brief>
                <remarks>This value is needed to compute Monitor Thresholds </remarks>
            </documentation>
        </enum>
        <enum name="eM8IO_ALIM_EAES_48V" >
            <documentation>
                <brief>Board is powered by main 48V line (AES)</brief>
                <remarks>This value is needed to compute Monitor Thresholds </remarks>
            </documentation>
        </enum>
        <enum name="eM8IO_ALIM_V_LOOP" >
            <documentation>
                <brief>Board is powered by V Loop line (V Loop)</brief>
                <remarks>This value is needed to compute Monitor Thresholds </remarks>
            </documentation>
        </enum>
    </type>
    <type id="type_0094" name="tDDSPrintParam_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>printer parameter</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
            <bfield name="sens" size="1">
                <documentation>
                </documentation>
            </bfield>
            <bfield name="monitored" size="1">
                <documentation>
                </documentation>
            </bfield>
            <bfield name="protocol" size="1">
                <documentation>
                </documentation>
            </bfield>
            <bfield name="printOnDemand" size="1">
                <documentation>
                </documentation>
            </bfield>
            <bfield name="isPresent" size="1" type="type_0007">
                <documentation>
                    <brief>This flag indicate if a printer is present or not</brief>
                </documentation>
            </bfield>
    </type>
    <type id="type_0095" name="eDDSFAFPType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>FAFP type</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eDDSFAFPType_None" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDSFAFPType_Standard" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDSFAFPType_ECS_UGA" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDSFAFPType_ECS_Extinguishing" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0096" name="eDDSMBDMonitorLine_t" cat="alias" size="1" padding="1" origin="type_0001" >
        <documentation>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
    </type>
    <type id="type_0097" name="eDDSMBDModeLine_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>line or loop mode of each line</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eDDS_MBD_MODE_LINE_OFF" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_MBD_MODE_LINE_128" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_MBD_MODE_LOOP_128" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_MBD_MODE_LINE_32" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_MBD_MODE_LOOP_256" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_MBD_MODE_CONVENTIONAL_32" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0098" name="eDDSMBDCurrentLimit_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>current limit choice</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eDDS_MBD_CURRENT_LIMIT_LOW" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_MBD_CURRENT_LIMIT_HIGH" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_MBD_CURRENT_LIMIT_INTRINSIC" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_MBD_CURRENT_LIMIT_300MA" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_MBD_CURRENT_LIMIT_150MA" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_MBD_CURRENT_LIMIT_100MA" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDDS_MBD_CURRENT_LIMIT_45MA" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0099" name="tIPAddress_t" cat="alias" size="4" padding="4" origin="type_0005" display="dot" >
        <documentation>
            <brief>IP address type 4 bytes</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
    </type>
    <type id="type_0100" name="tMacAddress_t" cat="alias" size="6" padding="1" origin="type_0001" display="hex8" >
        <documentation>
            <brief>MAC address definition</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
    </type>
    <type id="type_0169" name="tFilterIO_t" cat="struct" size="4" padding="2">
        <documentation>
            <brief>IO Filter</brief>
            <date>2014-10-14T18:03:55</date>
            <author>AGO</author>
        </documentation>
        <field name="xFilterValue" type="type_0114" count="1">
            <documentation>
                <brief>Filter which defines how much time we have to wait before saying that we are really in that state</brief>
            </documentation>
        </field>
        <field name="eState" type="type_0044" count="1">
            <documentation>
                <brief>IO state definition</brief>
            </documentation>
        </field>
    </type>
    <type id="type_0101" name="tThresholdIO_t" cat="struct" size="4" padding="2">
        <documentation>
            <brief>IO threshold</brief>
            <date>2014-10-14T18:03:55</date>
            <author>AGO</author>
        </documentation>
        <field name="xThresholdValue" type="type_0125" count="1">
            <documentation>
                <brief>Threshold which defines the lower limit of the next state</brief>
            </documentation>
        </field>
        <field name="eState" type="type_0044" count="1">
            <documentation>
                <brief>IO state definition, which have a lower limit : previous threshold value</brief>
            </documentation>
        </field>
    </type>
    <type id="type_0102" name="tDDSMGGMask_t" cat="alias" size="8" padding="4" origin="type_0005" >
        <documentation>
            <brief>Bitfield on 64bits which list MGG to take into account into the given profile</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
    </type>
    <type id="type_0103" name="tDDSInputFCDCParam_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>end switch and begin switch configuration for an input</brief>
            <description>indicate also arret sur fin de course for an output</description>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <bfield name="bFC" size="1">
            <documentation>
                <brief>is it a fin de course ? </brief>
            </documentation>
        </bfield>
        <bfield name="bDC" size="1">
            <documentation>
                <brief>is it a debut de course ?</brief>
            </documentation>
        </bfield>
        <bfield name="u8output" size="4" type="type_0001">
            <documentation>
                <brief>output -1 associated if begin switch or end switch is used</brief>
            </documentation>
        </bfield>
        <bfield name="bStopOnEndSwitch" size="1">
            <documentation>
                <brief>do we stop on end switch</brief>
            </documentation>
        </bfield>
    </type>
    <type id="type_0106" name="eDSTType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>summer  / winter timestamps management</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eDST_TYPE_NONE" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDST_TYPE_WET" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDST_TYPE_CET" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eDST_TYPE_EET" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0107" name="eConfigED_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Elements deportes configuration (for display)</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MLK</author>
        </documentation>
        <enum name="eCONFIG_DAS_EMISION_ACP" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eCONFIG_DAS_RUPTURE_ACP" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eCONFIG_DAS_PULSE_ACP" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eCONFIG_DAS_AUTO_ACP" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eCONFIG_DAS_EMISION_SCP" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eCONFIG_DAS_RUPTURE_SCP" >
            <documentation>
            </documentation>
        </enum>
        <enum name="eCONFIG_DAS_PULSE_SCP" >
            <documentation>
            </documentation>
        </enum>
    </type>
    <type id="type_0108" name="eSignA_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>DEFnet signature definition, part 1</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eSIGNA_DEF" value="0">
            <documentation><brief>Signature used by DEF and DEF international</brief></documentation>
        </enum>
        <enum name="eSIGNA_OTHERS" value="2">
            <documentation><brief>Signature used by DEF international, ASD, SD3 and Securiton</brief></documentation>
        </enum>
    </type>
    <type id="type_0109" name="eSignB_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>DEFNet signature definition, part 2</brief>
            <date>2014-10-14T18:03:55</date>
            <author>MDE</author>
        </documentation>
        <enum name="eSIGNB_DEF" value="0">
            <documentation><brief>Signature used by DEF</brief></documentation>
        </enum>
        <enum name="eSIGNB_DEF_INT" value="5">
            <documentation><brief>Signature used by DEF international</brief></documentation>
        </enum>
        <enum name="eSIGNB_DEF_ASD" value="6">
            <documentation><brief>Signature used by ASD</brief></documentation>
        </enum>
        <enum name="eSIGNB_DEF_SD3" value="7">
            <documentation><brief>Signature used by SD3</brief></documentation>
        </enum>
        <enum name="eSIGNB_DEF_SECURITON" value="8">
            <documentation><brief>Signature used by Securiton</brief></documentation>
        </enum>
    </type>
    <type id="type_0148" name="eSC_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Ultima sale Canal Signature</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eSC_DEF_FRANCE" value="1">
            <documentation><brief>Signature used by DEF France</brief></documentation>
        </enum>
        <enum name="eSC_DEF_INTERNATIONAL" value="2">
            <documentation><brief>Signature used by DEF international</brief></documentation>
        </enum>
        <enum name="eSC_BOUYER_SYSTEM" value="3">
            <documentation><brief>Signature used by Bouyer System</brief></documentation>
        </enum>
        <enum name="eSC_ALIGATOR" value="4">
            <documentation><brief>Signature used by Aligator</brief></documentation>
        </enum>
        <enum name="eSC_SECURITON" value="5">
            <documentation><brief>Signature used by Securiton</brief></documentation>
        </enum>
        <enum name="eSC_ASD" value="128">
            <documentation><brief>Signature used by ASD</brief></documentation>
        </enum>
        <enum name="eSC_SD3" value="129">
            <documentation><brief>Signature used by SD3</brief></documentation>
        </enum>
        <enum name="eSC_BOUYER_DISTRIBUTION" value="130">
            <documentation><brief>Signature used by Bouyer System</brief></documentation>
        </enum>
    </type>
    <type id="type_0116" name="eLineID_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Lines IDs</brief>
            <date>2014-11-05T16:36:00</date>
            <author>MDE</author>
        </documentation>
        <enum name="eLINE_NOT_APPLICABLE" >
            <documentation>
                <brief>When the given device is not on a line (IOR devices/JBUS devices)</brief>
            </documentation>
        </enum>
        <enum name="eLINE1" >
            <documentation>
                <brief>ID which identify line number 1</brief>
            </documentation>
        </enum>
        <enum name="eLINE2" >
            <documentation>
                <brief>ID which identify line number 2</brief>
            </documentation>
        </enum>
        <enum name="eLINE3" >
            <documentation>
                <brief>ID which identify line number 3</brief>
            </documentation>
        </enum>
        <enum name="eLINE4" >
            <documentation>
                <brief>ID which identify line number 4</brief>
            </documentation>
        </enum>
        <enum name="eLINE5" >
            <documentation>
                <brief>ID which identify line number 5</brief>
            </documentation>
        </enum>
        <enum name="eLINE6" >
            <documentation>
                <brief>ID which identify line number 6</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0117" name="tDNetAddress_t" cat="alias" origin="type_0001" size="1" padding="1">
        <documentation>
            <brief>DEFNet Addresses from 1 to 252</brief>
            <remarks>value 0 is forbidden</remarks>
            <remarks>253 is reserved to group addressing mode</remarks>
            <remarks>254 is reserved to global addressing mode</remarks>
            <remarks>255 is reserved to global rearm/reset command</remarks>
            <date>2014-11-05T16:38:32</date>
            <author>MDE</author>
        </documentation>
    </type>
    <type id="type_0118" name="eModelIndexes_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Device model reduced index to object 0x50000</brief>
            <date>2014-11-05T16:42:42</date>
            <author>MDE</author>
        </documentation>
        <enum name="eMODEL_EDL" value="0">
            <documentation>
                <brief>Index to EDL devices model</brief>
            </documentation>
        </enum>
        <enum name="eMODEL_EDA" >
            <documentation>
                <brief>Index to EDA devices model</brief>
            </documentation>
        </enum>
        <enum name="eMODEL_EDR2E" value="3">
            <documentation>
                <brief>Index to EDR2E devices model</brief>
            </documentation>
        </enum>
        <enum name="eMODEL_EDR" value="5">
            <documentation>
                <brief>Index to EDR devices model</brief>
            </documentation>
        </enum>
        <enum name="eMODEL_EDBD" value="8">
            <documentation>
                <brief>Index to EDBD devices model</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0119" name="eDNet_Ident1_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>DEFNet devices identification part 1</brief>
            <author>MDE</author>
        </documentation>
        <enum name="eDNET_IDENT1_ND"        value="0">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_VIA"       value="1">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_VOA"       value="2">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_VTVA"      value="3">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_VTPA"      value="3">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_VOTA"      value="4">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_BAMA"      value="5">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_BMAL"      value="6">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_DIVA"      value="6">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_DMOAR"     value="7">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_VUVA"      value="8">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_VIRA"      value="9">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_FORAV"     value="10">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_SOLAR"     value="11">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_MBASV"     value="12">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_MBAUD"     value="12">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_MBASVEX"   value="12">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_DDBAMA"    value="13">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_ATAV"      value="14">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_GTVE"      value="14">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_MISOLAV"   value="14">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_ATNF"      value="14">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_ATCAV"     value="15">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_GTVR"      value="15">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_S2H"       value="16">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_BRGV"      value="17">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_AT420"     value="18">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_OAO"       value="19">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_OATV"      value="20">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_OAM"       value="21">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_OACO"      value="22">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_SOLARION"  value="23">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_OAF"       value="24">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_ORIONPLUS" value="25">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_AVSA"      value="26">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_SHORTBEAM" value="27">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_DIIDENT2"  value="29">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_DIETxO"  value="29">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>

        <enum name="eDNET_IDENT1_DIPROXIMA" value="30">
            <documentation>
                <brief>Pour extension de la gamme DI</brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT1_EDXIDENT2" value="31">
            <documentation>
                <brief>Pour les elements EDX/</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0120" name="eDNet_Ident2_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>DEFNet devices identification part 2</brief>
            <author>MDE</author>
        </documentation>
        <enum name="eDNET_IDENT2_DIND"        value="0">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT2_DIOIR"       value="1">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT2_DIDFAR"      value="3">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT2_DIDMR"      value="4">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT2_DIDTAR"      value="5">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT2_DIDMAR"      value="6">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT2_DIETCO"      value="7">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT2_DIETO"      value="8">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eDNET_IDENT2_DIIAW"      value="12">
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0123" name="eDDS_InputType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Define the given input type</brief>
            <description>Default (eInputType_NotAnInput) value can be used to inform that the given IO is not an input.</description>
            <author>AGO</author>
        </documentation>
        <enum name="eInputType_NotAnInput">
            <documentation>
                <brief>Current IO is not an input</brief>
            </documentation>
        </enum>
        <enum name="eInputType_alarm">
            <documentation>
                <brief>Current input is an alarm</brief>
            </documentation>
        </enum>
        <enum name="eInputType_report">
            <documentation>
                <brief>Current input is a report from an other Input/Output/Relay</brief>
            </documentation>
        </enum>
        <enum name="eInputType_command">
            <documentation>
                <brief>Current input is bound to a command to be processed</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0144" name="eDDS_OutputType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Define the given output type</brief>
            <description>Default (eOUTPUTTYPE_NOTANOUTPUT) value can be used to inform that the given IO is not an Output.</description>
            <author>AGO</author>
        </documentation>
        <enum name="eOUTPUTTYPE_NOTANOUTPUT">
            <documentation>
                <brief>Current IO is not an Output</brief>
            </documentation>
        </enum>
        <enum name="eOUTPUTTYPE_POWER">
            <documentation>
                <brief>Current output is a classical powered output</brief>
            </documentation>
        </enum>
        <enum name="eOUTPUTTYPE_RELAY">
            <documentation>
                <brief>Current output is a relay</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0124" name="eDDS_ScreensaverType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Define the IHM screensaver type</brief>
            <author>AGO</author>
        </documentation>
        <enum name="eScreensaver_None">
            <documentation>
                <brief>No screensaver has to be used</brief>
            </documentation>
        </enum>
        <enum name="eScreensaver_FDL">
            <documentation>
                <brief>Use Fil de l'eau as screensaver</brief>
            </documentation>
        </enum>
        <enum name="eScreensaver_Abstract">
            <documentation>
                <brief>Use event list abstract as screensaver</brief>
            </documentation>
        </enum>
        <enum name="eScreensaver_USG">
            <documentation>
                <brief>Use USG as screensaver</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0126" name="eDDS_JBUS_ECSType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Define the ECS type</brief>
            <author>AGO</author>
        </documentation>
        <enum name="eJBUS_ECS_NONE">
            <documentation>
                <brief>No ECS connected</brief>
            </documentation>
        </enum>
        <enum name="eJBUS_ECS_EXTREMA_OPTIMIZED">
            <documentation>
                <brief>The ECS used is an Extrema. The use of optimized table is requested.</brief>
            </documentation>
        </enum>
        <enum name="eJBUS_ECS_EXTREMA">
            <documentation>
                <brief>The ECS used is an Extrema. The use of optimized table is NOT requested.</brief>
            </documentation>
        </enum>
        <enum name="eJBUS_ECS_ALTAIR">
            <documentation>
                <brief>The ECS used is an Altair</brief>
            </documentation>
        </enum>
        <enum name="eJBUS_ECS_PROXIMA">
            <documentation>
                <brief>The ECS used is a Proxima</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0127" name="tOutputMeasures_t" cat="struct" size="4" padding="2">
        <documentation>
            <brief>Output measure from MEAES</brief>
            <date>2015-03-04T17:28:55</date>
            <author>AES</author>
        </documentation>
        <field name="u16Voltage" type="type_0003" count="1">
            <documentation>
                <brief>Voltage in volt * 100</brief>
            </documentation>
        </field>
        <field name="s16Current" type="type_0004" count="1">
            <documentation>
                <brief>Current in ampere * 1000</brief>
            </documentation>
        </field>
    </type>
    <type id="type_0128" name="tMEAESEnDisOutputs_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>Enable MEAES Outputs</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
            <bfield name="bVAux1" size="1">
                <documentation>
                    <brief>Enable/Disable (1/0) output AUX1</brief>
                </documentation>
            </bfield>
            <bfield name="bVAux2" size="1">
                <documentation>
                    <brief>Enable/Disable (1/0) output AUX2</brief>
                </documentation>
            </bfield>
            <bfield name="bVBoucle" size="1">
                <documentation>
                    <brief>Enable/Disable (1/0) output Boucle</brief>
                </documentation>
            </bfield>
            <bfield name="bVIO" size="1">
                <documentation>
                    <brief>Enable/Disable (1/0) output IO</brief>
                </documentation>
            </bfield>
    </type>
    <type id="type_0129" name="tMEAESOutputPriority_t" cat="struct" size="3" padding="1">
        <documentation>
            <brief>Output priority for overload switch-off. Parameter value can be set to 0xA1=VBoucle, 0xA2=VIO, 0xA3=(VAux1 and VAux2). </brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <field name="u8LowPriority" type="type_0001" count="1">
            <documentation>
                <brief>Lower priority output. First out to switch off.</brief>
            </documentation>
        </field>
        <field name="u8MedPriority" type="type_0001" count="1">
            <documentation>
                <brief>Medium priority output. </brief>
            </documentation>
        </field>
        <field name="u8HighPriority" type="type_0001" count="1">
            <documentation>
                <brief>High priority output. Last out to switch off.</brief>
            </documentation>
        </field>
    </type>
    <type id="type_0132" name="tM1NRPortFault_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>M1NR port fault status</brief>
            <author>MLK</author>
        </documentation>
        <bfield name="breaker activated" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if breaker's port is  active (TRUE) or NOT</brief>
            </documentation>
        </bfield>
        <bfield name="CPL Partner Non Unique" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if CPL module has more than 1 partner</brief>
            </documentation>
        </bfield>
        <bfield name="CPL Module dialog fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if CPL module is missing</brief>
            </documentation>
        </bfield>
        <bfield name="SFP Module dialog fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if FO module is missing</brief>
            </documentation>
        </bfield>
        <bfield name="SFP Module TX fault" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if FO has a Transmission fault</brief>
            </documentation>
        </bfield>		
    </type>
    <type id="type_0203" name="tMPEState_t" cat="alias" size="6" padding="2" origin="type_0050" >
        <documentation>
            <brief>MPE state</brief>
            <date>2014-10-14T18:03:55</date>
            <author>CBY</author>
        </documentation>
    </type>
    <type id="type_0204" name="eDDS_Elite_ModeLine_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>line or loop mode of each line</brief>
            <date>2014-10-14T18:03:55</date>
            <author>CBY</author>
        </documentation>
        <enum name="eDDS_Elite_MODE_LINE_OFF" >
            <documentation>
               <brief>none loop ou line on board</brief>
            </documentation>
        </enum>
        <enum name="eDDS_Elite_MODE_LOOP" >
            <documentation>
               <brief>one loop on board</brief>
            </documentation>
        </enum>
        <enum name="eDDS_Elite_MODE_LINE" >
            <documentation>
               <brief>one line on board</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0205" name="tThreshold_EN54_13_Input_t" cat="struct" size="10" padding="2">
        <documentation>
            <brief>threshold of an input in mV for EN54-13</brief>
            <date>2014-10-14T18:03:55</date>
            <author>CBY</author>
        </documentation>
        <field name="s16thdCOIdle" type="type_0004" count="1">
            <documentation>
                <brief>Threshold between CO and Idle state</brief>
            </documentation>
        </field>
        <field name="s16thdIdlePrealarm" type="type_0004" count="1">
            <documentation>
                <brief>Threshold between Idle and Prealarm state</brief>
            </documentation>
        </field>
        <field name="s16thdPrealarmAlarmActive" type="type_0004" count="1">
            <documentation>
                <brief>Threshold between Prealarm and AlarmActive state</brief>
            </documentation>
        </field>
        <field name="s16thdDelta" type="type_0004" count="1">
            <documentation>
                <brief>Delta for EN54-13</brief>
            </documentation>
        </field>
        <field name="s16thdCC" type="type_0004" count="1">
            <documentation>
                <brief>Threshold between AlarmActive and CC state</brief>
            </documentation>
        </field>
    </type>
    <type id="type_0206" name="eDDS_DeviceInputTypeZone_t" cat="enum" size="1" padding="1"> <!--SyRS_ELITE_540--> <!--SyRS_ELITE_550--> <!-- SyRS_ELITE_560--> <!-- SyRS_ELITE_570 -->
        <documentation>
            <brief>Define the given device input type Zone</brief>
            <author>CBY</author>
        </documentation>
        <enum name="eDEVICE_INPUT_TYPE_ZONED_NONE">
            <documentation>
                <brief>None input type zoned</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_ZONED_FIRE_ALARM">
            <documentation>
                <brief>Current fire alarm input is linked to a zone</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_ZONED_LATCHED_TECHNICAL_ALARM">
            <documentation>
                <brief>Current Latched Technical alarm input is linked to a zone</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_ZONED_SELF_RESETED_TECHNICAL_ALARM">
            <documentation>
                <brief>Current Self-reseted Technical alarm input is linked to a zone</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_ZONED_TECHNICAL_FAULT">
            <documentation>
                <brief>Current Technical fault input is linked to a zone</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0207" name="tTimeSlotDefinition_t" cat="struct" size="8" padding="4"> <!--SyRS_ELITE_970-->
        <documentation>
            <brief>Time Slot deffinition</brief>
            <date>2014-10-14T18:03:55</date>
            <author>CBY</author>
        </documentation>
        <field name="u32StartTimestamp" type="type_0005" count="1">
            <documentation>
                <brief>Start timestamp</brief>
            </documentation>
        </field>
        <field name="u32StopTimestamp" type="type_0005" count="1">
            <documentation>
                <brief>Stop timestamp</brief>
            </documentation>
        </field>
    </type>
    <type id="type_0208" name="eDDS_Multilingual_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Multilingual</brief>
            <author>CBY</author>
        </documentation>
        <enum name="eFrench">
            <documentation>
                <brief>French Language</brief>
            </documentation>
        </enum>
        <enum name="eEnglish">
            <documentation>
                <brief>English Language</brief>
            </documentation>
        </enum>
        <enum name="eItalian">
            <documentation>
                <brief>Italian Language</brief>
            </documentation>
        </enum>
        <enum name="eDutch">
            <documentation>
                <brief>Dutch Language</brief>
            </documentation>
        </enum>
        <enum name="eGerman">
            <documentation>
                <brief>German Language</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0209" name="eDDSFacetTypeElite_t" cat="enum" size="1" padding="1"> <!--SyRS_ELITE_1800-->
        <documentation>
            <brief>facet type</brief>
            <date>2014-10-14T18:03:55</date>
            <author>CBY</author>
        </documentation>
        <enum name="eFP_ZONE" value="1">
            <documentation>
            <brief>front panel for Zone</brief>
            </documentation>
        </enum>
        <enum name="eFP_ECD" value="2">
            <documentation>
            <brief>front panel for ECD (ECD need a BDEXT module on the loop).</brief>
            </documentation>
        </enum>
        <enum name="eFP_C_UGA" value="3">
            <documentation>
            <brief>front panel for French evacuation compliant NF936.</brief>
            </documentation>
        </enum>
        <enum name="eFP_C_BS" value="4">
            <documentation>
            <brief>front panel for UK evacuation </brief>
            </documentation>
        </enum>
        <enum name="eFP_C_BE" value="5">
            <documentation>
            <brief>front panel for Belgium evacuation </brief>
            </documentation>
        </enum>
        <enum name="eFP_C" value="6">
            <documentation>
            <brief>front panel for evacuation </brief>
            </documentation>
        </enum>
        <enum name="eFP_C_GER" value="7">
            <documentation>
            <brief>front panel for German evacuation</brief>
            </documentation>
        </enum>   
        <enum name="eFP_CMD" value="8">
            <documentation>
            <brief>front panel for manual command</brief> 
            </documentation>
        </enum>   
        <enum name="eFP_J" value="9">
            <documentation>
            <brief>front panel for 1 fault routing information</brief>
            </documentation>
        </enum>          
        <enum name="eFP_E" value="10">
            <documentation>
            <brief>front panel for alarm routing </brief>
            </documentation>
        </enum>
		<enum name="eFP_E_GER" value="11">
            <documentation>
            <brief>front panel for both alarm and fault routing with manual call</brief>
            </documentation>
        </enum>
		<enum name="eFP_G_CMD" value="12">
            <documentation>
            <brief>front panel for 2 commands output fail-safe</brief>
            </documentation>
        </enum>
		<enum name="eFP_G_FR" value="13">
            <documentation>
            <brief>front panel for command with position control</brief>
            </documentation>
        </enum>
		<enum name="eFP_G_EN" value="14">
            <documentation>
            <brief>front panel for security function with manual command</brief>
            </documentation>
        </enum>
		<enum name="eFP_G_EXT" value="15">
            <documentation>
            <brief>front panel for Extinguishing without manual command</brief>
            </documentation>
        </enum>
      <enum name="eFP_KEY" value="16">
        <documentation>
          <brief>4 keys inputs connected to the front panel</brief>
        </documentation>
      </enum>
    </type>
    <type id="type_0214" name="eDDSTypeRepeaterPanel_t" cat="enum" size="1" padding="1"> <!--SyRS_ELITE_3470-->
        <documentation>
            <brief>state of the trigger that trig the group</brief>
            <date>2014-10-14T18:03:55</date>
            <author>CBY</author>
        </documentation>
        <enum name="eDDS_TRE_EGRS_ENTRY_LEVEL_REPEATER_PANEL" >
            <documentation>
                <brief>TRE EGRS: Entry level repeater panel.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_TRE_HGRS_HIGHT_LEVEL_REPEATER_PANEL" >
            <documentation>
                <brief>TRE HGRS: Hight level repeater panel.</brief>
            </documentation>
        </enum>
        <enum name="eDDS_TRE_UK_REPEATER_PANEL" >
            <documentation>
                <brief>TRE UK</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0215" name="eDDS_Channel_Type_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Channel type for T-NET device</brief>
            <date>2014-10-14T18:03:55</date>
            <author>CBY</author>
        </documentation>
        <enum name="eDDS_CHANNEL_UNDEFINED" value="0">
            <documentation>
                <brief>undefined type</brief>
            </documentation>
        </enum>
        <enum name="eDDS_CHANNEL_ALGO" value="1">
            <documentation>
                <brief>Fire Detection channel. Used to provide Fire alarm and pre alarm</brief>
            </documentation>
        </enum>
        <enum name="eDDS_CHANNEL_ANAI" value="2">
            <documentation>
                <brief>Analogic input chanel. Used to provide </brief>
            </documentation>
        </enum>
        <enum name="eDDS_CHANNEL_GENI" value="3">
            <documentation>
                <brief>Generic Input chanel</brief>
            </documentation>
        </enum>
        <enum name="eDDS_CHANNEL_GENO" value="4">
            <documentation>
                <brief>Generic Output chanel type</brief>
            </documentation>
        </enum>
        <enum name="eDDS_CHANNEL_NOMO" value="5">
            <documentation>
                <brief>NOne Monitored Output chanel type</brief>
            </documentation>
        </enum>
        <enum name="eDDS_CHANNEL_LEDS" value="6">
            <documentation>
                <brief>LEDS chanel type</brief>
            </documentation>
        </enum>
		<enum name="eDDS_CHANNEL_PSUI" value="7">
            <documentation>
                <brief>Power supply input. Device PSE</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0216" name="eDDS_Interrupt_Type_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Interrupt type for T-NET device</brief>
            <date>2014-10-14T18:03:55</date>
            <author>CBY</author>
        </documentation>
        <enum name="eDDS_INTERRUPT_UNDEFINED" value="0">
            <documentation>
                <brief>undefined type</brief>
            </documentation>
        </enum>
        <enum name="eDDS_INTERRUPT_FD" value="1">
            <documentation>
                <brief>Fire Detection type</brief>
            </documentation>
        </enum>
        <enum name="eDDS_INTERRUPT_INPUT" value="2">
            <documentation>
                <brief>Generic input type</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0219" name="eDDSFacetFunctionElite_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>facet function</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eFACET_ZONE" >
            <documentation>
                <brief>Zone link</brief>
            </documentation>
        </enum>
        <enum name="eFACET_SAFETY_FUNCTION" >
            <documentation>
                <brief>Safety function link</brief>
            </documentation>
        </enum>
		<enum name="eFACET_SAFETY_FUNCTION_LIST" >
            <documentation>
                <brief>a list of safety function is linked to the facet</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0220" name="eDDS_DeviceInputTypeReport_t" cat="enum" size="1" padding="1"> <!--SyRS_ELITE_540--> <!--SyRS_ELITE_550--> <!-- SyRS_ELITE_560--> <!-- SyRS_ELITE_570 -->
        <documentation>
            <brief>Define the given device input type report</brief>
            <author>CBY</author>
        </documentation>
         <enum name="eDEVICE_INPUT_TYPE_REPORT_NONE">
            <documentation>
                <brief>none input type report</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_REPORT_POSITION_FEEDBACK_IDLE_POSITION">
            <documentation>
                <brief>Current input is a report Idle position feed back  from an other Input/Output/Relay</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_REPORT_POSITION_FEEDBACK_SECURITY_POSITION">
            <documentation>
                <brief>Current input is a report Security position feed back from an other Input/Output/Relay</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_REPORT_GENERAL_STATE_FAULT">
            <documentation>
                <brief>Current input is a report General state Fault from an other Input/Output/Relay</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_REPORT_GENERAL_STATE_SECTOR_FAULT">
            <documentation>
                <brief>Current input is a report General state sector Fault from an other Input/Output/Relay</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_REPORT_GENERAL_STATE_BATTERY_FAULT">
            <documentation>
                <brief>Current input is a report General state battery Fault from an other Input/Output/Relay</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0221" name="eDDS_DeviceInputTypeCommand_t" cat="enum" size="1" padding="1"> <!--SyRS_ELITE_540--> <!--SyRS_ELITE_550--> <!-- SyRS_ELITE_560--> <!-- SyRS_ELITE_570 -->
        <documentation>
            <brief>Define the given device input type Command</brief>
            <author>CBY</author>
        </documentation>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_NONE">
            <documentation>
                <brief>none input type command</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_CHANGE_OPERATING_CONDITION_CIE_RESET">
            <documentation>
                <brief>Current input is bound to a command Change operating condition CIE reset to be processed</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_CHANGE_OPERATING_CONDITION_CIE_ACCES_LEVEL">
            <documentation>
                <brief>Current input is bound to a command Change operating condition CIE user level to be processed</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_CHANGE_OPERATING_CONDITION_CIE_TIME_SLOT_NIGHT_DAY">
            <documentation>
                <brief>Current input is bound to a command Change operating condition CIE time slot Night/Day to be processed</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_CHANGE_OPERATING_CONDITION_CIE_DISABLE_ZONES">
            <documentation>
                <brief>Current input is bound to a command Change operating condition CIE Disable Zones to be processed</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_CHANGE_OPERATING_CONDITION_CIE_DISABLE_AUTOMATICS_DEVICES_OF_A_ZONE">
            <documentation>
                <brief>Current input is bound to a command Change operating condition CIE Disable Automatics devices of a zone to be processed</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_CHANGE_OPERATING_CONDITION_CIE_DISABLE_DEVICE">
            <documentation>
                <brief>Current input is bound to a command Change operating condition CIE Disable Device to be processed</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_CHANGE_OPERATING_CONDITION_CIE_MUTE">
            <documentation>
                <brief>Current input is bound to a command Change operating condition CIE mute to be processed</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_CHANGE_OPERATING_CONDITION_CIE_SWEDISH_KEY">
            <documentation>
                <brief>Current input is bound to a command Change operating condition CIE Swedish key to be processed</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_SCENARIO">
            <documentation>
                <brief>Current input is bound to a Command scenario</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_UGA_PROCESS_ACKNOWLEDGEMENT_SCENARIO">
            <documentation>
                <brief>Current input is bound to a Command UGA process acknowledgement scenario</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_UGA_RESTRAINED_QUIESCENT_SCENARIO">
            <documentation>
                <brief>Current input is bound to a Command UGA restrained quiescent scenario</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_DISABLE_SCENARIO">
            <documentation>
                <brief>Current input is bound to a Command  disable scenario</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_SILENCE_SCENARIO">
            <documentation>
                <brief>Current input is bound to a Command Silence scenario</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_RESOUND_SCENARIO">
            <documentation>
                <brief>Current input is bound to a Command resound scenario</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_INPUT_TYPE_COMMAND_CHANGE_MANUAL_AUTOMATIC_MODE_SCENARIO">
            <documentation>
                <brief>Current input is bound to a Change parameter Manual / automatic mode scenario</brief>
            </documentation>
        </enum>
    </type>

    <type id="type_0222" name="tEAES_Used_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>EAES Use</brief>
            <author>AES</author>
        </documentation>
        <bfield name="EAES1 is used" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: EAES1 is used by the main backplane</brief>
            </documentation>
        </bfield>
        <bfield name="EAES2 is used" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: EAES2 is used by the backplane extension </brief>
            </documentation>
        </bfield>
    </type>

    <type id="type_0133" name="IHM_IO_FuncStates" cat="fusion" size="1" padding="1">
		<documentation>
            <brief></brief>
        </documentation>
        <fusion origin="type_0051" offset="0" name="relay" />
        <fusion origin="type_0037" offset="200" name="input" />
        <fusion origin="type_0055" offset="400" name="output" />
        <fusion origin="type_0038" offset="600" name="deviceOut" />
    </type>

    <type id="type_0142" name="eEquipmentVariant_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>List of possible equipment Variants, depends on equipment type</brief>
            <author>AGO</author>
        </documentation>
        <enum name="eEQ_VARIANT_NOT_APPLICABLE" value="0">
            <documentation>
                <brief>There is no variant for the given equipment type</brief>
            </documentation>
        </enum>
        <enum name="eEQ_VARIANT_CMSI_A" value="1">
            <documentation>
                <brief>CMSI A Type variant</brief>
                <remarks>Only if equipment type is eEQ_TYPE_CMSI</remarks>
            </documentation>
        </enum>
        <enum name="eEQ_VARIANT_CMSI_B" value="2">
            <documentation>
                <brief>CMSI B Type variant</brief>
                <remarks>Only if equipment type is eEQ_TYPE_CMSI</remarks>
            </documentation>
        </enum>
        <enum name="eEQ_VARIANT_ELITE" value="3">
            <documentation>
                <brief>ECS type ELITE</brief>
                <remarks>Only if equipment type is eEQ_TYPE_ECS</remarks>
            </documentation>
        </enum>
    </type>


    <type id="type_0143" name="eDNet_IO_type_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Device input type defines the input handler to use for the device inputs</brief>
            <author>MDE</author>
        </documentation>
        <enum name="eDNET_IO_TYPE_NONE">
            <documentation>
                <brief>Device IO is connected to nothing.</brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_LED">
            <documentation>
                <brief>Device IO is a LED</brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_PSI">
            <documentation>
                <brief>Device IO is a Power Supply Input</brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_OUTPUT" value="10">
            <documentation>
                <brief> Device Input END</brief>
                <description>This is the first output type value possible</description>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_OUTPUT_AT">
            <documentation>
                <brief> Device output type AT (ATCAV, ATAV, etc). </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_OUTPUT_EDX">
            <documentation>
                <brief> Device output type EDX (EDL, ED4L, EDA, EDR2E, etc). </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_OUTPUT_ETCO">
            <documentation>
                <brief> Device output type ETCO (ETCO, ET4CO, etc). </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_OUTPUT_DI">
            <documentation>
                <brief> Device output type DI (Vega). </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_OUTPUT_ED4YL">
            <documentation>
                <brief> Device output type ED4YL</brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_OUTPUT_EDBD">
            <documentation>
                <brief> Device output type EDBD</brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_OUTPUT_EDBDA">
            <documentation>
                <brief> Device output type EDBDA</brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_OUTPUT_END" value="99">
            <documentation>
                <brief> Device Input END</brief>
                <description>This is the last output type value possible</description>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT" value="100">
            <documentation>
                <brief> Device IO is an input</brief>
                <description>This is the first Input type value</description>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_AT">
            <documentation>
                <brief> Device input type AT (ATCAV, ATAV, etc). </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_DI">
            <documentation>
                <brief> Device input type DI (Vega). </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_EDX">
            <documentation>
                <brief> Device input type EDX (EDL, ED4L, EDA, EDR2E, etc). </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_ETCO_NO">
            <documentation>
                <brief> Device input type ETCO with none monitored input and Normally Open contact. </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_ETCO_NC">
            <documentation>
                <brief> Device input type ETCO with none monitored input and Normally Close contact. </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_ETCO_NO_RFL">
            <documentation>
                <brief> Device input type ETCO with monitored input and Normally Open contact. </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_ETCO_NC_RFL">
            <documentation>
                <brief> Device input type ETCO with monitored input and Normally Close contact. </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_OAO">
            <documentation>
                <brief> Device input type Orion Optical sensor. </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_OAM">
            <documentation>
                <brief> Device input type Orion Multi-Sensor. </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_OAT">
            <documentation>
                <brief> Device input type Orion Heat Sensor. </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_OPLUS">
            <documentation>
                <brief> Device input type Orion+. </brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_ED4YL">
            <documentation>
                <brief> Device input type ED4YL</brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_EDBD">
            <documentation>
                <brief> Device input type EDBD</brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_EDBDA">
            <documentation>
                <brief> Device input type EDBDA</brief>
            </documentation>
        </enum>
        <enum name="eDNET_IO_TYPE_INPUT_END" >
            <documentation>
                <brief> Device Input END</brief>
                <description>This is the last Input type value possible</description>
            </documentation>
        </enum>
    </type>

    <type id="type_0104" name="eBlocking_Type_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Group or function blocking state</brief>
            <author>MLK</author>
        </documentation>
        <enum name="eBLOCKING_TYPE_NONE">
            <documentation>
                <brief>Group is not blocked </brief>
            </documentation>
        </enum>
        <enum name="eBLOCKING_TYPE_AUTO">
            <documentation>
                <brief>Group is blocked for automatic command</brief>
            </documentation>
        </enum>
        <enum name="eBLOCKING_TYPE_INACTIVE">
            <documentation>
                <brief>Group is blocked, but trigger is not active</brief>
            </documentation>
        </enum>
    </type>

    <type id="type_0105" name="tGroupTriggeredDisable_t" cat="bitfield" size="1" padding="1" origin="type_0001" >
        <documentation>
            <brief>disable trigger state</brief>
        </documentation>
        <bfield name="disable by cmd" size="1" type="type_0018">
            <documentation>
                <description>Indicates if triggered link is disable (disable sounder line command)</description>
            </documentation>
        </bfield>
        <bfield name="disable by state" size="1" type="type_0007">
            <documentation>
                <description>indicates if all the triggered are disable</description>
            </documentation>
        </bfield>
    </type>

    <type id="type_0134" name="tMPS_State_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>State specific to MPS</brief>
            <author>MLK</author>
        </documentation>
        <bfield name="AES1A is missing" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: AES1A is missing </brief>
            </documentation>
        </bfield>
        <bfield name="AES1B is missing" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: AES1B is missing </brief>
            </documentation>
        </bfield>
		<bfield name="STM32 missing" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: communication problem with STM32 </brief>
            </documentation>
        </bfield>
    </type>

	<type id="type_0075" name="eExternalIP_t" cat="enum" size="1" padding="1">
	    <documentation>
            <brief>type of external IP</brief>
            <author>MLK</author>
        </documentation>
			<enum name="eEXTERNAL_IP_FIX">
            <documentation>
                <brief>Group is not blocked </brief>
            </documentation>
			</enum>
			<enum name="eEXTERNAL_IP_DHCP">
            <documentation>
                <brief>Group is blocked for automatic command</brief>
            </documentation>
			</enum>
	</type>

	<type id="type_0059" name="eETHPortFunction" cat="enum" size="1" padding="1">
	    <documentation>
            <brief>Ethernet port function</brief>
            <author>AGO</author>
        </documentation>
			<enum name="eETHPORT_UNUSED">
                <documentation>
                    <brief>The given port is not used</brief>
                </documentation>
			</enum>
			<enum name="eETHPORT_SENTINEL">
                <documentation>
                    <brief>The given port is used for Sentinel bound </brief>
                </documentation>
			</enum>
			<enum name="eETHPORT_SUPERVISOR">
                <documentation>
                    <brief>The given port is used for HG Supervisor bound</brief>
                </documentation>
			</enum>
	</type>



 	<type id="type_0135" name="eRedundancy_Mode_t" cat="enum" size="1" padding="1">
	    <documentation>
            <brief>IRP Mode</brief>
            <author>MLK</author>
        </documentation>
			<enum name="eRED_MODE_WAITING">
            <documentation>
                <brief>MSW is waiting for PC Configuration Software OR MSW in IRM mode to change mode (to IRL or IRM) and opening I-Net Ports.</brief>
            </documentation>
			</enum>
			<enum name="eRED_MODE_IRL">
            <documentation>
                <brief>MSW is a I-Net Ring Listener</brief>
            </documentation>
			</enum>
			<enum name="eRED_MODE_IRM">
            <documentation>
                <brief>MSW is I-Net Ring Manager</brief>
            </documentation>
			</enum>
	</type>


    <type id="type_0136" name="eEmission_t" cat="enum" size="1" padding="1">
	    <documentation>
            <brief>emission repeated state (extinction) </brief>
            <author>MLK</author>
        </documentation>
			<enum name="eEMISSION_OFF_IEA_FAULT_OFF">
            <documentation>
                <brief>Emission is not launched and there is no IEA fault</brief>
            </documentation>
			</enum>
			<enum name="eEMISSION_ON_IEA_FAULT_OFF">
            <documentation>
                <brief>Emission is launched and there is no IEA fault </brief>
            </documentation>
			</enum>
			<enum name="eEMISSION_OFF_IEA_FAULT_ON">
            <documentation>
                <brief>Emission is not launched and there is an IEA fault</brief>
            </documentation>
			</enum>
			<enum name="eEMISSION_ON_IEA_FAULT_ON">
            <documentation>
                <brief>Emission is launched and there is an IEA fault</brief>
            </documentation>
			</enum>
	</type>

    <type id="type_0137" name="tVirtualPointType_t" cat="alias" size="2" padding="2" origin="type_0112">
        <documentation>
            <brief>Virtual Point types - tDDS_LBL_DeviceType_t Reduced Index</brief>
            <author>AGO</author>
        </documentation>
    </type>
    <type id="type_0138" name="tDDSFilename_t" cat="alias" size="40" padding="1" origin="type_0001" display="ascii" >
        <documentation>
            <brief>Filename used in the embedded target (UTF-8)</brief>
            <date>2015-07-23T14:14:51</date>
            <author>AGO</author>
        </documentation>
    </type>

	 <type id="type_0139" name="eMBEncoderFault_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>MBD dsPic encoder faults</brief>
            <author>AGO</author>
        </documentation>
        <enum name="eMB_ENCODER_OK">
            <documentation>
                <brief>No fault have been detected on the encoder</brief>
            </documentation>
        </enum>
        <enum name="eMB_ENCODER_DIAG_FAULT">
            <documentation>
                <brief>Cannot communicate with encoder</brief>
            </documentation>
        </enum>
        <enum name="eMB_ENCODER_FLASH_FAULT">
            <documentation>
                <brief>Encoder reported that he had a flash integrity fault</brief>
            </documentation>
        </enum>
        <enum name="eMB_ENCODER_RAM_FAULT">
            <documentation>
                <brief>Encoder reported that he had a RAM integrity fault</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0162" name="tSwitchPortMask_t" cat="alias" size="2" padding="2" origin="type_0003" >
        <documentation>
            <brief>Bitfield on 16bits which list port </brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
    </type>

	    <type id="type_0163" name="eFAFFState_t" cat="enum" size="1" padding="1">
	    <documentation>
            <brief>state specific to FAFF</brief>
            <author>MLK</author>
        </documentation>
			<enum name="eFAFF_STATE_UNDEFINED">
            <documentation>
                <brief>FAFF is not defined in DDS</brief>
            </documentation>
			</enum>
			<enum name="eFAFF_STATE_OK">
            <documentation>
                <brief>FAFF is up</brief>
            </documentation>
			</enum>
			<enum name="eFAFF_STATE_DIALOG_FAULT">
            <documentation>
                <brief>FAFF is down (no communication)</brief>
            </documentation>
			</enum>
			<enum name="eFAFF_STATE_LED_HW_FAULT">
            <documentation>
                <brief>a led of FAFF is disable because of a hardware problem</brief>
            </documentation>
			</enum>
			<enum name="eFAFF_STATE_BUTTON_HW_FAULT">
            <documentation>
                <brief>a button of FAFF is disable because of a hardware problem</brief>
            </documentation>
			</enum>
			</type>

 	<type id="type_0164" name="eRingState_t" cat="enum" size="1" padding="1">
	    <documentation>
            <brief>Ring state</brief>
            <author>MLK</author>
        </documentation>
			<enum name="eRING_CLOSE">
            <documentation>
                <brief>I-NET ring OK</brief>
            </documentation>
			</enum>
			<enum name="eRING_OPEN">
            <documentation>
                <brief>I-NET ring failure</brief>
            </documentation>
			</enum>
			<enum name="eRING_UNDEFINED">
            <documentation>
                <brief>I-NET ring undefined state</brief>
            </documentation>
			</enum>
	</type>

    <type id="type_0165" name="tCPLDomainText_t" cat="alias" size="32" padding="1" origin="type_0001" display="ascii">
        <documentation>
            <brief>Text type to name each domain (32 characters length, in ASCII)</brief>
            <date>2015-09-03T11:42:00</date>
            <author>MLK</author>
        </documentation>
    </type>
	<type id="type_0166" name="tCPLPartnerListInfo_t" cat="struct" size="10" padding="2">
        <documentation>
            <brief>communication quality and mac address of CPL partner on the CPL section</brief>
            <date>2015-09-03T11:42:00</date>
            <author>MLK</author>
        </documentation>
			<field name="xMacAddress" type="type_0100" count="1">
                  <documentation>
                      <brief>MAC Address of the module</brief>
                  </documentation>
             </field>
			 <field name="u16BitrateRX" type="type_0003" count="1">
                  <documentation>
                      <brief>bitrate on CPL in real time Unit : Mbit/s  Range : 0 to 300 Mbit/s</brief>
                  </documentation>
             </field>
			 <field name="u16BitrateTX" type="type_0003" count="1">
                  <documentation>
                      <brief>bitrate on CPL in real time Unit : Mbit/s  Range : 0 to 300 Mbit/s</brief>
                  </documentation>
             </field>			 
	</type>
 	<type id="type_0167" name="eSwithPortState_t" cat="enum" size="1" padding="1">
	    <documentation>
            <brief>state of port of the ethernet switch</brief>
            <author>MLK</author>
        </documentation>
			<enum name="ePORT_DISABLE">
            <documentation>
                <brief>port is disabled.</brief>
            </documentation>
			</enum>
			<enum name="ePORT_BLOCKING">
            <documentation>
                <brief>port is in blocking/listening state</brief>
            </documentation>
			</enum>
			<enum name="ePORT_LEARNING">
            <documentation>
                <brief>port is in learning state</brief>
            </documentation>
			</enum>
			<enum name="ePORT_FORWARDING">
            <documentation>
                <brief>port is in forwarding state.</brief>
            </documentation>
			</enum>
	</type>

    <type id="type_0168" name="ePointTypeCategory_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Point type display category</brief>
            <author>JSR</author>
        </documentation>  
        <enum name="ePointType_NONE">
            <documentation>
                <brief>The point type has no display category</brief>
            </documentation>
        </enum>  
        <enum name="ePointType_DM">
            <documentation>
                <brief>The point type belongs to a "Declencheurs manuels (DM) (like DMOA or BMAL" category</brief>
            </documentation>
        </enum>  
        <enum name="ePointType_MD">
            <documentation>
                <brief>The point type belongs to "deported module" category</brief>
            </documentation>
        </enum>  
        <enum name="ePointType_Radio">
            <documentation>
                <brief>The point type belongs to "radio points" category</brief>
            </documentation>
        </enum>  
        <enum name="ePointType_OIR">
            <documentation>
                <brief>The point type belongs to "radio intermediates" category</brief>
            </documentation>
        </enum>  
   </type>
   
    <type id="type_0161" name="tM4IO2RState_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>Custom part of M4IO2R general board state</brief>
        </documentation>
        <bfield name="aesState" size="2" type="type_0001">
            <documentation>
            </documentation>
        </bfield>
    </type>   

	<type id="type_0145" name="xDeclaredDeviceListe_t" cat="alias" origin="type_0001" size="63" padding="1">
        <documentation>
            <brief>Bit field:
                - Bit 0 -> @1 is declared
                - Bit n -> @ n + 1 is declared
            </brief>
        </documentation>
    </type>
    
    <type id="type_0146" name="eTnetDeviceType_t" cat="enum" size="2" padding="2">
        <documentation>
            <brief>T-NET device type</brief>
        </documentation>
        <enum name="eLYNX_T2OCO" value="1">
            <documentation>
                <brief>Thermic double optic with CO detector</brief>
            </documentation>
        </enum>
        <enum name="eLYNX_T2O" value="2"> 
            <documentation>
                <brief> </brief>
            </documentation>
        </enum>
        <enum name="eLYNX_2O" value="3"> 
            <documentation>
                <brief>Thermic double optic detector</brief>
            </documentation>
        </enum>
        <enum name="eLYNX_DM" value="4"> 
            <documentation>
                <brief>Manual call point</brief>
            </documentation>
        </enum>
        <enum name="eAVST" value="5"> 
            <documentation>
                <brief>Sounder</brief>
            </documentation>
        </enum>
        <enum name="eDFCT" value="6"> 
            <documentation>
                <brief>Sounder + Flash </brief>
            </documentation>
        </enum>
        <enum name="eDFDT" value="7"> 
            <documentation>
                <brief> </brief>
            </documentation>
        </enum>
        <enum name="eLYNX_ET" value="8"> 
            <documentation>
                <brief>Input + relay</brief>
            </documentation>
        </enum>
        <enum name="eLYNX_MT" value="9"> 
            <documentation>
                <brief>Input + driven output</brief>
            </documentation>
        </enum>
        <enum name="eLYNX_T" value="10"> 
            <documentation>
                <brief>Thermic detector</brief>
            </documentation>
        </enum>
        <enum name="eECDO" value="11"> 
            <documentation>
                <brief> </brief>
            </documentation>
        </enum>
        <enum name="eEC" value="12"> 
            <documentation>
                <brief> </brief>
            </documentation>
        </enum>
        <enum name="eLYNX_T2OI" value="13"> 
            <documentation>
                <brief>Thermic double optic detector</brief>
            </documentation>
        </enum>
		<enum name="eSBT50" value="14"> 
            <documentation>
                <brief>Beam detector</brief>
            </documentation>
        </enum>
		<enum name="eAVSTP" value="15"> 
            <documentation>
                <brief>Sounder with a battery</brief>
            </documentation>
        </enum>
        <enum name="eDFCTP" value="16"> 
            <documentation>
                <brief>Sounder + Flash with a battery </brief>
            </documentation>
        </enum>
        <enum name="eDFDTP" value="17"> 
            <documentation>
                <brief> </brief>
            </documentation>
        </enum>
		<enum name="eLYNX_ETC230" value="18"> 
            <documentation>
                <brief>Input + 230V relay</brief>
            </documentation>
        </enum>
		<enum name="eLYNX_DMG" value="19"> 
            <documentation>
                <brief>German manual call point</brief>
            </documentation>
        </enum>
		<enum name="eLYNX_BDEXT" value="20"> 
            <documentation>
                <brief>Extinguishing module</brief>
            </documentation>
        </enum>
    </type> 
	
    <type id="type_0147" name="tTnetSSDBlockData_t" cat="struct" size="30" padding="1"> <!--SyRS_ELITE_970-->
        <documentation>
            <brief>T-NET device SSD block data</brief>
        </documentation>
        <field name="u8BlockSize" type="type_0001" count="1">
            <documentation>
                <brief>Block size in byte</brief>
            </documentation>
        </field>
        <field name="u8BlockData" type="type_0001" count="29">
            <documentation>
                <brief>SSD block data to download</brief>
            </documentation>
        </field>
    </type>
    <type id="type_0149" name="tControllerState_t" cat="bitfield" size="2" padding="1">
        <documentation>
            <brief>Extension board controller state</brief>
        </documentation>
        <bfield name="Started" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: the controller has just started</brief>
            </documentation>
        </bfield>
        <bfield name="SSD fault" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: the controller needs to be downloaded</brief>
            </documentation>
        </bfield>
        <bfield name="System fault" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: the controller is in system fault</brief>
            </documentation>
        </bfield>
        <bfield name="PRONet Reception buffer overflow" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: Command have been lost</brief>
            </documentation>
        </bfield>
        <bfield name="PRONet Emission buffer overflow" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: the controller lost some fieldbus information</brief>
            </documentation>
        </bfield>
        <bfield name="Start switch opened" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: controller switch open</brief>
            </documentation>
        </bfield>
        <bfield name="Start switch short circuited" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: controller switch short circuited</brief>
            </documentation>
        </bfield>
        <bfield name="Return switch opened" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: controller switch open</brief>
            </documentation>
        </bfield>
        <bfield name="Return switch short circuited" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: controller switch short circuited</brief>
            </documentation>
        </bfield>
        <bfield name="Isolators closing sequence" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: Closing sequence in progress</brief>
            </documentation>
        </bfield>
        <bfield name="At least one disjointed device" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: loop / line is open</brief>
            </documentation>
        </bfield>
		<bfield name="bIsActivityPeriode" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: The controler is in activty periode</brief>
            </documentation>
        </bfield>
		<bfield name="Fieldbus cmd buffer overflow" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: Command have been lost</brief>
            </documentation>
        </bfield>
		<bfield name="Client memory integrity fault" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: client memory corrupted</brief>
            </documentation>
        </bfield>
		<bfield name="Factory object integrity fault" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: Factory memory corrupted</brief>
            </documentation>
        </bfield>
    </type>
    <type id="type_0150" name="tLoopLinesState_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>Loop line state</brief>
        </documentation>
        <bfield name="En54-13 loop fault" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: the controller has just started</brief>
            </documentation>
        </bfield>
        <bfield name="En54-13 line 1 fault" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: the controller needs to be downloaded</brief>
            </documentation>
        </bfield>
        <bfield name="En54-13 line 2 fault" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: the controller is in system fault</brief>
            </documentation>
        </bfield>
    </type>
    <type id="type_0151" name="tBasicVersion_t" cat="struct" size="2" padding="1">
        <documentation>
            <brief>Basic version used to user</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <field name="u8Version" type="type_0001" count="1">
            <documentation>
            </documentation>
        </field>
        <field name="u8Revision" type="type_0001" count="1">
            <documentation>
            </documentation>
        </field>
    </type>
    <type id="type_0152" name="eControllerMode_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>T-NET device type</brief>
        </documentation>
        <enum name="eCTR_EXPLOITATION_MODE" value="1">
            <documentation>
                <brief> </brief>
            </documentation>
        </enum>
        <enum name="eCTR_PARAMETER_MODE" value="2">
            <documentation>
                <brief>The controller is waited SSD</brief>
            </documentation>
        </enum>
        <enum name="eCTR_DRIVEN_MODE" value="3">
            <documentation>
                <brief>The controller doesn't do anything by its own</brief>
            </documentation>
        </enum>
        <enum name="eCTR_PROGRAMMING_MODE" value="4">
            <documentation>
                <brief>Bootloader mode</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0153" name="eSwitchState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>End switch and begin switch management</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eSWITCH_NA" >
            <documentation>
                <brief>No switch on this device</brief>
            </documentation>
        </enum>
        <enum name="eSWITCH_STANDBY" >
            <documentation>
                <brief>if the device is not commanded and the begin switch is its right position(active)</brief>
            </documentation>
        </enum>
        <enum name="eSWITCH_SECURITY" >
            <documentation>
                <brief>if the device is commanded and the end switch is its right position(active)</brief>
            </documentation>
        </enum>
        <enum name="eSWITCH_STANDBY_FAULT" >
            <documentation>
                <brief>if the device is not commanded and the begin switch is not its right position (inactive)</brief>
            </documentation>
        </enum>
        <enum name="eSWITCH_SECURITY_FAULT" >
            <documentation>
                <brief>if the device is commanded and the end switch is not its right position (inactive)</brief>
            </documentation>
        </enum>
        <enum name="eSWITCH_UNKNOWN" >
            <documentation>
                <brief>If the line is in default (SC/OC), we can't know the Switch status.</brief>
            </documentation>
        </enum>
		<enum name="eSWITCH_DAS_EXECUTION" >
            <documentation>
                <brief>When line is commanded but not yet in security fault or security</brief>
            </documentation>
        </enum>
        <enum name="eSWITCH_STANDBY_WITH_FAULT" >
            <documentation>
                <brief>if the device is not commanded and the begin switch is its right position(active)
				and end switch is in default (SC/OC)</brief>
            </documentation>
        </enum>
        <enum name="eSWITCH_SECURITY_WITH_FAULT" >
            <documentation>
                <brief>if the device is commanded and the end switch is its right position(active)
				and begin switch is in default (SC/OC)</brief>
            </documentation>
        </enum>
        <enum name="eSWITCH_STANDBY_FAULT_WITH_FAULT" >
            <documentation>
                <brief>if the device is not commanded and the begin switch is not its right position (inactive),
				and end switch is in default (SC/OC)(</brief>
            </documentation>
        </enum>
        <enum name="eSWITCH_SECURITY_FAULT_WITH_FAULT" >
            <documentation>
                <brief>if the device is commanded and the end switch is not its right position (inactive)
				and begin switch is in default (SC/OC)</brief>
            </documentation>
        </enum>		
		<enum name="eSWITCH_DAS_EXECUTION_WITH_FAULT" >
            <documentation>
                <brief>When line is commanded but not yet in security fault or security
				and begin switch is in default (SC/OC)</brief>
            </documentation>
        </enum>		
        <enum name="eSWITCH_NA_WITH_FAULT" >
            <documentation>
                <brief>No switch on this device but end or begin switch in fault (case when there's only a begin or
				and end switch)</brief>
            </documentation>
        </enum>		
    </type>
    <type id="type_0154" name="eBackupPower_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Emmergency power supply</brief>
        </documentation>
        <enum name="eMODULE_BCK_ALIM_NONE" >
            <documentation>
                <brief>Board doesn't have any back up power supply to monitor</brief>
                <remarks>This value is needed to compute Monitor Thresholds </remarks>
            </documentation>
        </enum>
        <enum name="eMODULE_BCK_ALIM_BAT_1_2AH" >
            <documentation>
                <brief>Board is powered by a 1.2Ah battery</brief>
                <remarks>This value is needed to compute Monitor Thresholds </remarks>
            </documentation>
        </enum>
        <enum name="eMODULE_BCK_ALIM_BAT_2_1V" >
            <documentation>
                <brief>Board is powered by a 2.1Ah battery</brief>
                <remarks>This value is needed to compute Monitor Thresholds </remarks>
            </documentation>
        </enum>
		<enum name="eMODULE_BCK_ALIM_PSE_24V" >
            <documentation>
                <brief>Board is powered by 24V PSE</brief>
                <remarks>This value is needed to compute Monitor Thresholds </remarks>
            </documentation>
        </enum>
        <enum name="eMODULE_BCK_ALIM_PSE_48V_AND_1_2AH_BAT" >
            <documentation>
                <brief>Board is powered by 1.2Ah battery. 48V PSE used for some outputs</brief>
                <remarks>This value is needed to compute Monitor Thresholds </remarks>
            </documentation>
        </enum>
		<enum name="eMODULE_BCK_ALIM_PSE_48V_AND_2_1AH_BAT" >
            <documentation>
                <brief>Board is powered by 2.1Ah battery. 48V PSE used for some outputs</brief>
                <remarks>This value is needed to compute Monitor Thresholds </remarks>
            </documentation>
        </enum>
    </type>
    <type id="type_0155" name="eBackup_State_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Alarm backup state</brief>
        </documentation>
        <enum name="eBACKUP_QUIESCENT" >
            <documentation>
                <brief>Backup link is good</brief>
             </documentation>
        </enum>
        <enum name="eBACKUP_FAULT" >
            <documentation>
                <brief>Backup link in fault</brief>
            </documentation>
        </enum>
        <enum name="eBACKUP_ALARM" >
            <documentation>
                <brief>An Alarm is transmited on the the backup link</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0156" name="eCAN_State_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>CAN communication state. Fault list need to be completed</brief>
        </documentation>
        <enum name="eCAN_QUIESCENT" >
            <documentation>
                <brief>CAN link is good</brief>
            </documentation>
        </enum>
        <enum name="eCAN_FAULT" >
            <documentation>
                <brief>CAN link in fault</brief>
            </documentation>
        </enum>
    </type>
    <type id="type_0157" name="ePSE_State_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>Power Supply Equipement state</brief>
        </documentation>
        <bfield name="Sector_fault" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: Theire is not power connected to the PSE</brief>
            </documentation>
        </bfield>
        <bfield name="Battery fault" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: Battery are disconneted or to low voltage</brief>
            </documentation>
        </bfield>
        <bfield name="Chanel 1 fault" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: chanel 1 in fault</brief>
            </documentation>
        </bfield>
        <bfield name="Chanel 2 fault" size="1" type="type_0007">
            <documentation>
                <brief>bit is set: chanel 1 in fault</brief>
            </documentation>
        </bfield>
    </type>
	<type id="type_0158" name="eRelay_emergency_position_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Relay emergency position</brief>
        </documentation>
        <enum name="eREP_UNDEF" >
            <documentation>
                <brief>Field is not defined</brief>
             </documentation>
        </enum>
        <enum name="eREP_NO" >
            <documentation>
                <brief>Normaly open position</brief>
            </documentation>
        </enum>
        <enum name="eREP_NC" >
            <documentation>
                <brief>Normaly close position</brief>
            </documentation>
        </enum>
		<enum name="eREP_KEEP_LAST_POSITION" >
            <documentation>
                <brief>Nothing to do in case of emergency</brief>
            </documentation>
        </enum>
    </type>
	<type id="type_0159" name="tDDSTextDeviceConfig_t" cat="alias" size="14" padding="2" origin="type_0003" display="text" >
        <documentation>
            <brief>Device configuration text  (7 characters length, in UTF-16)</brief>
        </documentation>
    </type>
	<type id="type_0160" name="eDevice_function_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Device function</brief>
        </documentation>
        <enum name="eDEVICE_FUNCT_UNDEF" value="0">
            <documentation>
                <brief>Device functionality undefined</brief>
             </documentation>
        </enum>
        <enum name="eDEVICE_FUNCT_FD" value="1">
            <documentation>
                <brief>Fire detection device</brief>
            </documentation>
        </enum>
        <enum name="eDEVICE_FUNCT_EVAC" value="2">
            <documentation>
                <brief>Evacuation device</brief>
            </documentation>
        </enum>
		<enum name="eDEVICE_FUNCT_FS" value="3">
            <documentation>
                <brief>Fire safety device</brief>
            </documentation>
        </enum>
		<enum name="eDEVICE_FUNCT_ES" value="4">
            <documentation>
                <brief>Extinguishing device</brief>
            </documentation>
        </enum>
    </type>

    <type id="type_0170" name="tIDX_DeviceDef_t" cat="alias" origin="type_0110" size="4" padding="4" display="hex32">
        <documentation>
            <brief>IDX to the object tDDS_DNET_DeviceDefinition_t - tDDS_TNET_DeviceDefinition_t - tDDS_IOR_DeviceDefinition_t</brief>
        </documentation>
    </type>

    <type id="type_0171" name="tIDX_DeviceSSD_t" cat="alias" origin="type_0110" size="4" padding="4" display="hex32">
        <documentation>
            <brief>IDX to the object tDDS_DNET_DeviceSSD_t - tDDS_T_NET_DeviceSSD_t or null if not applicable</brief>
        </documentation>
    </type>

    <type id="type_0172" name="tRIDX_DynDevObject_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>Reduced PAS IDX which point to tOD_RAW_DeviceState_t, tOD_DeviceState_t</brief>
        </documentation>
    </type>

    <type id="type_0173" name="tRIDX_DeviceIn_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>Reduced IDX to the object tDDS_DeviceInput_t</brief>
        </documentation>
    </type>

    <type id="type_0175" name="tRIDX_Item_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>Can be a reduced IDX of  tOD_DeviceState_t, tOD_SafetyFunctionState_t or the ID of the equipement over the network (with equipment type in), depends on the value of eReportType subindex.</brief>
        </documentation>
    </type>

    <type id="type_0217" name="tRIDX_ItemsList_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>RIDX to the tDDS_ItemsList_t object</brief>
        </documentation>
    </type>

    <type id="type_0260" name="eReportType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>On a given equipment, which elements has to be reported ?</brief>
        </documentation>
        <enum name="eREPORT_NONE" >
            <documentation>
                <brief>No report has to be done</brief>
            </documentation>
        </enum>
        <enum name="eREPORT_LIST" >
            <documentation>
                <brief>Has to report list of device and list of function. Warning ! Device list is splitted into 2 lists of 128 elements.</brief>
            </documentation>
        </enum>    
        <enum name="eREPORT_ALL_EQUIPMENT" >
            <documentation>
                <brief>Has to report all device and function of the given equipment</brief>
            </documentation>
        </enum>
    </type>

    <type id="type_0174" name="tRIDX_DeviceOut_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>Reduced IDX to the object tDDS_DeviceOutput_t</brief>
        </documentation>
    </type>

    <type id="type_0176" name="tRIDX_DeviceInfo_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>RIDX to the object tDDS_DeviceInfo_t</brief>
        </documentation>
    </type>

    <type id="type_0177" name="tRIDX_FilterSet_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>RIDX to the object tDDS_IOFilterSet_t</brief>
        </documentation>
    </type>

    <type id="type_0178" name="tRIDX_ThresholdSet_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>RIDX to the object tDDS_IOThresholdSet_t</brief>
        </documentation>
    </type>

    <type id="type_0179" name="tRIDX_DynZone_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>RIDX to the object tOD_ZoneState_t</brief>
        </documentation>
    </type>

    <type id="type_0180" name="tRIDX_Week_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>RIDX to the object tDDS_TimeSlot_WeekDef_t</brief>
        </documentation>
    </type>

    <type id="type_0181" name="tRIDX_DynGroup_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>RIDX to the object tOD_GroupState_t</brief>
        </documentation>
    </type>

    <type id="type_0182" name="tRIDX_Group_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>RIDX to the object tDDS_Group_t</brief>
        </documentation>
    </type>

    <type id="type_0183" name="tRIDX_DynTrig_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>RIDX to the object tOD_DeviceState_t, tOD_GroupState_t, tOD_ZoneState_t, tOD_MGG_State_t </brief>
        </documentation>
    </type>

    <type id="type_0184" name="tRIDX_DynFunction_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>RIDX to the object tOD_SafetyFunctionState_t or tOD_ZoneState_t.</brief>
        </documentation>
    </type>

    <type id="type_0185" name="eGroupManualMode_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Define which type of manual mode is in used at this moment</brief>
        </documentation>
        <enum name="eGRP_MANUAL_OFF" >
            <documentation>
                <brief>No manual mode is enabled</brief>
            </documentation>
        </enum>
        <enum name="eGRP_MANUAL_ON" >
            <documentation>
                <brief>Manual mode is enabled</brief>
            </documentation>
        </enum>
    </type>

    <type id="type_0187" name="eVRMode_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Define if we are in Veille Restreinte, or not. And if it's possible to be (UGA)</brief>
        </documentation>
        <enum name="eVR_MODE_NOT_APPLICABLE" >
            <documentation>
                <brief>No veille restreinte possible (Not an UGA)</brief>
            </documentation>
        </enum>
        <enum name="eVR_MODE_OFF" >
            <documentation>
                <brief>No veille restreinte</brief>
            </documentation>
        </enum>
        <enum name="eVR_MODE_ON" >
            <documentation>
                <brief>"Veille restreinte" mode is enabled</brief>
            </documentation>
        </enum>
    </type>

	<type id="type_0186" name="eFaultMgt_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Define if faults are latch or selfreset on the equipment</brief>
        </documentation>
        <enum name="eEQ_FAULT_SELF_RESETED" >
            <documentation>
                <brief>Faults are self reseted</brief>
            </documentation>
        </enum>
        <enum name="eEQ_FAULT_LATCHED" >
            <documentation>
                <brief>In that mode, faults are latched. A reset by the user in needed to come back to the quiescent state.</brief>
            </documentation>
        </enum>
    </type>
	
    <type id="type_0188" name="tRIDX_DynIOSet_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>RIDX to the object tOD_RAW_DeviceIOSet_t or tOD_DeviceIOSet_t. A value of 0xFFFF is expected if no extra IOset has to be used.</brief>
        </documentation>
    </type>
	<type id="type_0189" name="tIDX_DeviceSensitivity_t" cat="alias" origin="type_0110" size="4" padding="4" display="hex32">
        <documentation>
            <brief>IDX to the object tDDS_TNET_DeviceSensitivity_t</brief>
        </documentation>
    </type>

    <type id="type_0190" name="eTriggeredDisable_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Define the way the triggered are disabled</brief>
        </documentation>
        <enum name="eTRIGGERED_ENABLED" >
            <documentation>
                <brief>triggered are not disabled</brief>
            </documentation>
        </enum>		
        <enum name="eTRIGGERED_DISABLE_CMD" >
            <documentation>
                <brief>triggered are disabled because there is a "disable triggered" command on group / facet</brief>
            </documentation>
        </enum>
        <enum name="eTRIGGERED_DISABLE_STATE" >
            <documentation>
                <brief>triggered are disable because all the triggered are disable</brief>
            </documentation>
        </enum>
        <enum name="eTRIGGERED_DISABLE_PARTIAL_STATE" >
            <documentation>
                <brief>a part of the triggered are disable (cmd on the triggered) </brief>
            </documentation>
        </enum>
    </type>	
	
    <type id="type_0191" name="eMIB_ID_t" cat="enum" size="1" padding="1">
	    <documentation>
            <brief>ID of MIB to get with SDO</brief>
            <author>MLK</author>
        </documentation>
			<enum name="eMIB_ID_SYSTEM">
            <documentation>
                <brief>get SYSTEM branch of MIb-2</brief>
            </documentation>
			</enum>
			<enum name="eMIB_ID_INTERFACE">
            <documentation>
                <brief>get SYSTEM branch of MIb-2</brief>
            </documentation>
			</enum>
			<enum name="eMIB_ID_LLDP">
            <documentation>
                <brief>get LLDP mib</brief>
            </documentation>
			</enum>
			<enum name="eMIB_PRIV_STACK_AGL">
            <documentation>
                <brief>stackAGL private MIB</brief>
            </documentation>
			</enum>
			<enum name="eMIB_PRIV_EQUIPMENT">
            <documentation>
                <brief>Equipment private MIB</brief>
            </documentation>
			</enum>
			<enum name="eMIB_PRIV_IRP">
            <documentation>
                <brief>IRP protocol private MIB</brief>
            </documentation>
			</enum>
			<enum name="eMIB_PRIV_BOARD_OF_EQ">
            <documentation>
                <brief>Boards Of Equipments private MIB</brief>
            </documentation>
			</enum>
			<enum name="eMIB_PRIV_MIRRORING">
            <documentation>
                <brief>mirroring function private MIB</brief>
            </documentation>
			</enum>
			<enum name="eMIB_PRIV_EVENTS_LOG">
            <documentation>
                <brief>Events LOG private MIB</brief>
            </documentation>
			</enum>
			<enum name="eMIB_PRIV_EVENTS_LOG_ITEM">
            <documentation>
                <brief>Events LOG private MIB</brief>
            </documentation>
			</enum>
			<enum name="eMIB_PRIV_BAND_WITH_LIMITATION">
            <documentation>
                <brief>band with limitation table private MIB</brief>
            </documentation>
			</enum>
			<enum name="eMIB_PRIV_BOARD_OF_EQ_ITEM">
            <documentation>
                <brief>Item of Boards Of Equipments private MIB</brief>
            </documentation>
			</enum>
			<enum name="eMIB_PRIV_CPL_INTERFACE">
            <documentation>
                <brief>Item of CPL Interface private MIB</brief>
            </documentation>
			</enum>						
			<enum name="eMIB_PRIV_FO_INTERFACE">
            <documentation>
                <brief>Item of FO Interface private MIB</brief>
            </documentation>
			</enum>		
		</type>	
    <type id="type_0192" name="tMIBText_t" cat="alias" size="50" padding="1" origin="type_0001" >
        <documentation>
            <brief>Type for MIB 2 text</brief>
            <author>MLK</author>
        </documentation>
    </type>	
    <type id="type_0193" name="tMIBSystem_t" cat="struct" size="336" padding="4">
        <documentation>
            <brief>MIb-2 system branch structure</brief>
            <author>MLK</author>
        </documentation>
			<field name="xSysDescr" type="type_0192" count="1">
                  <documentation>
                      <brief>A textual description of the entity</brief>
                  </documentation>
             </field>
			<field name="u32sysObjectID" type="type_0005" count="32">
                  <documentation>
                      <brief>The vendor's authoritative identification of the network
					  management subsystem contained in the entity</brief>
                  </documentation>
             </field>
			<field name="u32SysUpTime" type="type_0005" count="1">
                  <documentation>
                      <brief>time since startup ( in s)</brief>
                  </documentation>
             </field>
			<field name="xSysContact" type="type_0192" count="1">
                  <documentation>
                      <brief>The textual identification of the contact person for
							this managed node, together with information on how to contact this person</brief>
                  </documentation>
             </field>
			<field name="xSysName" type="type_0192" count="1">
                  <documentation>
                      <brief>An administratively-assigned name for this managed node.</brief>
                  </documentation>
             </field>
			<field name="xSysLocation" type="type_0192" count="1">
                  <documentation>
                      <brief>The physical location of this node</brief>
                  </documentation>
             </field>
			<field name="u8SysServices" type="type_0001" count="1">
                  <documentation>
                      <brief>A value which indicates the set of services that this entity may potentially offer.
				      </brief>
                  </documentation>
             </field>			 
			 
	</type>    

    <type id="type_0194" name="tMIBInterface_t" cat="struct" size="152" padding="4">
	   <documentation>
            <brief>MIb-2 interface branch structure</brief>
            <author>MLK</author>
        </documentation>
			  <field name="u8IfIndex" type="type_0001">
                  <documentation>
                      <brief>A unique value, greater than zero, for each interface</brief>
                  </documentation>
              </field>
              <field name="xIfDescr" type="type_0192" count="1">
                  <documentation>
                      <brief>A textual string containing information about the interface</brief>
                  </documentation>
              </field>
              <field name="u8IfType" type="type_0001">
                  <documentation>
                      <brief>The type of interface (physical/link protocol) see snmp_ifType</brief>
                  </documentation>
              </field>
              <field name="u16IfMtu" type="type_0003">
                  <documentation>
                      <brief>The size of the largest packet which can be sent/received on the interface,
					  specified in octets</brief>
                  </documentation>
              </field>
              <field name="u32IfSpeed" type="type_0005">
                  <documentation>
                      <brief>An estimate of the interface's current bandwidth in bits per second (units: bits per second)</brief>
                  </documentation>
              </field>
              <field name="xIfPhysAddress" type="type_0100">
                  <documentation>
                      <brief>The interface's address at its protocol sub-layer. For example, for an 802.x interface, 
					  this object normally contains a MAC address.</brief>
                  </documentation>
              </field>
			  <field name="u8IfAdminStatus" type="type_0001">
                  <documentation>
                      <brief> The desired state of the interface (Up, Down, Testing)
                          1 : up
                          2 : down
                          3 : testing
                          4 : unknown
                          5 : dormant
                          6 : notPresent
                          7 : lowerLayerDown
                      </brief>
                  </documentation>
              </field>
              <field name="u8IfOperStatus" type="type_0001">
                  <documentation>
                      <brief>The current operational state of the interface (Up, Down, Testing)
                          1 : up
                          2 : down
                          3 : testing
                          4 : unknown
                          5 : dormant
                          6 : notPresent
                          7 : lowerLayerDown
                      </brief>
                  </documentation>
              </field>
              <field name="u32IfLastChange" type="type_0005">
                  <documentation>
                      <brief>The value of sysUpTime at the time the interface entered its current operational state</brief>
                  </documentation>
              </field>
              <field name="u32IfInOctets" type="type_0005">			  
                  <documentation>
                      <brief>The total number of octets received on the interface, including framing characters.</brief>
                  </documentation>
              </field>
			  <field name="u32IfInUcastPkts" type="type_0005">
                  <documentation>
                      <brief>The number of subnetwork-unicast packets
                      delivered to a higher-layer protocol</brief>
                  </documentation>
			</field>
              <field name="u32IfInNUcastPkts" type="type_0005">
                  <documentation>
                      <brief>The number of non-unicast (i.e., subnetwork-
                      broadcast or subnetwork-multicast) packets
                      delivered to a higher-layer protocol.</brief>
                  </documentation>
              </field>
              <field name="u32IfInDiscards" type="type_0005">
                  <documentation>
                      <brief>The number of inbound packets which were chosen
                      to be discarded even though no errors had been
                      detected to prevent their being deliverable to a
                      higher-layer protocol</brief>
                  </documentation>
              </field>
              <field name="u32IfInErrors" type="type_0005">
                  <documentation>
                      <brief>The number of inbound packets that contained
                      errors preventing them from being deliverable to a
                      higher-layer protocol.</brief>
                  </documentation>
              </field>
		      <field name="u32IfInUnknownProtos" type="type_0005">
                  <documentation>
                      <brief>The number of packets received via the interface
                      which were discarded because of an unknown or
                      unsupported protocol.</brief>
                  </documentation>
              </field>
			  <field name="u32IfOutOctets" type="type_0005">
                  <documentation>
                      <brief>The total number of octets transmitted out of the
                      interface, including framing characters.
                      </brief>
                  </documentation>
              </field>
              <field name="u32IfOutUcastPkts" type="type_0005">
                  <documentation>
                      <brief>The total number of packets that higher-level
                      protocols requested be transmitted to a subnetwork-unicast address, 
					  including those that were discarded or not sent</brief>
                  </documentation>
              </field>
              <field name="u32IfOutNUcastPkts" type="type_0005">
                  <documentation>
                      <brief>The total number of packets that higher-level
                      protocols requested be transmitted to a non-unicast (i.e., a subnetwork-broadcast or
                      subnetwork-multicast) address, including those that were discarded or not sent.</brief>
                  </documentation>
              </field>  			  
			   <field name="u32IfOutDiscards" type="type_0005">
                  <documentation>
                      <brief>The number of outbound packets which were chosen
                      to be discarded even though no errors had been
                      detected to prevent their being transmitted.</brief>
                  </documentation>
              </field>
			   <field name="u32IfOutErrors " type="type_0005">
                  <documentation>
                      <brief>The number of outbound packets that could not be
                      transmitted because of errors.</brief>
                  </documentation>
              </field>
			   <field name="u32IfOutQLen" type="type_0005">
                  <documentation>
                      <brief>The length of the output packet queue (in
                      packets)</brief>
                  </documentation>
              </field>
			   <field name="xIfSpecific" type="type_0001" count="32">
                  <documentation>
                      <brief>A reference to MIB definitions specific to the
                      particular media being used to realize the
                      interface.</brief>
                  </documentation>
              </field>
   </type>

    <type id="type_0195" name="tMIBStackAGL_t" cat="struct" size="40" padding="4">
	    <documentation>
            <brief>private MIB StackAGL structure</brief>
            <author>MLK</author>
        </documentation>
		<field name="pu8AGLStackSwVersion" type="type_0001" count="2">
            <documentation>
                <brief>verison number of AGILiCOM stack</brief>
             </documentation>
        </field>
		<field name="u32AGLResetTimestamp" type="type_0005" >
            <documentation>
                <brief>Horodatage du reset des statistiques des ports des switches </brief>
             </documentation>
        </field> 
		<field name="u32AGLResetEventsLogTimestamp" type="type_0005">
            <documentation>
                <brief>Horodatage du reset du log</brief>
             </documentation>
        </field> 
		<field name="u32AGLDiscardsFramesNumber" type="type_0005">
            <documentation>
                <brief>discards frames number</brief>
             </documentation>
        </field> 
		<field name="u32AGLDiscardsFramesDelay" type="type_0005">
            <documentation>
                <brief>discards frames delay</brief>
             </documentation>
        </field> 	
		<field name="u32AGLTimeoutPortDIAG" type="type_0005">
            <documentation>
                <brief>timeout for the port DIAG (s)</brief>
             </documentation>
        </field> 
		<field name="u32AGLTimeoutPortIHM" type="type_0005">
            <documentation>
                <brief>timeout for the port IHM (s)</brief>
             </documentation>
        </field> 
		<field name="u32AGLTimeoutPortSLOT" type="type_0005">
            <documentation>
                <brief>timeout for the ports SLOT (s)</brief>
             </documentation>
        </field> 
		
		<field name="u32AGLArbitrationFrameSendingMaxNumber" type="type_0005">
		    <documentation>
                <brief>max number of arbitration frames sending retry</brief>
             </documentation>
        </field> 
		<field name="u32AGLArbitrationFrameReceptionDelay" type="type_0005">
		    <documentation>
                <brief>reception delay after arbitration frame sending</brief>
             </documentation>
        </field> 			
   </type>
   <type id="type_0196" name="tMIBEquipmentItem_t" cat="struct" size="28" padding="4">
		<documentation>
            <brief>private MIB Equipment structure</brief>
            <author>MLK</author>
        </documentation>
		<field name="xIPAddress" type="type_0099">
			<documentation>
                <brief>IP address of equipment</brief>
             </documentation>
        </field>
		<field name="xMaskAddress" type="type_0099">
			<documentation>
                <brief>mask address of equipment</brief>
             </documentation>
        </field>  
		<field name="xGatewayAddress" type="type_0099">
			<documentation>
                <brief>gateway address of equipment</brief>
             </documentation>
        </field> 
		<field name="xMACAddress" type="type_0100">
			<documentation>
                <brief>MAC address of equipment</brief>
             </documentation>
        </field>  
		<field name="xSerialNumber" type="type_0011">
			<documentation>
                <brief>serial number of equipment</brief>
             </documentation>
        </field>  		
   </type>   

   <type id="type_0197" name="tMIB_IRPprotocol_t" cat="struct" size="36" padding="2">
		<documentation>
            <brief>private MIB IRP protocol structure</brief>
            <author>MLK</author>
        </documentation>
		<field name="eRealRedundancyMode" type="type_0135" >
            <documentation>
                <brief>real redundancy mode</brief>
             </documentation>
        </field>
		<field name="eExpectedRedundancyMode" type="type_0135" >
            <documentation>
                <brief>expected redundancy mode</brief>
             </documentation>
        </field>			
		<field name="eRingState" type="type_0164" >
            <documentation>
                <brief>ring state</brief>
             </documentation>
        </field>
		<field name="ePortStatePort1" type="type_0167" >
            <documentation>
                <brief>port 1 state</brief>
             </documentation>
        </field>		
		<field name="u16IdRingPort1" type="type_0003" >
            <documentation>
                <brief>number of Port #1 on the ring</brief>
             </documentation>
        </field>
		<field name="u16idRingPort2" type="type_0003" >
            <documentation>
                <brief>number of Port #1 on the ring</brief>
             </documentation>
        </field>
		<field name="ePortStatePort2" type="type_0167" >
            <documentation>
                <brief>port 2 state</brief>
             </documentation>
        </field>		
		<field name="BRreactOnLinkChange" type="type_0007" >
            <documentation>
                <brief>TRUE if change on i-net port make change on equipment</brief>
             </documentation>
        </field>
		<field name="u16idVlan" type="type_0003" >
            <documentation>
                <brief>VLAN ID</brief>
             </documentation>
        </field>   
 		<field name="u16priorityManager" type="type_0003" >
            <documentation>
                <brief>priority Manager</brief>
             </documentation>
        </field> 
		<field name="u16TopologyChangeInterval" type="type_0003" >
            <documentation>
                <brief>Topology Change (Clear Address Table) request interval*</brief>
             </documentation>
        </field>
		<field name="u16TopologyChangeRepeatCount" type="type_0003" >
            <documentation>
                <brief>Topology Change (Clear Address Table) repeat count </brief>
             </documentation>
        </field>
		<field name="u16ShortTestInterval" type="type_0003" >
            <documentation>
                <brief>MRP_Test short interval</brief>
             </documentation>
        </field>
		<field name="u16DefaultTestInterval" type="type_0003" >
            <documentation>
                <brief>MRP_Test default interval</brief>
             </documentation>
        </field>
		<field name="u16TestMonitoringCount" type="type_0003" >
            <documentation>
                <brief>MRP_Test monitoring count</brief>
             </documentation>
        </field>
		<field name="u16TestMonitoringExtendedCount" type="type_0003" >
            <documentation>
                <brief>MRP_Test extended monitoring count</brief>
             </documentation>
        </field>
		<field name="u16LinkDownInterval" type="type_0003" >
            <documentation>
                <brief>Link Down Timer interval</brief>
             </documentation>
        </field>
		<field name="u16LinkUpInterval" type="type_0003" >
            <documentation>
                <brief>Link Up Timer interval</brief>
             </documentation>
        </field>
		<field name="u16LinkChangeCount" type="type_0003" >
            <documentation>
                <brief>Link Change (Up or Down) count</brief>
             </documentation>
        </field>
		<field name="bBlockStateSupported" type="type_0007" >
            <documentation>
                <brief>equipment supported blocked state</brief>
             </documentation>
        </field>
		<field name="bNonBlockingSupported" type="type_0007" >
            <documentation>
                <brief>equipment supported unblocked state</brief>
             </documentation>
        </field>
		<field name="BCheckMediaRedundancy" type="type_0007" >
            <documentation>
                <brief>TRUE is redundancy activate</brief>
             </documentation>
        </field>
	</type>  
  
   <type id="type_0198" name="tMIBBoardOfEquipmentItem_t" cat="struct" size="32" padding="4">
		<documentation>
            <brief>private MIB Boards Of Equipment structure of item</brief>
            <author>MLK</author>
        </documentation>	
		<field name="u8BoardIndex" type="type_0001" >
            <documentation>
                <brief>board index</brief>
             </documentation>
        </field>
		<field name="u8BoardFDP" type="type_0001" >
            <documentation>
                <brief>board FDP</brief>
             </documentation>
        </field>	
		<field name="u8BoardSlot" type="type_0001" >
            <documentation>
                <brief>board slot</brief>
             </documentation>
        </field>	
		<field name="u8BoardSubslot" type="type_0001" >
            <documentation>
                <brief>board subslot</brief>
             </documentation>
        </field>			
		<field name="xBoardIPAddress" type="type_0099" >
            <documentation>
                <brief>board IP address</brief>
             </documentation>
        </field>	
		<field name="xBoardMaskAddress" type="type_0099" >
            <documentation>
                <brief>board mask address</brief>
             </documentation>
        </field>	
		<field name="xBoardGatewayAddress" type="type_0099" >
            <documentation>
                <brief>board gateway address</brief>
             </documentation>
        </field>	
		<field name="xBoardMACAddress" type="type_0100" >
            <documentation>
                <brief>board MAC addres</brief>
             </documentation>
        </field>	
		<field name="xBoardSerialNumber" type="type_0011" >
            <documentation>
                <brief>board serial number</brief>
             </documentation>
        </field>	
		<field name="eBoardType" type="type_0009" >
            <documentation>
                <brief>board type</brief>
             </documentation>
        </field>		
  	</type>
	<type id="type_0201" name="tMIBBoardOfEquipment_t" cat="struct" size="001" padding="1">
		<documentation>
            <brief>private MIB Board oF Equipment structure</brief>
            <author>MLK</author>
        </documentation>
		<field name="u8BoardNumber" type="type_0001" >
            <documentation>
                <brief>number of boards present in equipement</brief>
             </documentation>
        </field>	
  </type>	
   <type id="type_0199" name="tMIBEventLog_t" cat="struct" size="6" padding="2">
		<documentation>
            <brief>private MIB Event Log structure</brief>
            <author>MLK</author>
        </documentation>	
		<field name="u16MaxNumberEvents" type="type_0003" >
            <documentation>
                <brief>activation of eventsLog function</brief>
             </documentation>
        </field>
		<field name="u16CurrentNumberEvents" type="type_0003" >
            <documentation>
                <brief>activation of eventsLog function</brief>
             </documentation>
        </field>
		<field name="bActivation" type="type_0007" >
            <documentation>
                <brief>activation of eventsLog function</brief>
             </documentation>
        </field>		
	</type> 
   <type id="type_0200" name="tMIBEventLogItem_t" cat="struct" size="12" padding="4">
		<documentation>
            <brief>structure of an event</brief>
            <author>MLK</author>
        </documentation>
		<field name="u16eventIndex" type="type_0003" >
            <documentation>
                <brief>Event index</brief>
             </documentation>
        </field>
		<field name="u8eventId" type="type_0001" >
            <documentation>
                <brief>Event ID</brief>
             </documentation>
        </field>
		<field name="u8eventState" type="type_0001" >
            <documentation>
                <brief>0 : event read, 1 :FAL </brief>
             </documentation>
        </field>
		<field name="u32eventData" type="type_0005" >
            <documentation>
                <brief>data link to the event</brief>
             </documentation>
        </field>
		<field name="u32eventTimestamp" type="type_0005" >
            <documentation>
                <brief>timestamp of the event</brief>
             </documentation>
        </field>		
	</type> 
   <type id="type_0202" name="tMIBBandwithLimitationItem_t" cat="struct" size="64" padding="4">
		<documentation>
            <brief>private MIB bandwith Limitation structure of item</brief>
            <author>MLK</author>
        </documentation>		
		<field name="xBandwithLimitationPortDescr" type="type_0192" >
            <documentation>
                <brief>Port description</brief>
             </documentation>
        </field>	
		<field name="u32BandwithLimitationEgress" type="type_0005" >
            <documentation>
                <brief> bandwith limitation egress</brief>
             </documentation>
        </field>			
		<field name="u32BandwithLimitationBroadcastIngress" type="type_0005" >
            <documentation>
                <brief>bandwith limitation broadcast ingress</brief>
             </documentation>
			 
        </field>	
		<field name="u32BandwithLimitationMulticastIngress" type="type_0005" >
            <documentation>
                <brief>bandwith limitation multicast ingress</brief>
             </documentation>
        </field>	
		
	</type> 			

	<type id="type_0210" name="tMIBmirroringFunctionItem_t" cat="struct" size="52" padding="1">
		<documentation>
            <brief>private MIB Mirror Function structure of item</brief>
            <author>MLK</author>
        </documentation>		
		<field name="u8PortSrcIndex" type="type_0001" >
            <documentation>
                <brief>Port index</brief>
             </documentation>
        </field>	
		<field name="xPortSrcDescr" type="type_0192" >
            <documentation>
                <brief>Port index</brief>
             </documentation>
        </field>	
		<field name="bPortSrcActivation" type="type_0007">
            <documentation>
                <brief>activation of mirroring function</brief>
             </documentation>
        </field>			
    </type> 
	<type id="type_0211" name="tMIBmirroringFunction_t" cat="struct" size="367" padding="1">	
		<documentation>
            <brief>private MIB Mirror Function structure</brief>
            <author>MLK</author>
        </documentation>		
		<field name="u8PortFDPDest" type="type_0001" >
            <documentation>
                <brief>fdp number of port's destination </brief>
             </documentation>
        </field>
		<field name="u8PortSlotDest" type="type_0001"  >
            <documentation>
                <brief>slot number of port's destination</brief>
             </documentation>
        </field>		
		<field name="u8PortSubslotDest" type="type_0001"  >
            <documentation>
                <brief>subslot number of port's destination</brief>
             </documentation>
        </field>
		<field name="xportSrcTable" type="type_0210" count="7" >
            <documentation>
                <brief>mirroring of the ports</brief>
             </documentation>
        </field>		
    </type> 
	<type id="type_0212" name="tMIBLLDPItem_t" cat="struct" size="24" padding="4">
		<documentation>
            <brief> MIB LLDP item structure</brief>
            <author>MLK</author>
        </documentation>
		<field name="u32lldpRemLocalPortNum" type="type_0005">
            <documentation>
                <brief>The index value used to identify the port component</brief>
             </documentation>
        </field>
		<field name="xlldpRemChassisId" type="type_0011" >
            <documentation>
                <brief>serial number - The string value used to identify the chassis component
						associated with the remote system.</brief>
             </documentation>
        </field>
		<field name="xlldpRemPortId" type="type_0001" count="8" >
            <documentation>
                <brief>The string value used to identify the port component associated with the remote system.</brief>
             </documentation>
        </field>		
	</type>			
	<type id="type_0213" name="tMIBLLDP_t" cat="struct" size="48" padding="4">
		<documentation>
            <brief> MIB LLDP structure</brief>
            <author>MLK</author>
        </documentation>
		<field name="xlldpPortConfigTable" type="type_0212" count="2" >
            <documentation>
                <brief>LLDP frame transmission on the individual ports</brief>
             </documentation>
        </field>		
	</type>	
	
	<type id="type_0218" name="tTREGSectorFD_t" cat="bitfield" size="1" padding="1">
		<documentation>
            <brief>TR-EG sector Fire Detection state</brief>
            <author>MLK</author>
        </documentation>
        <bfield name="Alarm FD" size="1" type="type_0001">
            <documentation>
                <brief>alarm status in sector FD of TR-EG</brief>
            </documentation>
        </bfield>
		<bfield name="Fault FD" size="1" type="type_0001">
            <documentation>
                <brief>fault status in sector FD of TR-EG</brief>
            </documentation>
        </bfield>
		<bfield name="Disable FD" size="1" type="type_0001">
            <documentation>
                <brief>disable status in sector FD of TR-EG</brief>
            </documentation>
        </bfield>	
		<bfield name="Test FD" size="1" type="type_0001">
            <documentation>
                <brief>test status in sector FD of TR-EG</brief>
            </documentation>
        </bfield>			
	</type>			
	<type id="type_0223" name="tTREGSectorExtinguish_t" cat="bitfield" size="1" padding="1">
		<documentation>
            <brief>TR-EG sector Extinguish state</brief>
            <author>MLK</author>
        </documentation>
        <bfield name="Alarm EXT" size="1" type="type_0001">
            <documentation>
                <brief>alarm status in sector Extinguish of TR-EG</brief>
            </documentation>
        </bfield>
		<bfield name="Emission EXT" size="1" type="type_0001">
            <documentation>
                <brief>test status in sector Extinguish of TR-EG</brief>
            </documentation>
        </bfield>
		<bfield name="Fault EXT" size="1" type="type_0001">
            <documentation>
                <brief>fault status in sector Extinguish of TR-EG</brief>
            </documentation>
        </bfield>
		<bfield name="EmergencyStop EXT" size="1" type="type_0001">
            <documentation>
                <brief>emergency stop status in sector Extinguish of TR-EG</brief>
            </documentation>
        </bfield>	
		<bfield name="Disable EXT" size="1" type="type_0001">
            <documentation>
                <brief>disable status in sector Extinguish of TR-EG</brief>
            </documentation>
        </bfield>	

	
	</type>		
	<type id="type_0224" name="tTREGSectorEvacuation_t" cat="bitfield" size="1" padding="1">
		<documentation>
            <brief>TR-EG sector Evacuation state</brief>
            <author>MLK</author>
        </documentation>
        <bfield name="Alarm EVAC" size="1" type="type_0001">
            <documentation>
                <brief>alarm status in sector EVAC of TR-EG</brief>
            </documentation>
        </bfield>
		<bfield name="Evacuation EVAC" size="1" type="type_0001">
            <documentation>
                <brief>Evacuation status in sector EVAC of TR-EG</brief>
            </documentation>
        </bfield>
		<bfield name="VeilleRestreinte EVAC" size="1" type="type_0001">
            <documentation>
                <brief>manual mode (veille restreinte) status in sector EVAC of TR-EG</brief>
            </documentation>
        </bfield>	
		<bfield name="LinkFault EVAC" size="1" type="type_0001">
            <documentation>
                <brief>Link fault status in sector EVAC of TR-EG</brief>
            </documentation>
        </bfield>			
	</type>		
	<type id="type_0225" name="tTREGSectorFS_t" cat="bitfield" size="1" padding="1">
		<documentation>
            <brief>TR-EG sector Fire safety state</brief>
            <author>MLK</author>
        </documentation>
        <bfield name="Security FS" size="1" type="type_0001">
            <documentation>
                <brief>security status in sector FS of TR-EG</brief>
            </documentation>
        </bfield>

		<bfield name="Security fault FS" size="1" type="type_0001">
            <documentation>
                <brief>security fault status in sector FS of TR-EG</brief>
            </documentation>
        </bfield>	
		<bfield name="Activated FS" size="1" type="type_0001">
            <documentation>
                <brief>activated status in sector FS of TR-EG</brief>
            </documentation>
        </bfield>
		<bfield name="Fault FS" size="1" type="type_0001">
            <documentation>
                <brief>fault status in sector FS of TR-EG</brief>
            </documentation>
        </bfield>		
		<bfield name="Standby fault FD" size="1" type="type_0001">
            <documentation>
                <brief>standby fault status in sector FS of TR-EG</brief>
            </documentation>
        </bfield>	
	</type>		
	
	<type id="type_0226" name="eTimeSlotMgt_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Define the way the triggered are disabled</brief>
        </documentation>
        <enum name="eTIMESLOT_MGT_UNUSED" >
            <documentation>
                <brief>Time slot management is not used</brief>
            </documentation>
        </enum>		
        <enum name="eTIMESLOT_MGT_ACTIVITY_PERIODE" >
            <documentation>
                <brief>The time slot functionality is used during the activity period</brief>
            </documentation>
        </enum>
        <enum name="eTIMESLOT_MGT_INACTIVITY_PERIODE" >
            <documentation>
                <brief>The time slot functionality is used during the inactivity period</brief>
            </documentation>
        </enum>
    </type>	
	
	 <type id="type_0227" name="eTR_Fault_t" size="1" padding="1" cat="enum" >
        <documentation>
            <brief>Fault of TR-EG / TR-HG by priority order (except no fault)</brief>
        </documentation>
        <enum name="eTR_FAULT_NONE" >
            <documentation>
                <brief>TR has no fault</brief>
            </documentation>
        </enum>
        <enum name="eTR_FAULT_MISSING" >
            <documentation>
                <brief>TR is missing</brief>
            </documentation>
        </enum>
        <enum name="eTR_FAULT_FIRMWARE" >
            <documentation>
                <brief>the TR firmware has an integrity fault</brief>
            </documentation>
        </enum>
        <enum name="eTR_FAULT_BATTERY_FAULT" >
            <documentation>
                <brief>TR battery is missing or has to be replaced</brief>
            </documentation>
        </enum>
        <enum name="eTR_FAULT_PROT_VERSION" >
            <documentation>
                <brief>Wrong TRBus protocol version used by a TRE</brief>
            </documentation>
        </enum>
        <enum name="eTR_FAULT_SIGNATURE" >
            <documentation>
                <brief>TR signature is wrong</brief>
            </documentation>
        </enum>
        <enum name="eTR_FAULT_TRE_TYPE_MISMATCH" >
            <documentation>
                <brief>TR type not expected as specified in SSD</brief>
            </documentation>
        </enum>
        <enum name="eTR_FAULT_CONFIG" >
            <documentation>
                <brief>TR configuration is not the one specified in SSD</brief>
            </documentation>
        </enum>
        <enum name="eTR_FAULT_SECTOR_REFRESH_TO" >
            <documentation>
                <brief>TR Sector refresh is in timeout</brief>
            </documentation>
        </enum>
	</type>		
	
	<type id="type_0228" name="eIO_EOL_type_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Define the End Of Line connected to the I/o</brief>
        </documentation>
        <enum name="eEOL_NA" >
            <documentation>
                <brief>The I/O doesn't have an EOL</brief>
            </documentation>
        </enum>		
        <enum name="eEOF_2_2K" >
            <documentation>
                <brief>EOL is a 2.2kOhm resistor</brief>
            </documentation>
        </enum>
        <enum name="eEOF_20K" >
            <documentation>
                <brief>EOL is a 20kOhm resistor</brief>
            </documentation>
        </enum>
		<enum name="eEOF_DIODE" >
            <documentation>
                <brief>EOL is a diode</brief>
            </documentation>
        </enum>
		<enum name="eEOF_56_DIODE" >
            <documentation>
                <brief>EOL is a 56 ohm resistor + a diode</brief>
            </documentation>
        </enum>
    </type>
	
	<type id="type_0229" name="tBattery_Config_t" cat="struct" size="10" padding="2">
		<documentation>
            <brief>SSD for internal power supply management</brief>
        </documentation>
		<field name="u16BatCapcity" type="type_0003" >
            <documentation>
                <brief>in  Ah * 10. Battery capacity value can be set between 12 and 500 (1.2Ah and 50Ah)</brief>
            </documentation>
        </field>
		<field name="u16MinBatUGood" type="type_0003" >
            <documentation>
                <brief>in mV, threshold for battery voltage-error (upper hysteresis)</brief>
            </documentation>
        </field>
		<field name="u16MinBatUError" type="type_0003">
            <documentation>
                <brief>in mV, threshold for battery voltage-error (lower hysteresis)</brief>
            </documentation>
        </field>
		<field name="u16MinBatUCharge" type="type_0003">
            <documentation>
                <brief>in mV, minimal battery voltage for charging (if voltage is lower, no charging is done)</brief>
            </documentation>
        </field>
		<field name="xBatLowFilter" type="type_0121" count="1">
            <documentation>
                <brief>in min: Time before battery low is set. Parameter value can be set between 0 and 20 (0 minute and 20 minutes).</brief>
            </documentation>
        </field>
		<field name="xChargerLossFilter" type="type_0121" count="1">
            <documentation>
                <brief>in min: Time before charger lost is set. Parameter value can be set between 1 and 60 (1 minute and 1 hour)</brief>
            </documentation>
        </field>		
	</type>	
	
	<type id="type_0230" name="tEN54_4PSE_Config_t" cat="struct" size="32" padding="2">
		<documentation>
            <brief>SSD for internal EN54-4 power supply management</brief>
        </documentation>
		<field name="u16MinMainsUError" type="type_0003">
            <documentation>
                <brief>in mV, threshold for mains voltage-error</brief>
            </documentation>
        </field>
		<field name="u16BatCapcity" type="type_0003" >
            <documentation>
                <brief>in  Ah / 10. Battery capacity value can be set between 12 and 500 (1.2Ah and 50Ah)</brief>
            </documentation>
        </field>
		<field name="u16MinBatUGood" type="type_0003" >
            <documentation>
                <brief>in mV, threshold for battery voltage-error (upper hysteresis)</brief>
            </documentation>
        </field>
		<field name="u16MinBatUError" type="type_0003">
            <documentation>
                <brief>in mV, threshold for battery voltage-error (lower hysteresis)</brief>
            </documentation>
        </field>
		<field name="u16MinBatUDeepDischarge" type="type_0003">
            <documentation>
                <brief>in mV, threshold for accu deep discharge (below this voltage, accus will be disconnected)</brief>
            </documentation>
        </field>
		<field name="u16MinBatUCharge" type="type_0003">
            <documentation>
                <brief>in mV, minimal battery voltage for charging (if voltage is lower, no charging is done)</brief>
            </documentation>
        </field>
		<field name="u16MinBatURiTest" type="type_0003">
            <documentation>
                <brief>in mV, minimal battery voltage for resistance-test (if voltage is lower, no Ri-test is done)</brief>
            </documentation>
        </field>
		<field name="u16MaxBatRi" type="type_0003">
            <documentation>
                <brief>in mOhm, Battery Resistance fault in mOhm. Parameter value can be set between 50 and 1000 (0.05ohm and 1ohm)</brief>
            </documentation>
        </field>
		<field name="u16MaxICharge" type="type_0003">
            <documentation>
                <brief>in mA, maximum charge current</brief>
            </documentation>
        </field>
		<field name="u16MinICharge" type="type_0003">
            <documentation>
                <brief>in mA, miminum charge current at minAccuUChargeDiff</brief>
            </documentation>
        </field>
		<field name="u16MinBatUChargeDiff" type="type_0003">
            <documentation>
                <brief>in mV,minimum difference between target charging voltage and accu-voltage, where a minimum charge current has to flow</brief>
            </documentation>
        </field>
		<field name="u16AbsMinBatUChargeDiff" type="type_0003">
            <documentation>
                <brief>in mV, absolute minimum difference between accu voltages with and without charging</brief>
            </documentation>
        </field>
		<field name="s16MinTemp" type="type_0004">
            <documentation>
                <brief>in 1/10 degree C, minimum board temperature</brief>
            </documentation>
        </field>
		<field name="s16MaxTemp" type="type_0004">
            <documentation>
                <brief>in 1/10 degree C, maximum board temperature</brief>
            </documentation>
        </field>
		<field name="xMainsErrorFaultFilter" type="type_0121" count="1">
            <documentation>
                <brief>in min: Time before Main power fault is set. Parameter value can be set between 0 and 20 (0 minute and 20 minutes).</brief>
            </documentation>
        </field>
		<field name="xBatLowFilter" type="type_0121" count="1">
            <documentation>
                <brief>in min: Time before battery low is set. Parameter value can be set between 0 and 20 (0 minute and 20 minutes).</brief>
            </documentation>
        </field>
		<field name="xChargerLossFilter" type="type_0121" count="1">
            <documentation>
                <brief>in min: Time before charger lost is set. Parameter value can be set between 1 and 60 (1 minute and 1 hour)</brief>
            </documentation>
        </field>
		<field name="u8BatResisErrorFilter" type="type_0001" count="1">
            <documentation>
                <brief>in min *16: Filter for resistance fault. Parameter value can be set between 1 and 60 (16 minutes and 16 hours)</brief>
            </documentation>
        </field>
	</type>	

   <type id="type_0231" name="eEEprom_ID_t" cat="enum" size="1" padding="1">
	    <documentation>
            <brief>ID of EEprom to read with SDO</brief>
            <author>MLK</author>
        </documentation>
			<enum name="eEEPROM_ID_INTERNAL">
            <documentation>
                <brief>get Internal EEprom</brief>
            </documentation>
			</enum>
			<enum name="eEEPROM_ID_LIFECYCLE">
            <documentation>
                <brief>get External EEProm (Lifecyle EEprom)</brief>
            </documentation>
			</enum>
			<enum name="eEEPROM_ID_SFP_1">
            <documentation>
                <brief>get EEprom of SFP #1 Module</brief>
            </documentation>
			</enum>
			<enum name="eEEPROM_ID_SFP_2">
            <documentation>
                <brief>get EEprom of SFP #1 Module</brief>
            </documentation>
			</enum>
			<enum name="eEEPROM_ID_MEAES_1">
            <documentation>
                <brief>get MEAES #1 lifecyle eeprom</brief>
            </documentation>
			</enum>	
			<enum name="eEEPROM_ID_MEAES_2">
            <documentation>
                <brief>get MEAES #2 lifecyle eeprom</brief>
            </documentation>
			</enum>
	</type>	
	
    <type id="type_0232" name="eOutput_TestMode_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Output test mode </brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eOUTPUT_TEST_MODE_NONE" >
            <documentation>
                <brief>No output test mode</brief>
            </documentation>
        </enum>
        <enum name="eOUTPUT_TEST_MODE_DE" >
            <documentation>
                <brief>Output DE can be managed with DE test mode.</brief>
				<remarks>Output has to be activated 2s each 9s</remarks>
            </documentation>
        </enum>
    </type>
	
	 <type id="type_0233" name="eM1NR_Type_t" cat="enum" size="1" padding="1">
	    <documentation>
            <brief>Type of M1NR up to pin-out</brief>
            <author>MLK</author>
        </documentation>
		<enum name="eM1NR_ETH_ETH_CONFIG">
            <documentation>
                <brief>Configuration ETH1_ETH2</brief>
            </documentation>
        </enum>		
		<enum name="eM1NR_CPL_ETH_CONFIG">
            <documentation>
                <brief>Configuration CPL1_ETH2</brief>
            </documentation>
        </enum>	
		<enum name="eM1NR_FO_ETH_CONFIG">
            <documentation>
                <brief>Configuration FO1_ETH2 </brief>
            </documentation>
        </enum>	
		<enum name="eM1NR_CPL_CPL_CONFIG">
            <documentation>
                <brief>Configuration CPL1_CPL2</brief>
            </documentation>
        </enum>	
		<enum name="eM1NR_CPl_FO_CONFIG">
            <documentation>
                <brief>Configuration CPL1_FO2</brief>
            </documentation>
        </enum>	
		<enum name="eM1NR_FO_FO_CONFIG">
            <documentation>
                <brief>Configuration FO1_FO2</brief>
            </documentation>
        </enum>	
		<enum name="eM1NR_FULL_CONFIG">
            <documentation>
                <brief>Configuration FULL</brief>
            </documentation>
        </enum>	
		<enum name="eM1NR_INVALID_CONFIG">
            <documentation>
                <brief>Configuration UNDEFINED</brief>
            </documentation>
        </enum>			
    </type>
	
	<type id="type_0234" name="tM1NR_CPLInfo_t"  cat="struct" size="44" padding="2">
              <documentation>
                  <brief> Data linked to CPL line </brief>
				  <author>MLK</author>
              </documentation>
              <field name="u8Port" type="type_0001" count="1">
                  <documentation>
                      <brief> Port I-NET [Port 1 our 2]</brief>
                  </documentation>
              </field>
              <field  name="xMacAddress" type="type_0100" count="1">
                  <documentation>
                      <brief>MAC Address of the module</brief>
                  </documentation>
              </field>
              <field  name="bLinkStatePortInet" type="type_0001" count="1">
                  <documentation>
                      <brief>state of link on port I-NET (Up [1]/Down [0]) </brief>
                  </documentation>
              </field>
              <field  name="u16BitrateRx" type="type_0003" count="1">
                  <documentation>
                      <brief>bitrate on CPL in real time, Unit = Mbit/s Range : 0 to 300 Mbit/s
                      </brief>
                  </documentation>
              </field>
              <field  name="u16BitrateTx" type="type_0003" count="1">
                  <documentation>
                      <brief>bitrate on CPL in real time, Unit = Mbit/s Range : 0 to 300 Mbit/s
                      </brief>
                  </documentation>
              </field>			  
              <field  name="xCPLDomainName" type="type_0165" count="1">
                  <documentation>
                      <brief>Domain Name of CPL module</brief>
                  </documentation>
              </field>
     </type>
	<type id="type_0235" name="tM1NR_FOInfo_t"  cat="struct" size="26" padding="2">
              <documentation>
                  <brief> Data linked to fiber Optic line </brief>
				  <author>MLK</author>
              </documentation>
              <field name="u8Port" type="type_0001" count="1">
                  <documentation>
                      <brief> Port I-NET [Port 1 or 2]</brief>
                  </documentation>
              </field>
              <field name="bTxFault" type="type_0007" count="1">
                  <documentation>
                      <brief>transmission error detection</brief>
                  </documentation>
              </field>
              <field name="bExisting" type="type_0007" count="1">
                  <documentation>
                      <brief> presence detection of SFP module</brief>
                  </documentation>
              </field>		  
              <field name="bLinkStatePortInet" type="type_0001" count="1">
                  <documentation>
                      <brief>state of link on port I-NET (Up [1]/Down [0]) </brief>
                  </documentation>
              </field>
              <field name="u16Bitrate" type="type_0003" count="1">
                  <documentation>
                      <brief>nominal bitrate, unit : MB/s </brief>
                  </documentation>
              </field>
              <field name="u16Length9" type="type_0003" count="1">
                  <documentation>
                      <brief>Length of supported single fiber link 9/125mm, unit : m</brief>
                  </documentation>
              </field>
              <field name="u16LengthOM2" type="type_0003" count="1">
                  <documentation>
                      <brief>Length of supported fiber link OM2 50um,unit : m</brief>
                  </documentation>
              </field>
              <field name="u16LengthOM1" type="type_0003" count="1">
                  <documentation>
                      <brief>Length of supported fiber link OM1 62.5um, unit : m</brief>
                  </documentation>
              </field>
              <field name="u16LengthOM3" type="type_0003" count="1">
                  <documentation>
                      <brief>Length of supported fiber link OM3 50um, unit : m</brief>
                  </documentation>
              </field>
              <field name="u16LengthOM4" type="type_0003" count="1">
                  <documentation>
                      <brief>Length of supported fiber link OM4 50um, unit : m</brief>
                  </documentation>
              </field>
              <field name="s8Temperature" type="type_0002" count="1">
                  <documentation>
                      <brief>temperature in real time  Unit = Celsius degree  Range : -128 C to +128 C </brief>
                  </documentation>
              </field>
              <field name="u16SupplyVoltage" type="type_0003" count="1">
                  <documentation>
                      <brief>Tension in real time  Unit = mV - Range : 0 V to 6,55 V</brief>
                  </documentation>
              </field>
              <field name="u8TxBiasCurrent" type="type_0001" count="1">
                  <documentation>
                      <brief>Emission Current in real time Unit = mA - Range : 0 to  131 mA</brief>
                  </documentation>
              </field>
              <field name="u16TxOpticalPower" type="type_0003" count="1">
                  <documentation>
                      <brief>emitted Optical power in real time Unit = micro W - Range : 0 to 6,5535 mW</brief>
                  </documentation>
              </field>
              <field name="u16RxReceivedPower" type="type_0003" count="1">
                  <documentation>
                      <brief>Received optical power in real time Unit = micro W - Range : 0 to 6,5535 mW</brief>
                  </documentation>
              </field>
          </type>  	 

    <type id="type_0236" name="eGroupTestMode_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>test mode applied to a group</brief>
            <author>MLK</author>
        </documentation>
        <enum name="eGROUP_TEST_MODE_NONE" >
            <documentation>
                <brief>group is not in test mode</brief>
            </documentation>
        </enum>
        <enum name="eGROUP_TEST_MODE_COMMAND">
            <documentation>
                <brief>group is in test mode because safety function is in test mode</brief>
            </documentation>
        </enum>
		<enum name="eGROUP_TEST_MODE_TRIGGERED">
            <documentation>
                <brief>group is commanded / actived in test mode by a group which is in test mode</brief>
            </documentation>
        </enum>
    </type>	

	<type id="type_0237" name="eLoopPowerSupply_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Defined the loop power supply voltage</brief>
        </documentation>
        <enum name="eLOOP_POWER_43V" >
            <documentation>
                <brief>Used for T-NET loops</brief>
            </documentation>
        </enum>
        <enum name="eLOOP_POWER_USYSTEM_PLUS_7V">
            <documentation>
                <brief>Used for Apollo loops</brief>
            </documentation>
        </enum>
    </type>	
	
	<type id="type_0238" name="tExtentionBoardPowerConfig_t" cat="struct" size="10" padding="2">
		<documentation>
            <brief>SSD for extention board power supply</brief>
        </documentation>
		<field name="eLoopPowerSupply" type="type_0237" >
            <documentation>
                <brief>Depends on Extention board type</brief>
            </documentation>
        </field>
		<field name="u16MinULoopError" type="type_0003" >
            <documentation>
                <brief>in mV, threshold for loop power rail voltage-error. This threshold depends on eLoopPowerSupply</brief>
            </documentation>
        </field>
		<field name="u16Max4_3UGood" type="type_0003">
            <documentation>
                <brief>in mV, threshold for 4.3V rail voltage-error</brief>
            </documentation>
        </field>
		<field name="u16Min4_3UError" type="type_0003">
            <documentation>
                <brief>in mV, threshold for 4.3V rail voltage-error</brief>
            </documentation>
        </field>
		<field name="u16MaxULoopGood" type="type_0003" >
            <documentation>
                <brief>in mV, threshold for loop power rail voltage-error. This threshold depends on eLoopPowerSupply</brief>
            </documentation>
        </field>
	</type>		
	
    <type id="type_0239" name="tRepeater_Panel_EG_Sector_Config_t" cat="bitfield" size="1" padding="1">
        <documentation>
            <brief>TR-EG sector configuration</brief>
            <author>MLK</author>
        </documentation>
        <bfield name="Fire Detection sector" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if Fire Detection sector is activated (TRUE) or NOT</brief>
            </documentation>
        </bfield>
		<bfield name="Extinguish sector" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if Extinguish sector is activated (TRUE) or NOT</brief>
            </documentation>
        </bfield>
		<bfield name="Evacuation sector" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if Evacuation sector is activated (TRUE) or NOT</brief>
            </documentation>
        </bfield>
		<bfield name="Fire Safety sector" size="1" type="type_0007">
            <documentation>
                <brief>Boolean which indicates if Fire Safety sector  sector is activated (TRUE) or NOT</brief>
            </documentation>
        </bfield>
	</type>	
	
    <type id="type_0040" name="tFacetUID_t" cat="struct" size="4" padding="2">
		<documentation>
            <brief>Structure which give the unique Facet position over the network</brief>
        </documentation>
		<field name="u16EInetID" type="type_0003" >
            <documentation>
                <brief>Where the facet is localized over the network (eInet ID)</brief>
                <examples>
                    <example>Equipment type : CMSI / ID = 6 / eInet ID = 0x0206</example>
                    <example>Equipment type : ECS / ID = 6 / eInet ID = 0x0106</example>
                </examples>
                <warning>This information MUST contains Equipement type AND Equipement number on this type</warning>
            </documentation>
        </field>
		<field name="u16FacetPosition" type="type_0003" >
            <documentation>
                <brief>RIDX of tDDS_A5_Facet_t object (not physical position !; physical position is given by tabular xFacetConfig index)</brief>
            </documentation>
        </field>
    </type>

    <type id="type_0056" name="tBoardPosition_t" cat="struct" size="4" padding="2">
		<documentation>
            <brief>Structure which give the unique board position over the network</brief>
        </documentation>
		<field name="u16EInetID" type="type_0003" >
            <documentation>
                <brief>On which equipment is the board localized over the network (eInet ID)</brief>
                <examples>
                    <example>Equipment type : CMSI / ID = 6 / eInet ID = 0x0206</example>
                    <example>Equipment type : ECS / ID = 6 / eInet ID = 0x0106</example>
                </examples>
                <warning>This information MUST contains Equipement type AND Equipement number on this type</warning>
            </documentation>
        </field>
		<field name="u8Slot" type="type_0001" >
            <documentation>
                <brief>Board slot</brief>
            </documentation>
        </field>
		<field name="u8SubSlot" type="type_0001" >
            <documentation>
                <brief>Board subslot (sub division of the slot, is fixed per board)</brief>
            </documentation>
        </field>
    </type>
	
	<type id="type_0240" name="eApolloDeviceType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Apollo device Discovery type</brief>
        </documentation>
        <enum name="eAPL_TYPE_XP95_SOUNDER" value="32">
            <documentation>
                <brief>Sounder: 55000-182, 55000-182, 55000-182</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_XP95A_CONVENTIONAL_SOUNDER" value="40">
            <documentation>
                <brief>Concentional sounders report module: 55000-825</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_XP95_IO" value="64">
            <documentation>
                <brief>IO module: 55000-847 55000-849</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_XP95A_MINI_SWITCH" value="72">
            <documentation>
                <brief>Mini Switch Monitor Module: 55000-760</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_XP95A_SWITCH" value="80">
            <documentation>
                <brief>Switch Monitor Module: 55000-765</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_XP95A_SWITCH_IO" value="88">
            <documentation>
                <brief>Switch Monitor IO Module: 55000-820</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_IONIC" value="96">
            <documentation>
                <brief>Ionisation Detector:	58000-550</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_DISCO_CO" value="105">
            <documentation>
                <brief>CO: Gaseous Fire Detector: 58000-300</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_DISCO_HEAT" value="113">
            <documentation>
                <brief>CO/Heat: Multisensor Detector: 58000-305</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_DISCO_CO_ENV" value="121">
            <documentation>
                <brief>CO: Environmental Gas Monitor</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_XP95_CONVENTIONAL_ZONE" value="128">
            <documentation>
                <brief>Zone Monitor Unit: 55000-845</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_XP95_SWITCH" value="136">
            <documentation>
                <brief>Switch Monitor: 55000-809, 55000-822, 55000-841</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_DISCO_ASD" value="152">
            <documentation>
                <brief>Aspirating Detectors ASD: 29650-081, 29650-082</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_OPTICAL" value="160">
            <documentation>
                <brief>Optical Detector: 55000-600, 58000-600</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_DISCO_MULTICRITERIAL" value="161">
            <documentation>
                <brief>Multi-criteria Optical</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_XP95_BEAM" value="168">
            <documentation>
                <brief>High Sensitivity Optical / Beam:	55000-268, 55000-273</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_XP95_FLAME" value="176">
            <documentation>
                <brief>Flame Detector: 55000-280</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_DISCO_MULTISENSOR" value="184">
            <documentation>
                <brief>Multisensor (Opt/Heat): 58000-700</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_XP95_MULTISENSOR" value="185">
            <documentation>
                <brief>Multisensor (Opt/Heat): 58000-885</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_HEAT" value="192">
            <documentation>
                <brief>Heat Detector: 55000-400</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_XP95_HIGH_TEMPERATURE_HEAT" value="200">
            <documentation>
                <brief>High Temperature Heat Detector: 55000-401</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_S90_MCP" value="224">
            <documentation>
                <brief>MCP and MCP Monitor</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_XP95A_MINI_PRIORITY_SWITCH" value="232">
            <documentation>
                <brief>Mini Priority Switch Monitor Module: 55000-830</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_XP95A_PRIORITY_SWITCH" value="240">
            <documentation>
                <brief>Priority Switch Monitor Module: 55000-806</brief>
            </documentation>
        </enum>
		<enum name="eAPL_TYPE_MCP" value="248">
            <documentation>
                <brief>Mini Switch Monitor (Interrupt): 55000-832
				XP95 MCP: 55100-905</brief>
            </documentation>
        </enum>
    </type>
	
	<type id="type_0241" name="tRIDX_APL_ThresholdSet_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>RIDX to the object tDDS_APL_ThresholdSet_t</brief>
        </documentation>
    </type>
	
	<type id="type_0242" name="tRIDX_APL_DiscoverySet_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>RIDX to the object tRIDX_APL_DiscoverySet_t</brief>
        </documentation>
    </type>
	
	<type id="type_0243" name="tRIDX_APL_Threshold_t" cat="alias" origin="type_0001" size="1" padding="1" display="hex16">
        <documentation>
            <brief>Apollo threshold [0; 127]</brief>
        </documentation>
    </type>
	
	<type id="type_0244" name="eApolloDiscoveryConfigType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Discovery Apollo device specific configuration</brief>
        </documentation>
        <enum name="eAPL_DISCO_CONFIG_UNUSED" value="0">
            <documentation>
                <brief>Discovery specifc fonctionnalities are not used</brief>
            </documentation>
        </enum>
		<enum name="eAPL_DISCO_CONFIG_DAY_NIGHT">
            <documentation>
                <brief>Discovery day night specifc fonctionnalities</brief>
            </documentation>
        </enum>
		<enum name="eAPL_DISCO_CONFIG_SOUNDERS">
            <documentation>
                <brief>Discovery sounders specifc fonctionnalities are not used</brief>
            </documentation>
        </enum>
	</type>
	
	<type id="type_0245" name="eApolloInputType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Discovery Apollo device specific configuration</brief>
        </documentation>
        <enum name="eAPL_INPUT_TYPE_UNUSED" value="0">
            <documentation>
                <brief>Input is not used</brief>
            </documentation>
        </enum>
		<enum name="eAPL_INPUT_TYPE_THRESHOLD">
            <documentation>
                <brief>Input state is sent by the threshold</brief>
            </documentation>
        </enum>
		<enum name="eAPL_INPUT_TYPE_THRESHOLD_AND_BIT_0">
            <documentation>
                <brief>Input state is sent by the threshold and a logic bit</brief>
            </documentation>
        </enum>
		<enum name="eAPL_INPUT_TYPE_BIT_1">
            <documentation>
                <brief>Input state is sent by a logic bit</brief>
            </documentation>
        </enum>
	</type>
	
	<type id="type_0246" name="tDeviceBehaviorText_t" cat="alias" size="14" padding="2" origin="type_0003" display="text" >
        <documentation>
            <brief>7 UTF-16 characters text which subscribe the device behavior</brief>
        </documentation>
    </type>
	
	<type id="type_0247" name="tModuleTypeText_t" cat="alias" size="18" padding="2" origin="type_0003" display="text" >
        <documentation>
            <brief>9 UTF-16 characters text which defines module commercial name</brief>
        </documentation>    </type>
	
    <type id="type_0248" name="tRIDX_DynDeviceZone_t" cat="alias" origin="type_0112" size="2" padding="2" display="hex16">
        <documentation>
            <brief>PAS IDX to the object tOD_ZoneState_t or tOD_DeviceState_t</brief>
        </documentation>
    </type>

    <type id="type_0249" name="eRS485DataBits_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Data bits associated to RS485</brief>
        </documentation>
        <enum name="eRS485_DATA_BITS_7" >
            <documentation>
                <brief>Each byte contains 7 bits of data</brief>
            </documentation>
        </enum>
        <enum name="eRS485_DATA_BITS_8" >
            <documentation>
                <brief>Each byte contains 8 bits of data</brief>
            </documentation>
        </enum>
		</type>

    <type id="type_0250" name="eRS485Parity_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Parity associated to RS485</brief>
        </documentation>
        <enum name="eRS485_PARITY_NONE" >
            <documentation>
                <brief>Parity bit is ignored, value is indeterminate</brief>
            </documentation>
        </enum>
        <enum name="eRS485_PARITY_ODD" >
            <documentation>
                <brief>Parity bit set so that there is an odd number of 1 bits</brief>
            </documentation>
        </enum>
        <enum name="eRS485_PARITY_EVEN" >
            <documentation>
                <brief>Parity bit set so that there is an even number of 1 bits</brief>
            </documentation>
        </enum>
        <enum name="eRS485_PARITY_MARK" >
            <documentation>
                <brief>Parity bit is always set to 1</brief>
            </documentation>
        </enum>
        <enum name="eRS485_PARITY_SPACE" >
            <documentation>
                <brief>Parity bit is always set to 0</brief>
            </documentation>
        </enum>
		</type>

    <type id="type_0251" name="eRS485StopBits_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Stop bit(s) associated to RS485</brief>
        </documentation>
        <enum name="eRS485_STOP_BITS_1" >
            <documentation>
                <brief>One stop bit is transmitted to indicate the end of a byte</brief>
            </documentation>
        </enum>
        <enum name="eRS485_STOP_BITS_1_5" >
            <documentation>
                <brief>The stop bit is transferred for 150% of the normal time used to transfer one bit</brief>
            </documentation>
        </enum>
        <enum name="eRS485_STOP_BITS_2" >
            <documentation>
                <brief>Two stop bits are transmitted to indicate the end of a byte</brief>
            </documentation>
        </enum>
	</type>

    <type id="type_0253" name="IHM_Port_type" cat="fusion" size="2" padding="2">
		<documentation>
            <brief></brief>
        </documentation>
        <fusion origin="type_0143" offset="0"   name="DNet" />
        <fusion origin="type_0092" offset="256" name="IOR" />
    </type>
	
    <type id="type_0254" name="tFAD_State_t" cat="struct" size="3" padding="1">
        <documentation>
            <brief> FAD link state </brief>
        </documentation>
        <field name="bFAD_CH1_Missing" type="type_0007" >
            <documentation>
                <brief>eSEF_TRUE if FAD RS485 channel 1 is missing </brief>
            </documentation>
        </field>
        <field name="bFAD_CH2_Missing" type="type_0007" >
            <documentation>
                <brief>eSEF_TRUE if FAD RS485 channel 1 is missing </brief>
            </documentation>
        </field>
        <field name="bFAD_HB_Missing" type="type_0007" >
            <documentation>
                <brief>eSEF_TRUE when no heartbeat is received from FAD  </brief>
            </documentation>
        </field>
    </type>

    <type id="type_0255" name="tSubSlotType_t" cat="struct" size="3" padding="1">
        <documentation>
            <brief>Structure to define the Slot/SubSlot pair content Type</brief>
        </documentation>
        <field name="u8SlotNumber" type="type_0001" >
            <documentation>
                <brief>Slot Number</brief>
            </documentation>
        </field>
        <field name="u8SubSlotNumber" type="type_0001" >
            <documentation>
                <brief>SubSlot Number</brief>
            </documentation>
        </field>
        <field name="eSubSlotBoardType" type="type_0072" >
            <documentation>
                <brief>Slot/SubSlot Board Type</brief>
            </documentation>
        </field>
    </type>
	
	<type id="type_0258" name="tRawBuffer_t" cat="alias" origin="type_0001" size="1023" padding="1">
        <documentation>
            <brief>Type which allow to use full object size, to store random datas, without any predefined structure</brief>
        </documentation>
    </type>

	<type id="type_0256" name="eExtBoardType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Stop bit(s) associated to RS485</brief>
        </documentation>
        <enum name="eEXT_TYPE_UNKNOWN" >
            <documentation>
                <brief></brief>
            </documentation>
        </enum>
        <enum name="eEXT_TYPE_ELOT" >
            <documentation>
                <brief>TNET extension board</brief>
            </documentation>
        </enum>
        <enum name="eEXT_TYPE_ELOA" >
            <documentation>
                <brief>Apollo extension board</brief>
            </documentation>
        </enum>
		<enum name="eEXT_TYPE_EUGA" >
            <documentation>
                <brief>French evacuation extension board</brief>
            </documentation>
        </enum>
        <enum name="eEXT_TYPE_ELIS" >
            <documentation>
                <brief>2 Sounders lines extension boards</brief>
            </documentation>
        </enum>		
	</type>
	
	<type id="type_0257" name="eLoopState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Stop bit(s) associated to RS485</brief>
        </documentation>
        <enum name="eLOOP_QUIESCENT_STATE" >
            <documentation>
                <brief>Loop is in quiescent state</brief>
            </documentation>
        </enum>
        <enum name="eLOOP_SC" >
            <documentation>
                <brief>There is short-circuit on the loop. The loop is open and 2 disjoncted devices</brief>
            </documentation>
        </enum>
        <enum name="eLOOP_OC" >
            <documentation>
                <brief>The loop is open</brief>
            </documentation>
        </enum>
		<enum name="eLOOP_RESISTIVE_SC" >
            <documentation>
                <brief>There is a resistive short-circuit</brief>
            </documentation>
        </enum>
        <enum name="eLOOP__RESISTIVE_OC" >
            <documentation>
                <brief>There is a resistive open circuit</brief>
            </documentation>
        </enum>		
	</type>

    <type id="type_0261" name="tUAE_SDO_Fwd_t" cat="struct" size="1020" padding="4">
        <documentation>
            <brief>Structure to define an SDO container</brief>
        </documentation>
        <field name="u16RequestID" type="type_0003" count="1">
            <documentation>
            </documentation>
        </field>
        <field name="u32AddrIP" type="type_0005" count="1">
            <documentation>
            </documentation>
        </field>
        <field name="u16ServiceID" type="type_0003" count="1">
            <documentation>
            </documentation>
        </field>
        <field name="u32Index" type="type_0005" count="1">
            <documentation>
            </documentation>
        </field>
        <field name="u16SubIndex" type="type_0003" count="1">
            <documentation>
            </documentation>
        </field>
        <field name="u8Data" type="type_0001" count="1000">
            <documentation>
            </documentation>
        </field>
		<field name="u16DataSize" type="type_0003" count="1">
            <documentation>
            </documentation>
        </field>
    </type>

    <type id="type_0262" name="tUAE_SDO_Fwd_Reply_t" cat="struct" size="1002" padding="2">
        <documentation>
            <brief>Structure to define an SDO container</brief>
        </documentation>
        <field name="u16RequestID" type="type_0003" count="1">
            <documentation>
            </documentation>
        </field>
        <field name="u8Data" type="type_0001" count="1000">
            <documentation>
            </documentation>
        </field>
    </type>
	
	<type id="type_0259" name="eEUGA_Charger_state_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>EUGA battery charger state</brief>
        </documentation>
        <enum name="eEUGA_CHARGER_OFF" >
            <documentation>
                <brief>EUGA battery charger is OFF</brief>
            </documentation>
        </enum>
		<enum name="eEUGA_CHARGER_ON" >
            <documentation>
                <brief>EUGA battery charger is ON</brief>
            </documentation>
        </enum>
		<enum name="eEUGA_CHARGER_FAULT" >
            <documentation>
                <brief>EUGA battery charger is in fault</brief>
            </documentation>
        </enum>
	</type>
	
	<type id="type_0265" name="tUAEFilterConfiguration_t" cat="alias" size="1" padding="1" origin="type_0001">
        <documentation>
            <brief>UAE Filtering configuration bitfield</brief>
            <author>SFA</author>
        </documentation>
    </type>
	
    <type id="type_0263" name="eIdentificationAck" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Return value of a SDO Service Identification request</brief>
            <date>2014-10-14T18:03:55</date>
        </documentation>
        <enum name="eIDENT_OK_DDS_OK" >
            <documentation>
                <brief>Board identification is ok.</brief>
            </documentation>
        </enum>
        <enum name="eIDENT_OK_DDS_NOK" >
            <documentation>
                <brief>Board identification is ok.</brief>
            </documentation>
        </enum>
        <enum name="eIDENT_TYPE_NOK" >
            <documentation>
                <brief>Board type is not expected.</brief>
            </documentation>
        </enum>
        <enum name="eIDENT_SIGNATURE_NOK" >
            <documentation>
                <brief>Board type is ok bug board has bad signature.</brief>
            </documentation>
        </enum>
    </type>

    <type id="type_0266" name="ePowerSupplyType_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Power Supply type</brief>
            <date>2017-01-25T09:03:55</date>
        </documentation>
        <enum name="ePOWERSUPPLY_BP" >
            <documentation>
                <brief>The board is powered by the backplace</brief>
            </documentation>
        </enum>
        <enum name="ePOWERSUPPLY_POE" >
            <documentation>
                <brief>The board is powered by the ethernet port</brief>
            </documentation>
        </enum>
        <enum name="ePOWERSUPPLY_AES" >
            <documentation>
                <brief>The board is powered by the board AES port</brief>
            </documentation>
        </enum>
    </type>

   <type id="type_0267" name="eSerialSlaveLinkState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>State of jbus serial link </brief>
            <date>2017-02-13T09:03:55</date>
        </documentation>	
		<enum name="eSERIAL_SLAVE_NOT_USED" >
            <documentation>
                <brief>RS485 link is not used for JBUS slave</brief>
            </documentation>	
        </enum>		
		<enum name="eSERIAL_SLAVE_SUPERVISOR_OK" >
            <documentation>
                <brief>RS485 link is for supervisor and is OK</brief>
            </documentation>	
        </enum>			
		<enum name="eSERIAL_SLAVE_SUPERVISOR_NOK" >
            <documentation>
                <brief>RS485 link is for supervisor and is NOK</brief>
            </documentation>	
        </enum>
		<enum name="eSERIAL_SLAVE_CMSI_OK" >
            <documentation>
                <brief>RS485 link is for CMSI and is OK</brief>
            </documentation>	
        </enum>			
		<enum name="eSERIAL_SLAVE_CMSI_NOK" >
            <documentation>
                <brief>RS485 link is for SDI and is NOK</brief>
            </documentation>	
        </enum>			
    </type>
	
   <type id="type_0268" name="eETHPortLinkState_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Current state of the Ethernet port </brief>
            <date>2017-02-13T09:03:55</date>
        </documentation>	
		<enum name="eETH_LINK_NOT_CONFIGURED" >
            <documentation>
                <brief>The ethernet port is not configured</brief>
            </documentation>	
        </enum>		
		<enum name="eETH_LINK_UAE_DOWN" >
            <documentation>
                <brief>The given port is configured as UAE port, and is down</brief>
            </documentation>	
        </enum>			
		<enum name="eETH_LINK_UAE_UP" >
            <documentation>
                <brief>The given port is configured as UAE port, and is up</brief>
            </documentation>	
        </enum>
		<enum name="eETH_LINK_SNTL_DOWN" >
            <documentation>
                <brief>The given port is configured as Sentinel port, and is down</brief>
            </documentation>	
        </enum>			
		<enum name="eETH_LINK_SNTL_UP" >
            <documentation>
                <brief>The given port is configured as Sentinel port, and is up</brief>
            </documentation>	
        </enum>			
    </type>
    
    <type id="type_0270" name="eINetModule_Command_t" cat="enum" size="1" padding="1">
		<documentation>
		    <brief>Enum value, to set which command is used</brief>
		</documentation>
		<enum name="eINET_MOD_CMD_PLC_FACTORY_SETTING_RST" >
            <documentation>
                <brief>Command used to reset CPL setteing to factory values, this command take one 1-byte sized argument : 0 for PLC INet 1, 1 for PLC INet 2, 2 for both PLC INet</brief>
            </documentation>
        </enum>		
    </type>
	
	<type id="type_0377" name="tDDS_TRHGSectorEquipmentParam" cat="struct" size="3" padding="1">
	 <documentation>
            <brief>TR HG equipement paramter</brief>
     </documentation>	
		<field name="eReportType" type="type_0260" count="1">
             <documentation>
                <brief>Which kind of information has to be reported for that equipment on this sector</brief>
             </documentation>
        </field>
		<field name="eEquipType" type="type_0069" count="1">
              <documentation>
                 <brief>Equipment type</brief>
                 <description>Can be ECS/CMSI/...</description>
              </documentation>
        </field>		  
        <field name="u8EquipmentID" type="type_0001" count="1">
              <documentation>
                  <brief>Equipment ID </brief>
              </documentation>
         </field>
	</type>
	
	<type id="type_0269" name="tDDS_TRHGDevice_List_t" cat="struct" size="512" padding="2">
	    <documentation>
            <brief>TR-HG Sector definition</brief>
        </documentation>	
			  <field name="xDeviceRIDX" type="type_0003" count="256">
					<documentation>
						<brief>256 Devices RIDX list</brief>
					</documentation>
              </field>
	</type>
	
   <type id="type_0370" name="eTRHG_Mode_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>TR HG ERP ARP mode</brief>
        </documentation>	
		<enum name="eTRHG_MODE_ERP" >
            <documentation>
                <brief>ERP Mode</brief>
            </documentation>	
        </enum>		
		<enum name="eTRHG_MODE_ARP" >
            <documentation>
                <brief>ARP mode</brief>
            </documentation>	
        </enum>			
    </type>	
	
   <type id="type_0371" name="tSectorFD_mask_t" cat="bitfield" size="2" padding="1">
        <documentation>
            <brief>fields for sector FD mask for TR-HG config</brief>
            <date>2017-03-16T10:33:55</date>
            <author>mlok</author>
        </documentation>
        <bfield name="Alarm" size="1" type="type_0007">
            <documentation>
                <brief>Alarm state of FD sector is enable </brief>
            </documentation>
        </bfield>
		<bfield name="Fault" size="1" type="type_0007">
            <documentation>
                <brief>Fault state of FD sector is enable </brief>
            </documentation>
        </bfield>
		<bfield name="Disabled" size="1" type="type_0007">
            <documentation>
                <brief>Disabled state of FD sector is enable </brief>
            </documentation>
        </bfield>
		<bfield name="Test" size="1" type="type_0007">
            <documentation>
                <brief>Test state of FD sector is enable </brief>
            </documentation>
        </bfield>
		<bfield name="Technical fault" size="1" type="type_0007">
            <documentation>
                <brief>Technical fault state of FD sector is enable </brief>
            </documentation>
        </bfield>
		<bfield name="Pre alarm" size="1" type="type_0007">
            <documentation>
                <brief>Pre Alarm state of FD sector is enable </brief>
            </documentation>
        </bfield>
	    <bfield name="Technical alarm" size="1" type="type_0007">
            <documentation>
                <brief>Technical alarm state of FD sector is enable </brief>
            </documentation>
        </bfield>	
    </type>		

   <type id="type_0372" name="tSectorEVC_mask_t" cat="bitfield" size="2" padding="1">
        <documentation>
            <brief>fields for sector Evacuation mask for TR-HG config</brief>
            <date>2017-03-16T10:33:55</date>
            <author>mlok</author>
        </documentation>
        <bfield name="Function Alarm" size="1" type="type_0007">
            <documentation>
                <brief>Function Alarm state of EVAC sector is enable </brief>
            </documentation>
        </bfield>
	      <bfield name="Commanded" size="1" type="type_0007">
            <documentation>
                <brief>Commanded state of EVAC sector is enable </brief>
            </documentation>
        </bfield>
		<bfield name="Function manual mode" size="1" type="type_0007">
            <documentation>
                <brief>Function in manual mode state of EVAC sector is enable </brief>
            </documentation>
        </bfield>
		<bfield name="Fault" size="1" type="type_0007">
            <documentation>
                <brief>Function Alarm state of EVAC sector is enable </brief>
            </documentation>
        </bfield>
		<bfield name="Test" size="1" type="type_0007">
            <documentation>
                <brief>Function Alarm state of EVAC sector is enable </brief>
            </documentation>
        </bfield>
		<bfield name="Disabled" size="1" type="type_0007">
            <documentation>
                <brief>Function Alarm state of EVAC sector is enable </brief>
            </documentation>
        </bfield>
     </type>	

    <type id="type_0373" name="tSectorFS_mask_t" cat="bitfield" size="2" padding="1">
        <documentation>
            <brief>fields for sector fire Safety mask for TR-HG config</brief>
            <date>2017-03-16T10:33:55</date>
            <author>mlok</author>
        </documentation>
        <bfield name="Security" size="1" type="type_0007">
            <documentation>
                <brief>Security state of FS sector is enable </brief>
            </documentation>
        </bfield>
        <bfield name="Security fault" size="1" type="type_0007">
            <documentation>
                <brief>Security fault state of FS sector is enable </brief>
            </documentation>
        </bfield>
        <bfield name="Commanded" size="1" type="type_0007">
            <documentation>
                <brief>Commanded of FS sector is enable </brief>
            </documentation>
        </bfield>
        <bfield name="Fault" size="1" type="type_0007">
            <documentation>
                <brief>Fault state of FS sector is enable </brief>
            </documentation>
        </bfield>
        <bfield name="Standby fault" size="1" type="type_0007">
            <documentation>
                <brief>Standby fault state of FS sector is enable </brief>
            </documentation>
        </bfield>
        <bfield name="Test" size="1" type="type_0007">
            <documentation>
                <brief>Test state of FS sector is enable </brief>
            </documentation>
        </bfield>		
        <bfield name="Disabled" size="1" type="type_0007">
            <documentation>
                <brief>Disabled state of FS sector is enable </brief>
            </documentation>
        </bfield>						
     </type>	
	 
   <type id="type_0374" name="tSectorES_mask_t" cat="bitfield" size="2" padding="1">
        <documentation>
            <brief>fields for sector Extinguishing mask for TR-HG config</brief>
            <date>2017-03-16T10:33:55</date>
            <author>mlok</author>
        </documentation>
        <bfield name="Commanded" size="1" type="type_0007">
            <documentation>
                <brief>Commanded state of ES sector is enable </brief>
            </documentation>
        </bfield>	
        <bfield name="Transmitted" size="1" type="type_0007">
            <documentation>
                <brief>Transmitted state of ES sector is enable </brief>
            </documentation>
        </bfield>
        <bfield name="Fault" size="1" type="type_0007">
            <documentation>
                <brief>Fault state of ES sector is enable </brief>
            </documentation>
        </bfield>	
		        <bfield name="Emergency stop" size="1" type="type_0007">
            <documentation>
                <brief>Emergency stop state of ES sector is enable </brief>
            </documentation>
        </bfield>	
		        <bfield name="Neutralized" size="1" type="type_0007">
            <documentation>
                <brief>Neutralized, Disabled (function and device), Function in Test Function in manual mode  state of ES sector is enable </brief>
            </documentation>
        </bfield>	
		        <bfield name="manual mode" size="1" type="type_0007">
            <documentation>
                <brief>manual mode state of ES sector is enable </brief>
            </documentation>
        </bfield>	
     </type>		
	
   <type id="type_0375" name="eTRHG_Language_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>TR HG default language</brief>
        </documentation>	
		<enum name="eTRHG_LANG_ENGLISH" >
            <documentation>
                <brief>English as default language</brief>
            </documentation>	
        </enum>		
		<enum name="eTRHG_LANG_FILE_1" >
            <documentation>
                <brief>language file 1 as default language</brief>
            </documentation>	
        </enum>
		<enum name="eTRHG_LANG_FILE_2" >
            <documentation>
                <brief>language file 2 as default language</brief>
            </documentation>	
        </enum>		
    </type>		
	
	<type id="type_0376" name="eTRHG_CustomCmd_t" cat="enum" size="1" padding="1">
        <documentation>
            <brief>Custom Command on TR-HG</brief>
        </documentation>	
		<enum name="eTRHG_CUSTOM_CMD_UNUSED" >
            <documentation>
                <brief>custom command not used</brief>
            </documentation>	
        </enum>
		<enum name="eTRHG_CUSTOM_CMD_RESET" >
            <documentation>
                <brief>custom command used for reset </brief>
            </documentation>	
        </enum>		
		<enum name="eTRHG_CUSTOM_CMD_EVAC" >
            <documentation>
                <brief>custom command used for evacuation</brief>
            </documentation>	
        </enum>		
		<enum name="eTRHG_CUSTOM_CMD_SILENCE" >
            <documentation>
                <brief>custom command used for resound</brief>
            </documentation>	
        </enum>	
		<enum name="eTRHG_CUSTOM_CMD_RESOUND" >
            <documentation>
                <brief>custom command used for resound</brief>
            </documentation>	
        </enum>		
		<enum name="eTRHG_CUSTOM_CMD_LANGUAGE_SWITCH" >
            <documentation>
                <brief>custom command used for language swicth</brief>
            </documentation>	
        </enum>	
	</type>		
		
    <type id="type_0271" name="tFBFLed_t" cat="bitfield" size="2" padding="2">
        <documentation>
            <brief>contains a bitfield for the LEDs of FBF</brief>
            <author>mlok</author>
        </documentation>
        <bfield name="ACTIVATED" size="1" type="type_0007">
            <documentation>
                <brief>FBF_LED_ATU_ACTIVATED on</brief>
            </documentation>
        </bfield>
		<bfield name="EXTINGUISHING ACTIVATED" size="1" type="type_0007">
            <documentation>
                <brief>FBF_LED_EXTINGUISHING_ACTIVATED on</brief>
            </documentation>
        </bfield>
		<bfield name="FIRECONTROL DISABLED" size="1" type="type_0007">
            <documentation>
                <brief>FBF_LED_FIRECONTROL_DISABLED on</brief>
            </documentation>
        </bfield>
		<bfield name="SOUNDER DISABLED" size="1" type="type_0007">
            <documentation>
                <brief>FBF_LED_SOUNDER_DISABLED on</brief>
            </documentation>
        </bfield>
		<bfield name="ALARM" size="1" type="type_0007">
            <documentation>
                <brief>FBF_LED_ALARM on</brief>
            </documentation>
        </bfield>
		<bfield name="ATU DISABLED" size="1" type="type_0007">
            <documentation>
                <brief>FBF_LED_ATU_DISABLED on</brief>
            </documentation>
        </bfield>
		<bfield name="GENERAL FAULT" size="1" type="type_0007">
            <documentation>
                <brief>FBF_LED_GENERAL_FAULT on</brief>
            </documentation>
        </bfield>
	</type>	
    <type id="type_0272" name="tFBFButton_t" cat="bitfield" size="2" padding="2">
        <documentation>
            <brief>contains a bitfield for the buttons state of FBF</brief>
            <author>mlok</author>
        </documentation>	
        <bfield name="ATU TEST" size="1" type="type_0007">
            <documentation>
                <brief>FBF_BTN_ ATU_TEST on</brief>
            </documentation>
        </bfield>
        <bfield name="DAY NIGHT" size="1" type="type_0007">
            <documentation>
                <brief>FBF_BTN_DAY_NIGHT on</brief>
            </documentation>
        </bfield>
        <bfield name="FIRECONTROL DISABLE" size="1" type="type_0007">
            <documentation>
                <brief>FBF_BTN_FIRECONTROL_DISABLE on</brief>
            </documentation>
        </bfield>
        <bfield name="SOUNDER DISABLE" size="1" type="type_0007">
            <documentation>
                <brief>FBF_BTN_SOUNDER_DISABLE on</brief>
            </documentation>
        </bfield>
        <bfield name="PANEL RESET" size="1" type="type_0007">
            <documentation>
                <brief>FBF_BTN_PANEL_RESET on</brief>
            </documentation>
        </bfield>
        <bfield name="ATU DISABLE" size="1" type="type_0007">
            <documentation>
                <brief>FBF_BTN_ATU_DISABLE on</brief>
            </documentation>
        </bfield>
        <bfield name="BUZZER OFF" size="1" type="type_0007">
            <documentation>
                <brief>FBF_BTN_BUZZER_OFF on</brief>
            </documentation>
        </bfield>
        <bfield name="SOUNDER SILENCE" size="1" type="type_0007">
            <documentation>
                <brief>FBF_BTN_SOUNDER_SILENCE on</brief>
            </documentation>
        </bfield>
    </type>	
		
    <type id="type_0273" name="tMPEFaults_t" cat="bitfield" size="2" padding="1">
        <documentation>
            <brief>contains a bitfield for the specific fault of MPE</brief>
            <author>mlok</author>
        </documentation>
		<bfield name="V_AUX1" size="1" type="type_0007">
            <documentation>
                <brief>V_AUX1 fault on</brief>
            </documentation>
        </bfield>	
		<bfield name="V_AUX2" size="1" type="type_0007">
            <documentation>
                <brief>V_AUX2 fault on</brief>
            </documentation>
        </bfield>	
		<bfield name="I_AUX" size="1" type="type_0007">
            <documentation>
                <brief>I_AUX fault on</brief>
            </documentation>
        </bfield>
		<bfield name="V_4_3" size="1" type="type_0007">
            <documentation>
                <brief>V_4_3 fault on</brief>
            </documentation>
        </bfield>		
		<bfield name="I_DINRaiL" size="1" type="type_0007">
            <documentation>
                <brief>I_DINRaiL fault on</brief>
            </documentation>
        </bfield>	
		<bfield name="V_ExtensionBoards" size="1" type="type_0007">
            <documentation>
                <brief>V_ExtensionBoards fault on</brief>
            </documentation>
        </bfield>	
		<bfield name="I_ExtensionBoards" size="1" type="type_0007">
            <documentation>
                <brief>I_ExtensionBoards fault on</brief>
            </documentation>
        </bfield>		
    </type>

    <type id="type_0274" name="tPartner_t" cat="struct" size="3" padding="1">
        <documentation>
            <brief>Partner Identification</brief>
            <author>AGO</author>
        </documentation>
		<field name="xEquipmentType" type="type_0069" count="1">
            <documentation>
                <brief>Equipment type where the partner is localized</brief>
            </documentation>
        </field>	
		<field name="xEquipmentNumber" type="type_0001" count="1">
            <documentation>
                <brief>Equipment Number where the partner is localized</brief>
            </documentation>
        </field>	
		<field name="xSlotSSlot" type="type_0001" count="1">
            <documentation>
                <brief>Partner field = Slot x 10 + SSlot where the partner is localized</brief>
            </documentation>
        </field>	
    </type>
	
	<type id="type_0275" name="eTriggeredTestMode_t" cat="enum" size="1" padding="1">
	<documentation>
		<brief>Triggered test mode </brief>
		<author>AES</author>
	</documentation>
		<enum name="eTRIGGERED_TESTMODE_OFF">
		<documentation>
			<brief>No triggered in test mode.</brief>
		</documentation>
		</enum>
		<enum name="eTRIGGERED_TESTMODE_PARTIAL">
		<documentation>
			<brief>a part of the triggered are in test mode.</brief>
		</documentation>
		</enum>
		<enum name="eTRIGGERED_TESTMODE_ON ">
		<documentation>
			<brief>all the triggered are in test mode.</brief>
		</documentation>
		</enum>
	</type>

			
</OD_types>

<!-- vim: set ts=4 sw=4 foldmethod=indent expandtab:-->
